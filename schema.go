package cloudformation

import "time"
import "encoding/json"

// CustomResourceProvider allows extend the NewResourceByType factory method
// with their own resource types.
type CustomResourceProvider func(customResourceType string) ResourceProperties

var customResourceProviders []CustomResourceProvider

// Register a CustomResourceProvider with go-cloudformation. Multiple
// providers may be registered. The first provider that returns a non-nil
// interface will be used and there is no check for a uniquely registered
// resource type.
func RegisterCustomResourceProvider(provider CustomResourceProvider) {
	customResourceProviders = append(customResourceProviders, provider)
}

// ApiGatewayAccount represents AWS::ApiGateway::Account
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-account.html
type ApiGatewayAccount struct {
	// The Amazon Resource Name (ARN) of an IAM role that has write access to
	// CloudWatch Logs in your account.
	CloudWatchRoleArn *StringExpr `json:"CloudWatchRoleArn,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::Account to implement the ResourceProperties interface
func (s ApiGatewayAccount) CfnResourceType() string {
	return "AWS::ApiGateway::Account"
}

// ApiGatewayApiKey represents AWS::ApiGateway::ApiKey
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html
type ApiGatewayApiKey struct {
	// An AWS Marketplace customer identifier to use when integrating with
	// the AWS SaaS Marketplace.
	CustomerId *StringExpr `json:"CustomerId,omitempty"`

	// A description of the purpose of the API key.
	Description *StringExpr `json:"Description,omitempty"`

	// Indicates whether the API key can be used by clients.
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// Specifies whether the key identifier is distinct from the created API
	// key value.
	GenerateDistinctId *BoolExpr `json:"GenerateDistinctId,omitempty"`

	// A name for the API key. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// API key name. For more information, see Name Type.
	Name *StringExpr `json:"Name,omitempty"`

	// A list of stages to associate with this API key.
	StageKeys *APIGatewayApiKeyStageKeyList `json:"StageKeys,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::ApiKey to implement the ResourceProperties interface
func (s ApiGatewayApiKey) CfnResourceType() string {
	return "AWS::ApiGateway::ApiKey"
}

// ApiGatewayAuthorizer represents AWS::ApiGateway::Authorizer
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html
type ApiGatewayAuthorizer struct {
	// An optional customer-defined field that's used in Swagger imports and
	// exports without functional impact.
	AuthType *StringExpr `json:"AuthType,omitempty"`

	// The credentials that are required for the authorizer. To specify an
	// AWS Identity and Access Management (IAM) role that API Gateway
	// assumes, specify the role's Amazon Resource Name (ARN). To use
	// resource-based permissions on the AWS Lambda (Lambda) function,
	// specify null.
	AuthorizerCredentials *StringExpr `json:"AuthorizerCredentials,omitempty"`

	// The time-to-live (TTL) period, in seconds, that specifies how long API
	// Gateway caches authorizer results. If you specify a value greater than
	// 0, API Gateway caches the authorizer responses. By default, API
	// Gateway sets this property to 300. The maximum value is 3600, or 1
	// hour.
	AuthorizerResultTtlInSeconds *IntegerExpr `json:"AuthorizerResultTtlInSeconds,omitempty"`

	// The authorizer's Uniform Resource Identifier (URI). If you specify
	// TOKEN for the authorizer's Type property, specify a Lambda function
	// URI that has the form arn:aws:apigateway:region:lambda:path/path. The
	// path usually has the form
	// /2015-03-31/functions/LambdaFunctionARN/invocations.
	AuthorizerUri *StringExpr `json:"AuthorizerUri,omitempty"`

	// The source of the identity in an incoming request. If you specify
	// TOKEN for the authorizer's Type property, specify a mapping
	// expression. The custom header mapping expression has the form
	// method.request.header.name, where name is the name of a custom
	// authorization header that clients submit as part of their requests.
	IdentitySource *StringExpr `json:"IdentitySource,omitempty"`

	// A validation expression for the incoming identity. If you specify
	// TOKEN for the authorizer's Type property, specify a regular
	// expression. API Gateway uses the expression to attempt to match the
	// incoming client token, and proceeds if the token matches. If the token
	// doesn't match, API Gateway responds with a 401 (unauthorized request)
	// error code.
	IdentityValidationExpression *StringExpr `json:"IdentityValidationExpression,omitempty"`

	// The name of the authorizer.
	Name *StringExpr `json:"Name,omitempty"`

	// A list of the Amazon Cognito user pool Amazon Resource Names (ARNs) to
	// associate with this authorizer. For more information, see Use Amazon
	// Cognito Your User Pool in the API Gateway Developer Guide.
	ProviderARNs interface{} `json:"ProviderARNs,omitempty"`

	// The ID of the RestApi resource that API Gateway creates the authorizer
	// in.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`

	// The type of authorizer:
	Type *StringExpr `json:"Type,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::Authorizer to implement the ResourceProperties interface
func (s ApiGatewayAuthorizer) CfnResourceType() string {
	return "AWS::ApiGateway::Authorizer"
}

// ApiGatewayBasePathMapping represents AWS::ApiGateway::BasePathMapping
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html
type ApiGatewayBasePathMapping struct {
	// The base path name that callers of the API must provide in the URL
	// after the domain name. If you specify this property, it can't be an
	// empty string.
	BasePath *StringExpr `json:"BasePath,omitempty"`

	// The domain name of a DomainName resource.
	DomainName *StringExpr `json:"DomainName,omitempty"`

	// The name of the API.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`

	// The name of the API's stage.
	Stage *StringExpr `json:"Stage,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::BasePathMapping to implement the ResourceProperties interface
func (s ApiGatewayBasePathMapping) CfnResourceType() string {
	return "AWS::ApiGateway::BasePathMapping"
}

// ApiGatewayClientCertificate represents AWS::ApiGateway::ClientCertificate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-clientcertificate.html
type ApiGatewayClientCertificate struct {
	// A description of the client certificate.
	Description *StringExpr `json:"Description,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::ClientCertificate to implement the ResourceProperties interface
func (s ApiGatewayClientCertificate) CfnResourceType() string {
	return "AWS::ApiGateway::ClientCertificate"
}

// ApiGatewayDeployment represents AWS::ApiGateway::Deployment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html
type ApiGatewayDeployment struct {
	// A description of the purpose of the API Gateway deployment.
	Description *StringExpr `json:"Description,omitempty"`

	// The ID of the RestApi resource to deploy.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`

	// Configures the stage that API Gateway creates with this deployment.
	StageDescription *APIGatewayDeploymentStageDescription `json:"StageDescription,omitempty"`

	// A name for the stage that API Gateway creates with this deployment.
	// Use only alphanumeric characters.
	StageName *StringExpr `json:"StageName,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::Deployment to implement the ResourceProperties interface
func (s ApiGatewayDeployment) CfnResourceType() string {
	return "AWS::ApiGateway::Deployment"
}

// ApiGatewayDocumentationPart represents AWS::ApiGateway::DocumentationPart
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html
type ApiGatewayDocumentationPart struct {
	// The location of the API entity that the documentation applies to.
	Location *APIGatewayDocumentationPartLocation `json:"Location,omitempty"`

	// The documentation content map of the targeted API entity.
	Properties *StringExpr `json:"Properties,omitempty"`

	// The identifier of the targeted API entity.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::DocumentationPart to implement the ResourceProperties interface
func (s ApiGatewayDocumentationPart) CfnResourceType() string {
	return "AWS::ApiGateway::DocumentationPart"
}

// ApiGatewayDocumentationVersion represents AWS::ApiGateway::DocumentationVersion
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html
type ApiGatewayDocumentationVersion struct {
	// The description of the API documentation snapshot.
	Description *StringExpr `json:"Description,omitempty"`

	// The version identifier of the API documentation snapshot.
	DocumentationVersion *StringExpr `json:"DocumentationVersion,omitempty"`

	// The identifier of the targeted API entity.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::DocumentationVersion to implement the ResourceProperties interface
func (s ApiGatewayDocumentationVersion) CfnResourceType() string {
	return "AWS::ApiGateway::DocumentationVersion"
}

// ApiGatewayDomainName represents AWS::ApiGateway::DomainName
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html
type ApiGatewayDomainName struct {
	// The reference to an AWS-managed certificate for use by the
	// edge-optimized endpoint for this domain name. AWS Certificate Manager
	// is the only supported source. For requirements and additional
	// information about setting up certificates, see Get Certificates Ready
	// in AWS Certificate Manager in the API Gateway Developer Guide.
	CertificateArn *StringExpr `json:"CertificateArn,omitempty"`

	// The custom domain name for your API in Amazon API Gateway.
	DomainName *StringExpr `json:"DomainName,omitempty"`

	// A list of the endpoint types of the domain name.
	EndpointConfiguration *APIGatewayDomainNameEndpointConfiguration `json:"EndpointConfiguration,omitempty"`

	// The reference to an AWS-managed certificate for use by the regional
	// endpoint for the domain name. AWS Certificate Manager is the only
	// supported source.
	RegionalCertificateArn interface{} `json:"RegionalCertificateArn,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::DomainName to implement the ResourceProperties interface
func (s ApiGatewayDomainName) CfnResourceType() string {
	return "AWS::ApiGateway::DomainName"
}

// ApiGatewayGatewayResponse represents AWS::ApiGateway::GatewayResponse
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html
type ApiGatewayGatewayResponse struct {
	// The response parameters (paths, query strings, and headers) for the
	// response. Duplicates not allowed.
	ResponseParameters interface{} `json:"ResponseParameters,omitempty"`

	// The response templates for the response. Duplicates not allowed.
	ResponseTemplates interface{} `json:"ResponseTemplates,omitempty"`

	// The response type. For valid values, see GatewayResponse in the API
	// Gateway API Reference.
	ResponseType interface{} `json:"ResponseType,omitempty"`

	// The identifier of the targeted API entity.
	RestApiId interface{} `json:"RestApiId,omitempty"`

	// The HTTP status code for the response.
	StatusCode interface{} `json:"StatusCode,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::GatewayResponse to implement the ResourceProperties interface
func (s ApiGatewayGatewayResponse) CfnResourceType() string {
	return "AWS::ApiGateway::GatewayResponse"
}

// ApiGatewayMethod represents AWS::ApiGateway::Method
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html
type ApiGatewayMethod struct {
	// Indicates whether the method requires clients to submit a valid API
	// key.
	ApiKeyRequired *BoolExpr `json:"ApiKeyRequired,omitempty"`

	// The method's authorization type.
	AuthorizationType *StringExpr `json:"AuthorizationType,omitempty"`

	// The identifier of the authorizer to use on this method. If you specify
	// this property, specify CUSTOM for the AuthorizationType property.
	AuthorizerId *StringExpr `json:"AuthorizerId,omitempty"`

	// The HTTP method that clients use to call this method.
	HttpMethod *StringExpr `json:"HttpMethod,omitempty"`

	// The backend system that the method calls when it receives a request.
	Integration *APIGatewayMethodIntegration `json:"Integration,omitempty"`

	// The responses that can be sent to the client who calls the method.
	MethodResponses *APIGatewayMethodMethodResponseList `json:"MethodResponses,omitempty"`

	// A friendly operation name for the method. For example, you can assign
	// the OperationName of ListPets for the GET /pets method.
	OperationName *StringExpr `json:"OperationName,omitempty"`

	// The resources that are used for the response's content type. Specify
	// response models as key-value pairs (string-to-string mapping), with a
	// content type as the key and a Model resource name as the value.
	RequestModels interface{} `json:"RequestModels,omitempty"`

	// The request parameters that API Gateway accepts. Specify request
	// parameters as key-value pairs (string-to-Boolean mapping), with a
	// source as the key and a Boolean as the value. The Boolean specifies
	// whether a parameter is required. A source must match the format
	// method.request.location.name, where the location is querystring, path,
	// or header, and name is a valid, unique parameter name.
	RequestParameters interface{} `json:"RequestParameters,omitempty"`

	// The ID of the associated request validator.
	RequestValidatorId *StringExpr `json:"RequestValidatorId,omitempty"`

	// The ID of an API Gateway resource. For root resource methods, specify
	// the RestApi root resource ID, such as { "Fn::GetAtt": ["MyRestApi",
	// "RootResourceId"] }.
	ResourceId *StringExpr `json:"ResourceId,omitempty"`

	// The ID of the RestApi resource in which API Gateway creates the
	// method.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::Method to implement the ResourceProperties interface
func (s ApiGatewayMethod) CfnResourceType() string {
	return "AWS::ApiGateway::Method"
}

// ApiGatewayModel represents AWS::ApiGateway::Model
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html
type ApiGatewayModel struct {
	// The content type for the model.
	ContentType *StringExpr `json:"ContentType,omitempty"`

	// A description that identifies this model.
	Description *StringExpr `json:"Description,omitempty"`

	// A name for the model. If you don't specify a name, AWS CloudFormation
	// generates a unique physical ID and uses that ID for the model name.
	// For more information, see Name Type.
	Name *StringExpr `json:"Name,omitempty"`

	// The ID of a REST API with which to associate this model.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`

	// The schema to use to transform data to one or more output formats.
	// Specify null ({}) if you don't want to specify a schema.
	Schema interface{} `json:"Schema,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::Model to implement the ResourceProperties interface
func (s ApiGatewayModel) CfnResourceType() string {
	return "AWS::ApiGateway::Model"
}

// ApiGatewayRequestValidator represents AWS::ApiGateway::RequestValidator
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html
type ApiGatewayRequestValidator struct {
	// The name of this request validator.
	Name *StringExpr `json:"Name,omitempty"`

	// The identifier of the targeted API entity.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`

	// Indicates whether to validate the request body according to the
	// configured schema for the targeted API and method.
	ValidateRequestBody *BoolExpr `json:"ValidateRequestBody,omitempty"`

	// Indicates whether to validate request parameters.
	ValidateRequestParameters *BoolExpr `json:"ValidateRequestParameters,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::RequestValidator to implement the ResourceProperties interface
func (s ApiGatewayRequestValidator) CfnResourceType() string {
	return "AWS::ApiGateway::RequestValidator"
}

// ApiGatewayResource represents AWS::ApiGateway::Resource
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html
type ApiGatewayResource struct {
	// If you want to create a child resource, the ID of the parent resource.
	// For resources without a parent, specify the RestApi root resource ID,
	// such as { "Fn::GetAtt": ["MyRestApi", "RootResourceId"] }.
	ParentId *StringExpr `json:"ParentId,omitempty"`

	// A path name for the resource.
	PathPart *StringExpr `json:"PathPart,omitempty"`

	// The ID of the RestApi resource in which you want to create this
	// resource.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::Resource to implement the ResourceProperties interface
func (s ApiGatewayResource) CfnResourceType() string {
	return "AWS::ApiGateway::Resource"
}

// ApiGatewayRestApi represents AWS::ApiGateway::RestApi
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html
type ApiGatewayRestApi struct {
	// The list of binary media types that are supported by the RestApi
	// resource, such as image/png or application/octet-stream. By default,
	// RestApi supports only UTF-8-encoded text payloads. For more
	// information, see Enable Support for Binary Payloads in API Gateway in
	// the API Gateway Developer Guide. Duplicates are not allowed.
	BinaryMediaTypes interface{} `json:"BinaryMediaTypes,omitempty"`

	// An OpenAPI specification that defines a set of RESTful APIs in the
	// JSON format. For YAML templates, you can also provide the
	// specification in the YAML format.
	Body interface{} `json:"Body,omitempty"`

	// The Amazon Simple Storage Service (Amazon S3) location that points to
	// an OpenAPI file, which defines a set of RESTful APIs in JSON or YAML
	// format.
	BodyS3Location *APIGatewayRestApiS3Location `json:"BodyS3Location,omitempty"`

	// The ID of the API Gateway RestApi resource that you want to clone.
	CloneFrom *StringExpr `json:"CloneFrom,omitempty"`

	// A description of the purpose of this API Gateway RestApi resource.
	Description *StringExpr `json:"Description,omitempty"`

	// A list of the endpoint types of the API.
	EndpointConfiguration *APIGatewayRestApiEndpointConfiguration `json:"EndpointConfiguration,omitempty"`

	// Indicates whether to roll back the resource if a warning occurs while
	// API Gateway is creating the RestApi resource.
	FailOnWarnings *BoolExpr `json:"FailOnWarnings,omitempty"`

	// A name for the API Gateway RestApi resource.
	Name *StringExpr `json:"Name,omitempty"`

	// Custom header parameters for the request.
	Parameters *StringExpr `json:"Parameters,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::RestApi to implement the ResourceProperties interface
func (s ApiGatewayRestApi) CfnResourceType() string {
	return "AWS::ApiGateway::RestApi"
}

// ApiGatewayStage represents AWS::ApiGateway::Stage
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html
type ApiGatewayStage struct {
	// Indicates whether cache clustering is enabled for the stage.
	CacheClusterEnabled *BoolExpr `json:"CacheClusterEnabled,omitempty"`

	// The stage's cache cluster size.
	CacheClusterSize *StringExpr `json:"CacheClusterSize,omitempty"`

	// The identifier of the client certificate that API Gateway uses to call
	// your integration endpoints in the stage.
	ClientCertificateId *StringExpr `json:"ClientCertificateId,omitempty"`

	// The ID of the deployment that the stage points to.
	DeploymentId *StringExpr `json:"DeploymentId,omitempty"`

	// A description of the stage's purpose.
	Description *StringExpr `json:"Description,omitempty"`

	// The version identifier of the API documentation snapshot.
	DocumentationVersion *StringExpr `json:"DocumentationVersion,omitempty"`

	// Settings for all methods in the stage.
	MethodSettings *APIGatewayStageMethodSettingList `json:"MethodSettings,omitempty"`

	// The ID of the RestApi resource that you're deploying with this stage.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`

	// The name of the stage, which API Gateway uses as the first path
	// segment in the invoked Uniform Resource Identifier (URI).
	StageName *StringExpr `json:"StageName,omitempty"`

	// A map (string-to-string map) that defines the stage variables, where
	// the variable name is the key and the variable value is the value.
	// Variable names are limited to alphanumeric characters. Values must
	// match the following regular expression: [A-Za-z0-9-._~:/?#&amp;=,]+.
	Variables interface{} `json:"Variables,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::Stage to implement the ResourceProperties interface
func (s ApiGatewayStage) CfnResourceType() string {
	return "AWS::ApiGateway::Stage"
}

// ApiGatewayUsagePlan represents AWS::ApiGateway::UsagePlan
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html
type ApiGatewayUsagePlan struct {
	// The API stages to associate with this usage plan.
	ApiStages *APIGatewayUsagePlanApiStageList `json:"ApiStages,omitempty"`

	// The purpose of this usage plan.
	Description *StringExpr `json:"Description,omitempty"`

	// Configures the number of requests that users can make within a given
	// interval.
	Quota *APIGatewayUsagePlanQuotaSettings `json:"Quota,omitempty"`

	// Configures the overall request rate (average requests per second) and
	// burst capacity.
	Throttle *APIGatewayUsagePlanThrottleSettings `json:"Throttle,omitempty"`

	// A name for this usage plan.
	UsagePlanName *StringExpr `json:"UsagePlanName,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::UsagePlan to implement the ResourceProperties interface
func (s ApiGatewayUsagePlan) CfnResourceType() string {
	return "AWS::ApiGateway::UsagePlan"
}

// ApiGatewayUsagePlanKey represents AWS::ApiGateway::UsagePlanKey
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html
type ApiGatewayUsagePlanKey struct {
	// The ID of the usage plan key.
	KeyId *StringExpr `json:"KeyId,omitempty"`

	// The type of usage plan key. Currently, the valid key type is API_KEY.
	KeyType *StringExpr `json:"KeyType,omitempty"`

	// The value of the usage plan key.
	UsagePlanId *StringExpr `json:"UsagePlanId,omitempty"`
}

// CfnResourceType returns AWS::ApiGateway::UsagePlanKey to implement the ResourceProperties interface
func (s ApiGatewayUsagePlanKey) CfnResourceType() string {
	return "AWS::ApiGateway::UsagePlanKey"
}

// ApplicationAutoScalingScalableTarget represents AWS::ApplicationAutoScaling::ScalableTarget
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html
type ApplicationAutoScalingScalableTarget struct {
	// The maximum value that Application Auto Scaling can use to scale a
	// target during a scaling activity.
	MaxCapacity *IntegerExpr `json:"MaxCapacity,omitempty"`

	// The minimum value that Application Auto Scaling can use to scale a
	// target during a scaling activity.
	MinCapacity *IntegerExpr `json:"MinCapacity,omitempty"`

	// The resource identifier to associate with this scalable target. This
	// string consists of the resource type and unique identifier. For more
	// information, see the ResourceId parameter for the
	// RegisterScalableTarget action in the Application Auto Scaling API
	// Reference, or see the ScalableTarget examples.
	ResourceId *StringExpr `json:"ResourceId,omitempty"`

	// The Amazon Resource Name (ARN) of an AWS Identity and Access
	// Management (IAM) role that allows Application Auto Scaling to modify
	// your scalable target.
	RoleARN *StringExpr `json:"RoleARN,omitempty"`

	// The scalable dimension that's associated with the scalable target.
	// Specify the service namespace, resource type, and scaling
	// property—for example, ecs:service:DesiredCount for the desired task
	// count of an Amazon Elastic Container Service service. For valid
	// values, see the ScalableDimension content for the ScalingPolicy data
	// type in the Application Auto Scaling API Reference.
	ScalableDimension *StringExpr `json:"ScalableDimension,omitempty"`

	// The scheduled actions for the scalable target. Duplicates aren't
	// allowed.
	ScheduledActions *ApplicationAutoScalingScalableTargetScheduledActionList `json:"ScheduledActions,omitempty"`

	// The AWS service namespace of the scalable target. For a list of
	// service namespaces, see AWS Service Namespaces in the AWS General
	// Reference.
	ServiceNamespace *StringExpr `json:"ServiceNamespace,omitempty"`
}

// CfnResourceType returns AWS::ApplicationAutoScaling::ScalableTarget to implement the ResourceProperties interface
func (s ApplicationAutoScalingScalableTarget) CfnResourceType() string {
	return "AWS::ApplicationAutoScaling::ScalableTarget"
}

// ApplicationAutoScalingScalingPolicy represents AWS::ApplicationAutoScaling::ScalingPolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html
type ApplicationAutoScalingScalingPolicy struct {
	// A name for the scaling policy.
	PolicyName *StringExpr `json:"PolicyName,omitempty"`

	// An Application Auto Scaling policy type.
	PolicyType *StringExpr `json:"PolicyType,omitempty"`

	// The unique resource identifier for the scalable target that this
	// scaling policy applies to. For more information, see the ResourceId
	// parameter for the PutScalingPolicy action in the Application Auto
	// Scaling API Reference.
	ResourceId *StringExpr `json:"ResourceId,omitempty"`

	// The scalable dimension of the scalable target that this scaling policy
	// applies to. The scalable dimension contains the service namespace,
	// resource type, and scaling property, such as ecs:service:DesiredCount
	// for the desired task count of an Amazon ECS service.
	ScalableDimension *StringExpr `json:"ScalableDimension,omitempty"`

	// The AWS service namespace of the scalable target that this scaling
	// policy applies to. For a list of service namespaces, see AWS Service
	// Namespaces in the AWS General Reference.
	ServiceNamespace *StringExpr `json:"ServiceNamespace,omitempty"`

	// The AWS CloudFormation-generated ID of an Application Auto Scaling
	// scalable target. For more information about the ID, see the Return
	// Value section of the AWS::ApplicationAutoScaling::ScalableTarget
	// resource.
	ScalingTargetId *StringExpr `json:"ScalingTargetId,omitempty"`

	// A step policy that configures when Application Auto Scaling scales
	// resources up or down, and by how much.
	StepScalingPolicyConfiguration *ApplicationAutoScalingScalingPolicyStepScalingPolicyConfiguration `json:"StepScalingPolicyConfiguration,omitempty"`

	// Configures a target tracking scaling policy.
	TargetTrackingScalingPolicyConfiguration *ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfiguration `json:"TargetTrackingScalingPolicyConfiguration,omitempty"`
}

// CfnResourceType returns AWS::ApplicationAutoScaling::ScalingPolicy to implement the ResourceProperties interface
func (s ApplicationAutoScalingScalingPolicy) CfnResourceType() string {
	return "AWS::ApplicationAutoScaling::ScalingPolicy"
}

// AthenaNamedQuery represents AWS::Athena::NamedQuery
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html
type AthenaNamedQuery struct {
	// A brief description of the query.
	Description interface{} `json:"Description,omitempty"`

	// The SQL query statements that comprise the query.
	QueryString interface{} `json:"QueryString,omitempty"`

	// The database to which the query belongs.
	Database interface{} `json:"Database,omitempty"`

	// The plain-language name of the query.
	Name interface{} `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::Athena::NamedQuery to implement the ResourceProperties interface
func (s AthenaNamedQuery) CfnResourceType() string {
	return "AWS::Athena::NamedQuery"
}

// AutoScalingAutoScalingGroup represents AWS::AutoScaling::AutoScalingGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html
type AutoScalingAutoScalingGroup struct {
	// Contains a list of availability zones for the group.
	AvailabilityZones interface{} `json:"AvailabilityZones,omitempty"`

	// The number of seconds after a scaling activity is completed before any
	// further scaling activities can start.
	Cooldown *StringExpr `json:"Cooldown,omitempty"`

	// Specifies the desired capacity for the Auto Scaling group.
	DesiredCapacity *StringExpr `json:"DesiredCapacity,omitempty"`

	// The length of time in seconds after a new EC2 instance comes into
	// service that Auto Scaling starts checking its health.
	HealthCheckGracePeriod *IntegerExpr `json:"HealthCheckGracePeriod,omitempty"`

	// The service you want the health status from, Amazon EC2 or Elastic
	// Load Balancer. Valid values are EC2 or ELB.
	HealthCheckType *StringExpr `json:"HealthCheckType,omitempty"`

	// The ID of the Amazon EC2 instance you want to use to create the Auto
	// Scaling group. Use this property if you want to create an Auto Scaling
	// group that uses an existing Amazon EC2 instance instead of a launch
	// configuration.
	InstanceId *StringExpr `json:"InstanceId,omitempty"`

	// Specifies the name of the associated
	// AWS::AutoScaling::LaunchConfiguration resource.
	LaunchConfigurationName *StringExpr `json:"LaunchConfigurationName,omitempty"`

	// The lifecycle hooks for the group, which specify actions to perform
	// when Auto Scaling launches or terminates instances. For more
	// information, see Auto Scaling Lifecycle Hooks in the Auto Scaling User
	// Guide.
	LifecycleHookSpecificationList *AutoScalingAutoScalingGroupLifecycleHookSpecificationList `json:"LifecycleHookSpecificationList,omitempty"`

	// A list of Classic load balancers associated with this Auto Scaling
	// group. To specify Application load balancers, use TargetGroupARNs.
	LoadBalancerNames interface{} `json:"LoadBalancerNames,omitempty"`

	// The maximum size of the Auto Scaling group.
	MaxSize *StringExpr `json:"MaxSize,omitempty"`

	// Enables the monitoring of group metrics of an Auto Scaling group.
	MetricsCollection *AutoScalingAutoScalingGroupMetricsCollectionList `json:"MetricsCollection,omitempty"`

	// The minimum size of the Auto Scaling group.
	MinSize *StringExpr `json:"MinSize,omitempty"`

	// An embedded property that configures an Auto Scaling group to send
	// notifications when specified events take place.
	NotificationConfigurations *AutoScalingAutoScalingGroupNotificationConfigurationList `json:"NotificationConfigurations,omitempty"`

	// The name of an existing cluster placement group into which you want to
	// launch your instances. A placement group is a logical grouping of
	// instances within a single Availability Zone. You cannot specify
	// multiple Availability Zones and a placement group.
	PlacementGroup *StringExpr `json:"PlacementGroup,omitempty"`

	// The Auto Scaling tags to attach to this resource. For more information
	// about Auto Scaling tags, see Tagging Auto Scaling Groups and Amazon
	// EC2 Instances in the Auto Scaling User Guide.
	Tags *AutoScalingAutoScalingGroupTagPropertyList `json:"Tags,omitempty"`

	// A list of Amazon Resource Names (ARN) of target groups to associate
	// with the Auto Scaling group.
	TargetGroupARNs interface{} `json:"TargetGroupARNs,omitempty"`

	// A policy or a list of policies that are used to select the instances
	// to terminate. The policies are executed in the order that you list
	// them.
	TerminationPolicies interface{} `json:"TerminationPolicies,omitempty"`

	// A list of subnet identifiers of Amazon Virtual Private Cloud (Amazon
	// VPCs).
	VPCZoneIdentifier interface{} `json:"VPCZoneIdentifier,omitempty"`
}

// CfnResourceType returns AWS::AutoScaling::AutoScalingGroup to implement the ResourceProperties interface
func (s AutoScalingAutoScalingGroup) CfnResourceType() string {
	return "AWS::AutoScaling::AutoScalingGroup"
}

// AutoScalingLaunchConfiguration represents AWS::AutoScaling::LaunchConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html
type AutoScalingLaunchConfiguration struct {
	// For Amazon EC2 instances in a VPC, indicates whether instances in the
	// Auto Scaling group receive public IP addresses. If you specify true,
	// each instance in the Auto Scaling receives a unique public IP address.
	AssociatePublicIpAddress *BoolExpr `json:"AssociatePublicIpAddress,omitempty"`

	// Specifies how block devices are exposed to the instance. You can
	// specify virtual devices and EBS volumes.
	BlockDeviceMappings *AutoScalingBlockDeviceMappingList `json:"BlockDeviceMappings,omitempty"`

	// The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances
	// to. You can specify this property only for EC2-Classic instances. For
	// more information, see ClassicLink in the Amazon Elastic Compute Cloud
	// User Guide.
	ClassicLinkVPCId *StringExpr `json:"ClassicLinkVPCId,omitempty"`

	// The IDs of one or more security groups for the VPC that you specified
	// in the ClassicLinkVPCId property.
	ClassicLinkVPCSecurityGroups interface{} `json:"ClassicLinkVPCSecurityGroups,omitempty"`

	// Specifies whether the launch configuration is optimized for EBS I/O.
	// This optimization provides dedicated throughput to Amazon EBS and an
	// optimized configuration stack to provide optimal EBS I/O performance.
	EbsOptimized *BoolExpr `json:"EbsOptimized,omitempty"`

	// Provides the name or the Amazon Resource Name (ARN) of the instance
	// profile associated with the IAM role for the instance. The instance
	// profile contains the IAM role.
	IamInstanceProfile *StringExpr `json:"IamInstanceProfile,omitempty"`

	// Provides the unique ID of the Amazon Machine Image (AMI) that was
	// assigned during registration.
	ImageId *StringExpr `json:"ImageId,omitempty"`

	// The ID of the Amazon EC2 instance you want to use to create the launch
	// configuration. Use this property if you want the launch configuration
	// to use settings from an existing Amazon EC2 instance.
	InstanceId *StringExpr `json:"InstanceId,omitempty"`

	// Indicates whether detailed instance monitoring is enabled for the Auto
	// Scaling group. By default, this property is set to true (enabled).
	InstanceMonitoring *BoolExpr `json:"InstanceMonitoring,omitempty"`

	// Specifies the instance type of the EC2 instance.
	InstanceType *StringExpr `json:"InstanceType,omitempty"`

	// Provides the ID of the kernel associated with the EC2 AMI.
	KernelId *StringExpr `json:"KernelId,omitempty"`

	// Provides the name of the EC2 key pair.
	KeyName *StringExpr `json:"KeyName,omitempty"`

	// The tenancy of the instance. An instance with a tenancy of dedicated
	// runs on single-tenant hardware and can only be launched in a VPC. You
	// must set the value of this parameter to dedicated if want to launch
	// dedicated instances in a shared tenancy VPC (a VPC with the instance
	// placement tenancy attribute set to default). For more information, see
	// CreateLaunchConfiguration in the Auto Scaling API Reference.
	PlacementTenancy *StringExpr `json:"PlacementTenancy,omitempty"`

	// The ID of the RAM disk to select. Some kernels require additional
	// drivers at launch. Check the kernel requirements for information about
	// whether you need to specify a RAM disk. To find kernel requirements,
	// refer to the AWS Resource Center and search for the kernel ID.
	RamDiskId *StringExpr `json:"RamDiskId,omitempty"`

	// A list that contains the EC2 security groups to assign to the Amazon
	// EC2 instances in the Auto Scaling group. The list can contain the name
	// of existing EC2 security groups or references to
	// AWS::EC2::SecurityGroup resources created in the template. If your
	// instances are launched within VPC, specify Amazon VPC security group
	// IDs.
	SecurityGroups interface{} `json:"SecurityGroups,omitempty"`

	// The spot price for this autoscaling group. If a spot price is set,
	// then the autoscaling group will launch when the current spot price is
	// less than the amount specified in the template.
	SpotPrice *StringExpr `json:"SpotPrice,omitempty"`

	// The user data available to the launched EC2 instances.
	UserData *StringExpr `json:"UserData,omitempty"`
}

// CfnResourceType returns AWS::AutoScaling::LaunchConfiguration to implement the ResourceProperties interface
func (s AutoScalingLaunchConfiguration) CfnResourceType() string {
	return "AWS::AutoScaling::LaunchConfiguration"
}

// AutoScalingLifecycleHook represents AWS::AutoScaling::LifecycleHook
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html
type AutoScalingLifecycleHook struct {
	// The name of the Auto Scaling group for the lifecycle hook.
	AutoScalingGroupName *StringExpr `json:"AutoScalingGroupName,omitempty"`

	// The action the Auto Scaling group takes when the lifecycle hook
	// timeout elapses or if an unexpected failure occurs. Valid values are
	// CONTINUE (default) and ABANDON.
	DefaultResult *StringExpr `json:"DefaultResult,omitempty"`

	// The amount of time that can elapse before the lifecycle hook times
	// out. When the lifecycle hook times out, Auto Scaling performs the
	// action that you specified in the DefaultResult property.
	HeartbeatTimeout *IntegerExpr `json:"HeartbeatTimeout,omitempty"`

	// The state of the Amazon EC2 instance to which you want to attach the
	// lifecycle hook. For valid values, see the LifecycleTransition content
	// for the LifecycleHook data type in the Auto Scaling API Reference.
	LifecycleTransition *StringExpr `json:"LifecycleTransition,omitempty"`

	// Additional information that you want to include when Auto Scaling
	// sends a message to the notification target.
	NotificationMetadata *StringExpr `json:"NotificationMetadata,omitempty"`

	// The Amazon resource name (ARN) of the notification target that Auto
	// Scaling uses to notify you when an instance is in the transition state
	// for the lifecycle hook. You can specify an Amazon SQS queue or an
	// Amazon SNS topic. The notification message includes the following
	// information: lifecycle action token, user account ID, Auto Scaling
	// group name, lifecycle hook name, instance ID, lifecycle transition,
	// and notification metadata.
	NotificationTargetARN *StringExpr `json:"NotificationTargetARN,omitempty"`

	// The ARN of the IAM role that allows the Auto Scaling group to publish
	// to the specified notification target. The role requires permissions to
	// Amazon SNS and Amazon SQS.
	RoleARN *StringExpr `json:"RoleARN,omitempty"`
}

// CfnResourceType returns AWS::AutoScaling::LifecycleHook to implement the ResourceProperties interface
func (s AutoScalingLifecycleHook) CfnResourceType() string {
	return "AWS::AutoScaling::LifecycleHook"
}

// AutoScalingScalingPolicy represents AWS::AutoScaling::ScalingPolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html
type AutoScalingScalingPolicy struct {
	// Specifies whether the ScalingAdjustment is an absolute number or a
	// percentage of the current capacity. Valid values are ChangeInCapacity,
	// ExactCapacity, and PercentChangeInCapacity.
	AdjustmentType *StringExpr `json:"AdjustmentType,omitempty"`

	// The name or Amazon Resource Name (ARN) of the Auto Scaling Group that
	// you want to attach the policy to.
	AutoScalingGroupName *StringExpr `json:"AutoScalingGroupName,omitempty"`

	// The amount of time, in seconds, after a scaling activity completes
	// before any further trigger-related scaling activities can start.
	Cooldown *StringExpr `json:"Cooldown,omitempty"`

	// The estimated time, in seconds, until a newly launched instance can
	// send metrics to CloudWatch. By default, Auto Scaling uses the cooldown
	// period, as specified in the Cooldown property.
	EstimatedInstanceWarmup *IntegerExpr `json:"EstimatedInstanceWarmup,omitempty"`

	// The aggregation type for the CloudWatch metrics. You can specify
	// Minimum, Maximum, or Average. By default, AWS CloudFormation specifies
	// Average.
	MetricAggregationType *StringExpr `json:"MetricAggregationType,omitempty"`

	// For the PercentChangeInCapacity adjustment type, the minimum number of
	// instances to scale. The scaling policy changes the desired capacity of
	// the Auto Scaling group by a minimum of this many instances. This
	// property replaces the MinAdjustmentStep property.
	MinAdjustmentMagnitude *IntegerExpr `json:"MinAdjustmentMagnitude,omitempty"`

	// An Auto Scaling policy type. You can specify SimpleScaling,
	// StepScaling, or TargetTrackingScaling. By default, AWS CloudFormation
	// specifies SimpleScaling. For more information, see Scaling Policy
	// Types in the Auto Scaling User Guide.
	PolicyType *StringExpr `json:"PolicyType,omitempty"`

	// The number of instances by which to scale. The AdjustmentType property
	// determines if AWS CloudFormation interprets this number as an absolute
	// number (when the ExactCapacity value is specified), increase or
	// decrease capacity by a specified number (when the ChangeInCapacity
	// value is specified), or increase or decrease capacity as a percentage
	// of the existing Auto Scaling group size (when the
	// PercentChangeInCapacity value is specified). A positive value adds to
	// the current capacity and a negative value subtracts from the current
	// capacity. For exact capacity, you must specify a positive value.
	ScalingAdjustment *IntegerExpr `json:"ScalingAdjustment,omitempty"`

	// A set of adjustments that enable you to scale based on the size of the
	// alarm breach.
	StepAdjustments *AutoScalingScalingPolicyStepAdjustmentsList `json:"StepAdjustments,omitempty"`

	// Configures a target tracking scaling policy.
	TargetTrackingConfiguration *AutoScalingScalingPolicyTargetTrackingConfiguration `json:"TargetTrackingConfiguration,omitempty"`
}

// CfnResourceType returns AWS::AutoScaling::ScalingPolicy to implement the ResourceProperties interface
func (s AutoScalingScalingPolicy) CfnResourceType() string {
	return "AWS::AutoScaling::ScalingPolicy"
}

// AutoScalingScheduledAction represents AWS::AutoScaling::ScheduledAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html
type AutoScalingScheduledAction struct {
	// The name or ARN of the Auto Scaling group.
	AutoScalingGroupName *StringExpr `json:"AutoScalingGroupName,omitempty"`

	// The number of Amazon EC2 instances that should be running in the Auto
	// Scaling group. At least one of MaxSize, MinSize, or DesiredCapacity
	// must be specified.
	DesiredCapacity *IntegerExpr `json:"DesiredCapacity,omitempty"`

	// The time in UTC for this schedule to end. For example,
	// 2010-06-01T00:00:00Z.
	EndTime time.Time `json:"EndTime,omitempty"`

	// The maximum number of Amazon EC2 instances in the Auto Scaling group.
	// At least one of MaxSize, MinSize, or DesiredCapacity must be
	// specified.
	MaxSize *IntegerExpr `json:"MaxSize,omitempty"`

	// The minimum number of Amazon EC2 instances in the Auto Scaling group.
	// At least one of MaxSize, MinSize, or DesiredCapacity must be
	// specified.
	MinSize *IntegerExpr `json:"MinSize,omitempty"`

	// The time in UTC when recurring future actions will start. You specify
	// the start time by following the Unix cron syntax format. For more
	// information about cron syntax, go to
	// http://en.wikipedia.org/wiki/Cron.
	Recurrence *StringExpr `json:"Recurrence,omitempty"`

	// The time in UTC for this schedule to start. For example,
	// 2010-06-01T00:00:00Z.
	StartTime time.Time `json:"StartTime,omitempty"`
}

// CfnResourceType returns AWS::AutoScaling::ScheduledAction to implement the ResourceProperties interface
func (s AutoScalingScheduledAction) CfnResourceType() string {
	return "AWS::AutoScaling::ScheduledAction"
}

// BatchComputeEnvironment represents AWS::Batch::ComputeEnvironment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html
type BatchComputeEnvironment struct {
	// The type of the compute environment.
	Type *StringExpr `json:"Type,omitempty"`

	// The service role associated with the compute environment that allows
	// AWS Batch to make calls to AWS API operations on your behalf.
	ServiceRole *StringExpr `json:"ServiceRole,omitempty"`

	// The name of the compute environment.
	ComputeEnvironmentName *StringExpr `json:"ComputeEnvironmentName,omitempty"`

	// The compute resources defined for the compute environment.
	ComputeResources *BatchComputeEnvironmentComputeResources `json:"ComputeResources,omitempty"`

	// The state of the compute environment. The valid values are ENABLED or
	// DISABLED. An ENABLED state indicates that you can register instances
	// with the compute environment and that the associated instances can
	// accept jobs.
	State *StringExpr `json:"State,omitempty"`
}

// CfnResourceType returns AWS::Batch::ComputeEnvironment to implement the ResourceProperties interface
func (s BatchComputeEnvironment) CfnResourceType() string {
	return "AWS::Batch::ComputeEnvironment"
}

// BatchJobDefinition represents AWS::Batch::JobDefinition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html
type BatchJobDefinition struct {
	// The type of job definition.
	Type *StringExpr `json:"Type,omitempty"`

	// Default parameters or parameter substitution placeholders that are set
	// in the job definition. Parameters are specified as a key-value pair
	// mapping.
	Parameters interface{} `json:"Parameters,omitempty"`

	// The name of the job definition.
	JobDefinitionName *StringExpr `json:"JobDefinitionName,omitempty"`

	// An object with various properties specific to container-based jobs.
	ContainerProperties *BatchJobDefinitionContainerProperties `json:"ContainerProperties,omitempty"`

	// The retry strategy to use for failed jobs that are submitted with this
	// job definition.
	RetryStrategy *BatchJobDefinitionRetryStrategy `json:"RetryStrategy,omitempty"`
}

// CfnResourceType returns AWS::Batch::JobDefinition to implement the ResourceProperties interface
func (s BatchJobDefinition) CfnResourceType() string {
	return "AWS::Batch::JobDefinition"
}

// BatchJobQueue represents AWS::Batch::JobQueue
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html
type BatchJobQueue struct {
	// The compute environments that are attached to the job queue and the
	// order in which job placement is preferred. Compute environments are
	// selected for job placement in ascending order.
	ComputeEnvironmentOrder *BatchJobQueueComputeEnvironmentOrderList `json:"ComputeEnvironmentOrder,omitempty"`

	// The status of the job queue (for example, CREATING or VALID).
	State *StringExpr `json:"State,omitempty"`

	// The priority of the job queue.
	Priority *IntegerExpr `json:"Priority,omitempty"`

	// The name of the job queue.
	JobQueueName *StringExpr `json:"JobQueueName,omitempty"`
}

// CfnResourceType returns AWS::Batch::JobQueue to implement the ResourceProperties interface
func (s BatchJobQueue) CfnResourceType() string {
	return "AWS::Batch::JobQueue"
}

// CertificateManagerCertificate represents AWS::CertificateManager::Certificate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html
type CertificateManagerCertificate struct {
	// Fully qualified domain name (FQDN), such as www.example.com, of the
	// site that you want to secure with the ACM certificate. To protect
	// several sites in the same domain, use an asterisk (*) to specify a
	// wildcard. For example, *.example.com protects www.example.com,
	// site.example.com, and images.example.com.
	DomainName *StringExpr `json:"DomainName,omitempty"`

	// Domain information that domain name registrars use to verify your
	// identity. For more information and the default values, see Configure
	// Email for Your Domain and Validate Domain Ownership in the AWS
	// Certificate Manager User Guide.
	DomainValidationOptions *CertificateManagerCertificateDomainValidationOptionList `json:"DomainValidationOptions,omitempty"`

	// FQDNs to be included in the Subject Alternative Name extension of the
	// ACM certificate. For example, you can add www.example.net to a
	// certificate for the www.example.com domain name so that users can
	// reach your site by using either name.
	SubjectAlternativeNames interface{} `json:"SubjectAlternativeNames,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this ACM certificate.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::CertificateManager::Certificate to implement the ResourceProperties interface
func (s CertificateManagerCertificate) CfnResourceType() string {
	return "AWS::CertificateManager::Certificate"
}

// Cloud9EnvironmentEC2 represents AWS::Cloud9::EnvironmentEC2
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html
type Cloud9EnvironmentEC2 struct {
	// Any AWS CodeCommit source code repositories to be cloned into the
	// development environment.
	Repositories *Cloud9EnvironmentEC2RepositoryList `json:"Repositories,omitempty"`

	// The Amazon Resource Name (ARN) of the environment owner. If this value
	// is not specified, the ARN defaults to this environment's creator.
	OwnerArn interface{} `json:"OwnerArn,omitempty"`

	// The description of the environment to create.
	Description interface{} `json:"Description,omitempty"`

	// The number of minutes until the running instance is shut down after
	// the environment has last been used.
	AutomaticStopTimeMinutes interface{} `json:"AutomaticStopTimeMinutes,omitempty"`

	// The type of instance to host the environment on (for example,
	// t2.micro).
	InstanceType interface{} `json:"InstanceType,omitempty"`

	// The name of the environment to create.
	Name interface{} `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::Cloud9::EnvironmentEC2 to implement the ResourceProperties interface
func (s Cloud9EnvironmentEC2) CfnResourceType() string {
	return "AWS::Cloud9::EnvironmentEC2"
}

// CloudFormationAuthentication represents AWS::CloudFormation::Authentication
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-authentication.html
type CloudFormationAuthentication struct {
	// Specifies the access key ID for S3 authentication.
	AccessKeyId *StringExpr `json:"accessKeyId,omitempty"`

	// A comma-delimited list of Amazon S3 buckets to be associated with the
	// S3 authentication credentials.
	Buckets interface{} `json:"buckets,omitempty"`

	// Specifies the password for basic authentication.
	Password *StringExpr `json:"password,omitempty"`

	// Specifies the secret key for S3 authentication.
	SecretKey *StringExpr `json:"secretKey,omitempty"`

	// Specifies whether the authentication scheme uses a user name and
	// password ("basic") or an access key ID and secret key ("S3").
	Type *StringExpr `json:"type,omitempty"`

	// A comma-delimited list of URIs to be associated with the basic
	// authentication credentials. The authorization applies to the specified
	// URIs and any more specific URI. For example, if you specify
	// http://www.example.com, the authorization will also apply to
	// http://www.example.com/test.
	Uris interface{} `json:"uris,omitempty"`

	// Specifies the user name for basic authentication.
	Username *StringExpr `json:"username,omitempty"`

	// Describes the role for role-based authentication.
	RoleName *StringExpr `json:"roleName,omitempty"`
}

// CfnResourceType returns AWS::CloudFormation::Authentication to implement the ResourceProperties interface
func (s CloudFormationAuthentication) CfnResourceType() string {
	return "AWS::CloudFormation::Authentication"
}

// CloudFormationCustomResource represents AWS::CloudFormation::CustomResource
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html
type CloudFormationCustomResource struct {
	// The service token that was given to the template developer by the
	// service provider to access the service, such as an Amazon SNS topic
	// ARN or Lambda function ARN. The service token must be from the same
	// region in which you are creating the stack.
	ServiceToken *StringExpr `json:"ServiceToken,omitempty"`
}

// CfnResourceType returns AWS::CloudFormation::CustomResource to implement the ResourceProperties interface
func (s CloudFormationCustomResource) CfnResourceType() string {
	return "AWS::CloudFormation::CustomResource"
}

// CloudFormationInit represents AWS::CloudFormation::Init
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html
type CloudFormationInit struct {
}

// CfnResourceType returns AWS::CloudFormation::Init to implement the ResourceProperties interface
func (s CloudFormationInit) CfnResourceType() string {
	return "AWS::CloudFormation::Init"
}

// CloudFormationInterface represents AWS::CloudFormation::Interface
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-interface.html
type CloudFormationInterface struct {
	// A list of parameter group types, where you specify group names, the
	// parameters in each group, and the order in which the parameters are
	// shown.
	ParameterGroups *InterfaceParameterGroupList `json:"ParameterGroups,omitempty"`

	// A mapping of parameters and their friendly names that the AWS
	// CloudFormation console shows when a stack is created or updated.
	ParameterLabels *InterfaceParameterLabel `json:"ParameterLabels,omitempty"`
}

// CfnResourceType returns AWS::CloudFormation::Interface to implement the ResourceProperties interface
func (s CloudFormationInterface) CfnResourceType() string {
	return "AWS::CloudFormation::Interface"
}

// CloudFormationStack represents AWS::CloudFormation::Stack
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html
type CloudFormationStack struct {
	// A list of existing Amazon SNS topics where notifications about stack
	// events are sent.
	NotificationARNs interface{} `json:"NotificationARNs,omitempty"`

	// The set of parameters passed to AWS CloudFormation when this nested
	// stack is created.
	Parameters *StackParameters `json:"Parameters,omitempty"`

	// An arbitrary set of tags (key–value pairs) to describe this stack.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The URL of a template that specifies the stack that you want to create
	// as a resource. The template must be stored on an Amazon S3 bucket, so
	// the URL must have the form:
	// https://s3.amazonaws.com/.../TemplateName.template
	TemplateURL *StringExpr `json:"TemplateURL,omitempty"`

	// The length of time, in minutes, that AWS CloudFormation waits for the
	// nested stack to reach the CREATE_COMPLETE state. The default is no
	// timeout. When AWS CloudFormation detects that the nested stack has
	// reached the CREATE_COMPLETE state, it marks the nested stack resource
	// as CREATE_COMPLETE in the parent stack and resumes creating the parent
	// stack. If the timeout period expires before the nested stack reaches
	// CREATE_COMPLETE, AWS CloudFormation marks the nested stack as failed
	// and rolls back both the nested stack and parent stack.
	TimeoutInMinutes *IntegerExpr `json:"TimeoutInMinutes,omitempty"`
}

// CfnResourceType returns AWS::CloudFormation::Stack to implement the ResourceProperties interface
func (s CloudFormationStack) CfnResourceType() string {
	return "AWS::CloudFormation::Stack"
}

// CloudFormationWaitCondition represents AWS::CloudFormation::WaitCondition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html
type CloudFormationWaitCondition struct {
	// The number of success signals that AWS CloudFormation must receive
	// before it continues the stack creation process. When the wait
	// condition receives the requisite number of success signals, AWS
	// CloudFormation resumes the creation of the stack. If the wait
	// condition does not receive the specified number of success signals
	// before the Timeout period expires, AWS CloudFormation assumes that the
	// wait condition has failed and rolls the stack back.
	Count *IntegerExpr `json:"Count,omitempty"`

	// A reference to the wait condition handle used to signal this wait
	// condition. Use the Ref intrinsic function to specify an
	// AWS::CloudFormation::WaitConditionHandle resource.
	Handle *StringExpr `json:"Handle,omitempty"`

	// The length of time (in seconds) to wait for the number of signals that
	// the Count property specifies. Timeout is a minimum-bound property,
	// meaning the timeout occurs no sooner than the time you specify, but
	// can occur shortly thereafter. The maximum time that can be specified
	// for this property is 12 hours (43200 seconds).
	Timeout *StringExpr `json:"Timeout,omitempty"`
}

// CfnResourceType returns AWS::CloudFormation::WaitCondition to implement the ResourceProperties interface
func (s CloudFormationWaitCondition) CfnResourceType() string {
	return "AWS::CloudFormation::WaitCondition"
}

// CloudFormationWaitConditionHandle represents AWS::CloudFormation::WaitConditionHandle
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitconditionhandle.html
type CloudFormationWaitConditionHandle struct {
}

// CfnResourceType returns AWS::CloudFormation::WaitConditionHandle to implement the ResourceProperties interface
func (s CloudFormationWaitConditionHandle) CfnResourceType() string {
	return "AWS::CloudFormation::WaitConditionHandle"
}

// CloudFrontDistribution represents AWS::CloudFront::Distribution
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution.html
type CloudFrontDistribution struct {
	// The distribution's configuration information.
	DistributionConfig *CloudFrontDistributionConfig `json:"DistributionConfig,omitempty"`

	// An arbitrary set of tags (key–value pairs) to associate with a
	// CloudFront distribution.
	Tags interface{} `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::CloudFront::Distribution to implement the ResourceProperties interface
func (s CloudFrontDistribution) CfnResourceType() string {
	return "AWS::CloudFront::Distribution"
}

// CloudFrontCloudFrontOriginAccessIdentity represents AWS::CloudFront::CloudFrontOriginAccessIdentity
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html
type CloudFrontCloudFrontOriginAccessIdentity struct {
	// The configuration of the CloudFront origin access identity.
	CloudFrontOriginAccessIdentityConfig *CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig `json:"CloudFrontOriginAccessIdentityConfig,omitempty"`
}

// CfnResourceType returns AWS::CloudFront::CloudFrontOriginAccessIdentity to implement the ResourceProperties interface
func (s CloudFrontCloudFrontOriginAccessIdentity) CfnResourceType() string {
	return "AWS::CloudFront::CloudFrontOriginAccessIdentity"
}

// CloudFrontStreamingDistribution represents AWS::CloudFront::StreamingDistribution
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html
type CloudFrontStreamingDistribution struct {
	// Information about the configuration of the RMTP streaming
	// distribution.
	StreamingDistributionConfig *CloudFrontStreamingDistributionStreamingDistributionConfig `json:"StreamingDistributionConfig,omitempty"`

	// Key-value tags to assign to this streaming distribution.
	Tags *CloudFrontStreamingDistributionTagList `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::CloudFront::StreamingDistribution to implement the ResourceProperties interface
func (s CloudFrontStreamingDistribution) CfnResourceType() string {
	return "AWS::CloudFront::StreamingDistribution"
}

// CloudTrailTrail represents AWS::CloudTrail::Trail
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html
type CloudTrailTrail struct {
	// The Amazon Resource Name (ARN) of a log group to which CloudTrail logs
	// will be delivered.
	CloudWatchLogsLogGroupArn *StringExpr `json:"CloudWatchLogsLogGroupArn,omitempty"`

	// The role ARN that Amazon CloudWatch Logs (CloudWatch Logs) assumes to
	// write logs to a log group. For more information, see Role Policy
	// Document for CloudTrail to Use CloudWatch Logs for Monitoring in the
	// AWS CloudTrail User Guide.
	CloudWatchLogsRoleArn *StringExpr `json:"CloudWatchLogsRoleArn,omitempty"`

	// Indicates whether CloudTrail validates the integrity of log files. By
	// default, AWS CloudFormation sets this value to false. When you disable
	// log file integrity validation, CloudTrail stops creating digest files.
	// For more information, see CreateTrail in the AWS CloudTrail API
	// Reference.
	EnableLogFileValidation *BoolExpr `json:"EnableLogFileValidation,omitempty"`

	// Configures logging for management and data events.
	EventSelectors *CloudTrailTrailEventSelectorList `json:"EventSelectors,omitempty"`

	// Indicates whether the trail is publishing events from global services,
	// such as IAM, to the log files. By default, AWS CloudFormation sets
	// this value to false.
	IncludeGlobalServiceEvents *BoolExpr `json:"IncludeGlobalServiceEvents,omitempty"`

	// Indicates whether the CloudTrail trail is currently logging AWS API
	// calls.
	IsLogging *BoolExpr `json:"IsLogging,omitempty"`

	// Indicates whether the CloudTrail trail is created in the region in
	// which you create the stack (false) or in all regions (true). By
	// default, AWS CloudFormation sets this value to false. For more
	// information, see How Does CloudTrail Behave Regionally and Globally?
	// in the AWS CloudTrail User Guide.
	IsMultiRegionTrail *BoolExpr `json:"IsMultiRegionTrail,omitempty"`

	// The AWS Key Management Service (AWS KMS) key ID that you want to use
	// to encrypt CloudTrail logs. You can specify an alias name (prefixed
	// with alias/), an alias ARN, a key ARN, or a globally unique
	// identifier.
	KMSKeyId *StringExpr `json:"KMSKeyId,omitempty"`

	// The name of the Amazon S3 bucket where CloudTrail publishes log files.
	S3BucketName *StringExpr `json:"S3BucketName,omitempty"`

	// An Amazon S3 object key prefix that precedes the name of all log
	// files.
	S3KeyPrefix *StringExpr `json:"S3KeyPrefix,omitempty"`

	// The name of an Amazon SNS topic that is notified when new log files
	// are published.
	SnsTopicName *StringExpr `json:"SnsTopicName,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this trail.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The name of the trail. For constraint information, see CreateTrail in
	// the AWS CloudTrail API Reference.
	TrailName *StringExpr `json:"TrailName,omitempty"`
}

// CfnResourceType returns AWS::CloudTrail::Trail to implement the ResourceProperties interface
func (s CloudTrailTrail) CfnResourceType() string {
	return "AWS::CloudTrail::Trail"
}

// CloudWatchAlarm represents AWS::CloudWatch::Alarm
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html
type CloudWatchAlarm struct {
	// Indicates whether actions should be executed during changes to the
	// CloudWatch alarm's state.
	ActionsEnabled *BoolExpr `json:"ActionsEnabled,omitempty"`

	// The list of actions to execute when this alarm transitions into an
	// ALARM state from any other state. Specify each action as an Amazon
	// Resource Name (ARN). For more information about creating alarms and
	// the actions that you can specify, see PutMetricAlarm in the Amazon
	// CloudWatch API Reference and Creating Amazon CloudWatch Alarms in the
	// Amazon CloudWatch User Guide.
	AlarmActions interface{} `json:"AlarmActions,omitempty"`

	// The description of the alarm.
	AlarmDescription *StringExpr `json:"AlarmDescription,omitempty"`

	// A name for the alarm. If you don't specify a name, AWS CloudFormation
	// generates a unique physical ID and uses that ID for the alarm name.
	// For more information, see Name Type.
	AlarmName *StringExpr `json:"AlarmName,omitempty"`

	// The arithmetic operation to use when comparing the specified Statistic
	// and Threshold. AWS CloudFormation uses the value of Statistic as the
	// first operand.
	ComparisonOperator *StringExpr `json:"ComparisonOperator,omitempty"`

	// The dimensions of the metric for the alarm.
	Dimensions *CloudWatchMetricDimensionList `json:"Dimensions,omitempty"`

	// Used only for alarms that are based on percentiles. Specifies whether
	// to evaluate the data and potentially change the alarm state if there
	// are too few data points to be statistically significant.
	EvaluateLowSampleCountPercentile *StringExpr `json:"EvaluateLowSampleCountPercentile,omitempty"`

	// The number of periods over which data is compared to the specified
	// threshold.
	EvaluationPeriods *IntegerExpr `json:"EvaluationPeriods,omitempty"`

	// The percentile statistic for the metric. Specify a value between p0.0
	// and p100.
	ExtendedStatistic *StringExpr `json:"ExtendedStatistic,omitempty"`

	// The list of actions to execute when this alarm transitions into an
	// INSUFFICIENT_DATA state. Specify each action as an Amazon Resource
	// Number (ARN). Currently, the only action supported is publishing to an
	// Amazon SNS topic or an Auto Scaling policy.
	InsufficientDataActions interface{} `json:"InsufficientDataActions,omitempty"`

	// The name of the metric associated with the alarm. For more information
	// about the metrics that you can specify, see Amazon CloudWatch
	// Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch
	// User Guide.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// The namespace of the metric that is associated with the alarm.
	Namespace *StringExpr `json:"Namespace,omitempty"`

	// The list of actions to execute when this alarm transitions into an OK
	// state. Specify each action as an Amazon Resource Number (ARN).
	// Currently, the only action supported is publishing to an SNS topic or
	// an Auto Scaling policy.
	OKActions interface{} `json:"OKActions,omitempty"`

	// The time over which the specified statistic is applied. Specify time
	// in seconds, in multiples of 60.
	Period *IntegerExpr `json:"Period,omitempty"`

	// The statistic to apply to the alarm's associated metric.
	Statistic *StringExpr `json:"Statistic,omitempty"`

	// The value against which the specified statistic is compared.
	Threshold interface{} `json:"Threshold,omitempty"`

	// Sets how this alarm is to handle missing data points. If
	// TreatMissingData is omitted, the default behavior of missing is used.
	// For more information, see PutMetricAlarm in the Amazon CloudWatch API
	// Reference and Configuring How CloudWatch Alarms Treats Missing Data in
	// the Amazon CloudWatch User Guide.
	TreatMissingData *StringExpr `json:"TreatMissingData,omitempty"`

	// The unit for the metric that is associated with the alarm.
	Unit *StringExpr `json:"Unit,omitempty"`
}

// CfnResourceType returns AWS::CloudWatch::Alarm to implement the ResourceProperties interface
func (s CloudWatchAlarm) CfnResourceType() string {
	return "AWS::CloudWatch::Alarm"
}

// CloudWatchDashboard represents AWS::CloudWatch::Dashboard
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dashboard.html
type CloudWatchDashboard struct {
	// A name for the dashboard. The name must be between 1 and 255
	// characters. If you do not specify a name, one will be generated
	// automatically.
	DashboardName *StringExpr `json:"DashboardName,omitempty"`

	// A JSON string that defines the widgets contained in the dashboard and
	// their location. For information about how to format this string, see
	// Dashboard Body Structure and Syntax.
	DashboardBody *StringExpr `json:"DashboardBody,omitempty"`
}

// CfnResourceType returns AWS::CloudWatch::Dashboard to implement the ResourceProperties interface
func (s CloudWatchDashboard) CfnResourceType() string {
	return "AWS::CloudWatch::Dashboard"
}

// CodeBuildProject represents AWS::CodeBuild::Project
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html
type CodeBuildProject struct {
	// The output settings for artifacts that the project generates during a
	// build.
	Artifacts *CodeBuildProjectArtifacts `json:"Artifacts,omitempty"`

	// Indicates whether AWS CodeBuild generates a publicly accessible URL
	// for your project's build badge. For more information, see Build Badges
	// Sample in the AWS CodeBuild User Guide.
	BadgeEnabled interface{} `json:"BadgeEnabled,omitempty"`

	// Settings that AWS CodeBuild uses to store and reuse build
	// dependencies.
	Cache *CodeBuildProjectProjectCache `json:"Cache,omitempty"`

	// A description of the project. Use the description to identify the
	// purpose of the project.
	Description *StringExpr `json:"Description,omitempty"`

	// The alias or Amazon Resource Name (ARN) of the AWS Key Management
	// Service (AWS KMS) customer master key (CMK) that AWS CodeBuild uses to
	// encrypt the build output. If you don't specify a value, AWS CodeBuild
	// uses the AWS-managed CMK for Amazon Simple Storage Service.
	EncryptionKey *StringExpr `json:"EncryptionKey,omitempty"`

	// The build environment settings for the project, such as the
	// environment type or the environment variables to use for the build
	// environment.
	Environment *CodeBuildProjectEnvironment `json:"Environment,omitempty"`

	// A name for the project. The name must be unique across all of the
	// projects in your AWS account.
	Name *StringExpr `json:"Name,omitempty"`

	// The ARN of the service role that AWS CodeBuild uses to interact with
	// services on your behalf.
	ServiceRole *StringExpr `json:"ServiceRole,omitempty"`

	// The source code settings for the project, such as the source code's
	// repository type and location.
	Source *CodeBuildProjectSource `json:"Source,omitempty"`

	// An arbitrary set of tags (key-value pairs) for the AWS CodeBuild
	// project.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The number of minutes after which AWS CodeBuild stops the build if
	// it's not complete. For valid values, see the timeoutInMinutes field in
	// the AWS CodeBuild User Guide.
	TimeoutInMinutes *IntegerExpr `json:"TimeoutInMinutes,omitempty"`

	// Settings that enable AWS CodeBuild to access resources in an Amazon
	// VPC. For more information, see Use AWS CodeBuild with Amazon Virtual
	// Private Cloud in the AWS CodeBuild User Guide.
	VpcConfig *CodeBuildProjectVpcConfig `json:"VpcConfig,omitempty"`
}

// CfnResourceType returns AWS::CodeBuild::Project to implement the ResourceProperties interface
func (s CodeBuildProject) CfnResourceType() string {
	return "AWS::CodeBuild::Project"
}

// CodeCommitRepository represents AWS::CodeCommit::Repository
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html
type CodeCommitRepository struct {
	// A description about the AWS CodeCommit repository. For constraints,
	// see the CreateRepository action in the AWS CodeCommit API Reference.
	RepositoryDescription *StringExpr `json:"RepositoryDescription,omitempty"`

	// A name for the AWS CodeCommit repository.
	RepositoryName *StringExpr `json:"RepositoryName,omitempty"`

	// Defines the actions to take in response to events that occur in the
	// repository. For example, you can send email notifications when someone
	// pushes to the repository.
	Triggers *CodeCommitRepositoryTriggerList `json:"Triggers,omitempty"`
}

// CfnResourceType returns AWS::CodeCommit::Repository to implement the ResourceProperties interface
func (s CodeCommitRepository) CfnResourceType() string {
	return "AWS::CodeCommit::Repository"
}

// CodeDeployApplication represents AWS::CodeDeploy::Application
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html
type CodeDeployApplication struct {
	// A name for the application. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// application name. For more information, see Name Type.
	ApplicationName *StringExpr `json:"ApplicationName,omitempty"`

	// The compute platform that AWS CodeDeploy deploys the application to.
	ComputePlatform *StringExpr `json:"ComputePlatform,omitempty"`
}

// CfnResourceType returns AWS::CodeDeploy::Application to implement the ResourceProperties interface
func (s CodeDeployApplication) CfnResourceType() string {
	return "AWS::CodeDeploy::Application"
}

// CodeDeployDeploymentConfig represents AWS::CodeDeploy::DeploymentConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html
type CodeDeployDeploymentConfig struct {
	// A name for the deployment configuration. If you don't specify a name,
	// AWS CloudFormation generates a unique physical ID and uses that ID for
	// the deployment configuration name. For more information, see Name
	// Type.
	DeploymentConfigName *StringExpr `json:"DeploymentConfigName,omitempty"`

	// The minimum number of healthy instances that must be available at any
	// time during an AWS CodeDeploy deployment. For example, for a fleet of
	// nine instances, if you specify a minimum of six healthy instances, AWS
	// CodeDeploy deploys your application up to three instances at a time so
	// that you always have six healthy instances. The deployment succeeds if
	// your application successfully deploys to six or more instances;
	// otherwise, the deployment fails.
	MinimumHealthyHosts *CodeDeployDeploymentConfigMinimumHealthyHosts `json:"MinimumHealthyHosts,omitempty"`
}

// CfnResourceType returns AWS::CodeDeploy::DeploymentConfig to implement the ResourceProperties interface
func (s CodeDeployDeploymentConfig) CfnResourceType() string {
	return "AWS::CodeDeploy::DeploymentConfig"
}

// CodeDeployDeploymentGroup represents AWS::CodeDeploy::DeploymentGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html
type CodeDeployDeploymentGroup struct {
	// Information about the Amazon CloudWatch alarms that are associated
	// with the deployment group.
	AlarmConfiguration *CodeDeployDeploymentGroupAlarmConfiguration `json:"AlarmConfiguration,omitempty"`

	// The name of an existing AWS CodeDeploy application to associate this
	// deployment group with.
	ApplicationName *StringExpr `json:"ApplicationName,omitempty"`

	// Information about the automatic rollback configuration that is
	// associated with the deployment group. If you specify this property,
	// don't specify the Deployment property.
	AutoRollbackConfiguration *CodeDeployDeploymentGroupAutoRollbackConfiguration `json:"AutoRollbackConfiguration,omitempty"`

	// A list of associated Auto Scaling groups that AWS CodeDeploy
	// automatically deploys revisions to when new instances are created.
	// Duplicates are not allowed.
	AutoScalingGroups interface{} `json:"AutoScalingGroups,omitempty"`

	// The application revision to deploy to this deployment group. If you
	// specify this property, your target application revision will be
	// deployed as soon as the provisioning process is complete. If you
	// specify this property, don't specify the AutoRollbackConfiguration
	// property.
	Deployment *CodeDeployDeploymentGroupDeployment `json:"Deployment,omitempty"`

	// A deployment configuration name or a predefined configuration name.
	// With predefined configurations, you can deploy application revisions
	// to one instance at a time, half of the instances at a time, or all the
	// instances at once. For more information and valid values, see Working
	// with Deployment Configurations in the AWS CodeDeploy User Guide.
	DeploymentConfigName *StringExpr `json:"DeploymentConfigName,omitempty"`

	// A name for the deployment group. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// deployment group name. For more information, see Name Type.
	DeploymentGroupName *StringExpr `json:"DeploymentGroupName,omitempty"`

	// Attributes that determine the type of deployment to run and whether to
	// route deployment traffic behind a load balancer.
	DeploymentStyle *CodeDeployDeploymentGroupDeploymentStyle `json:"DeploymentStyle,omitempty"`

	// The EC2 tags that are already applied to EC2 instances that you want
	// to include in the deployment group. AWS CodeDeploy includes all EC2
	// instances identified by any of the tags you specify in this deployment
	// group. Duplicates are not allowed.
	Ec2TagFilters *CodeDeployDeploymentGroupEc2TagFiltersList `json:"Ec2TagFilters,omitempty"`

	// Information about the load balancer used in the deployment. For more
	// information, see Integrating AWS CodeDeploy with Elastic Load
	// Balancing in the AWS CodeDeploy User Guide.
	LoadBalancerInfo *CodeDeployDeploymentGroupLoadBalancerInfo `json:"LoadBalancerInfo,omitempty"`

	// The on-premises instance tags already applied to on-premises instances
	// that you want to include in the deployment group. AWS CodeDeploy
	// includes all on-premises instances identified by any of the tags you
	// specify in this deployment group. To register on-premises instances
	// with AWS CodeDeploy, see Working with On-Premises Instances for AWS
	// CodeDeploy in the AWS CodeDeploy User Guide. Duplicates are not
	// allowed.
	OnPremisesInstanceTagFilters *CodeDeployDeploymentGroupOnPremisesInstanceTagFiltersList `json:"OnPremisesInstanceTagFilters,omitempty"`

	// A service role Amazon Resource Name (ARN) that grants AWS CodeDeploy
	// permission to make calls to AWS services on your behalf. For more
	// information, see Create a Service Role for AWS CodeDeploy in the AWS
	// CodeDeploy User Guide.
	ServiceRoleArn *StringExpr `json:"ServiceRoleArn,omitempty"`

	// Information about the notification triggers for the deployment group.
	// Duplicates are not allowed.
	TriggerConfigurations *CodeDeployDeploymentGroupTriggerConfigList `json:"TriggerConfigurations,omitempty"`
}

// CfnResourceType returns AWS::CodeDeploy::DeploymentGroup to implement the ResourceProperties interface
func (s CodeDeployDeploymentGroup) CfnResourceType() string {
	return "AWS::CodeDeploy::DeploymentGroup"
}

// CodePipelineCustomAction represents AWS::CodePipeline::CustomActionType
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html
type CodePipelineCustomAction struct {
	// The category of the custom action, such as a source action or a build
	// action. For valid values, see CreateCustomActionType in the AWS
	// CodePipeline API Reference.
	Category *StringExpr `json:"Category,omitempty"`

	// The configuration properties for the custom action.
	ConfigurationProperties *CodePipelineCustomActionTypeConfigurationPropertiesList `json:"ConfigurationProperties,omitempty"`

	// The input artifact details for this custom action.
	InputArtifactDetails *CodePipelineCustomActionTypeArtifactDetails `json:"InputArtifactDetails,omitempty"`

	// The output artifact details for this custom action.
	OutputArtifactDetails *CodePipelineCustomActionTypeArtifactDetails `json:"OutputArtifactDetails,omitempty"`

	// The name of the service provider that AWS CodePipeline uses for this
	// custom action.
	Provider *StringExpr `json:"Provider,omitempty"`

	// URLs that provide users information about this custom action.
	Settings *CodePipelineCustomActionTypeSettings `json:"Settings,omitempty"`

	// The version number of this custom action.
	Version *StringExpr `json:"Version,omitempty"`
}

// CfnResourceType returns AWS::CodePipeline::CustomActionType to implement the ResourceProperties interface
func (s CodePipelineCustomAction) CfnResourceType() string {
	return "AWS::CodePipeline::CustomActionType"
}

// CodePipelinePipeline represents AWS::CodePipeline::Pipeline
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html
type CodePipelinePipeline struct {
	// The Amazon Simple Storage Service (Amazon S3) location where AWS
	// CodePipeline stores pipeline artifacts. For more information, see
	// Create an Amazon S3 Bucket for Your Application in the AWS
	// CodePipeline User Guide.
	ArtifactStore *CodePipelinePipelineArtifactStore `json:"ArtifactStore,omitempty"`

	// Prevents artifacts in a pipeline from transitioning to the stage that
	// you specified. This enables you to manually control transitions.
	DisableInboundStageTransitions *CodePipelinePipelineDisableInboundStageTransitionsList `json:"DisableInboundStageTransitions,omitempty"`

	// The name of your AWS CodePipeline pipeline.
	Name *StringExpr `json:"Name,omitempty"`

	// Indicates whether to rerun the AWS CodePipeline pipeline after you
	// update it.
	RestartExecutionOnUpdate *BoolExpr `json:"RestartExecutionOnUpdate,omitempty"`

	// A service role Amazon Resource Name (ARN) that grants AWS CodePipeline
	// permission to make calls to AWS services on your behalf. For more
	// information, see AWS CodePipeline Access Permissions Reference in the
	// AWS CodePipeline User Guide.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// Defines the AWS CodePipeline pipeline stages.
	Stages *CodePipelinePipelineStagesList `json:"Stages,omitempty"`
}

// CfnResourceType returns AWS::CodePipeline::Pipeline to implement the ResourceProperties interface
func (s CodePipelinePipeline) CfnResourceType() string {
	return "AWS::CodePipeline::Pipeline"
}

// CognitoIdentityPool represents AWS::Cognito::IdentityPool
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html
type CognitoIdentityPool struct {
	// The name of your Amazon Cognito identity pool.
	IdentityPoolName *StringExpr `json:"IdentityPoolName,omitempty"`

	// Specifies whether the identity pool supports unauthenticated logins.
	AllowUnauthenticatedIdentities *BoolExpr `json:"AllowUnauthenticatedIdentities,omitempty"`

	// The "domain" by which Amazon Cognito will refer to your users. This
	// name acts as a placeholder that allows your backend and the Amazon
	// Cognito service to communicate about the developer provider. For the
	// DeveloperProviderName, you can use letters and periods (.),
	// underscores (_), and dashes (-).
	DeveloperProviderName *StringExpr `json:"DeveloperProviderName,omitempty"`

	// Key-value pairs that map provider names to provider app IDs.
	SupportedLoginProviders *StringExpr `json:"SupportedLoginProviders,omitempty"`

	// An array of Amazon Cognito user pools and their client IDs.
	CognitoIdentityProviders *CognitoIdentityPoolCognitoIdentityProviderList `json:"CognitoIdentityProviders,omitempty"`

	// A list of Amazon Resource Names (ARNs) of Security Assertion Markup
	// Language (SAML) providers.
	SamlProviderARNs interface{} `json:"SamlProviderARNs,omitempty"`

	// A list of ARNs for the OpendID Connect provider.
	OpenIdConnectProviderARNs interface{} `json:"OpenIdConnectProviderARNs,omitempty"`

	// Configuration options for configuring Amazon Cognito streams.
	CognitoStreams *CognitoIdentityPoolCognitoStreams `json:"CognitoStreams,omitempty"`

	// Configuration options to be applied to the identity pool.
	PushSync *CognitoIdentityPoolPushSync `json:"PushSync,omitempty"`

	// The events to configure.
	CognitoEvents interface{} `json:"CognitoEvents,omitempty"`
}

// CfnResourceType returns AWS::Cognito::IdentityPool to implement the ResourceProperties interface
func (s CognitoIdentityPool) CfnResourceType() string {
	return "AWS::Cognito::IdentityPool"
}

// CognitoIdentityPoolRoleAttachment represents AWS::Cognito::IdentityPoolRoleAttachment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html
type CognitoIdentityPoolRoleAttachment struct {
	// An identity pool ID in the format REGION:GUID.
	IdentityPoolId *StringExpr `json:"IdentityPoolId,omitempty"`

	// How users for a specific identity provider are to mapped to roles.
	// This is a string to RoleMapping object map. The string identifies the
	// identity provider, for example, "graph.facebook.com" or
	// "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id"
	RoleMappings *CognitoIdentityPoolRoleAttachmentRoleMapping `json:"RoleMappings,omitempty"`

	// The map of roles associated with this pool. For a given role, the key
	// will be either "authenticated" or "unauthenticated" and the value will
	// be the Role ARN.
	Roles interface{} `json:"Roles,omitempty"`
}

// CfnResourceType returns AWS::Cognito::IdentityPoolRoleAttachment to implement the ResourceProperties interface
func (s CognitoIdentityPoolRoleAttachment) CfnResourceType() string {
	return "AWS::Cognito::IdentityPoolRoleAttachment"
}

// CognitoUserPool represents AWS::Cognito::UserPool
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html
type CognitoUserPool struct {
	// The type of configuration for creating a new user profile.
	AdminCreateUserConfig *CognitoUserPoolAdminCreateUserConfig `json:"AdminCreateUserConfig,omitempty"`

	// Attributes supported as an alias for this user pool. Possible values:
	// phone_number, email, and/or preferred_username.
	AliasAttributes interface{} `json:"AliasAttributes,omitempty"`

	// The attributes to be auto-verified. Possible values: email and/or
	// phone_number.
	AutoVerifiedAttributes interface{} `json:"AutoVerifiedAttributes,omitempty"`

	// The type of configuration for the user pool's device tracking.
	DeviceConfiguration *CognitoUserPoolDeviceConfiguration `json:"DeviceConfiguration,omitempty"`

	// The email configuration.
	EmailConfiguration *CognitoUserPoolEmailConfiguration `json:"EmailConfiguration,omitempty"`

	// A string representing the email verification message. Must contain
	// {####} in the description.
	EmailVerificationMessage *StringExpr `json:"EmailVerificationMessage,omitempty"`

	// A string representing the email verification subject.
	EmailVerificationSubject *StringExpr `json:"EmailVerificationSubject,omitempty"`

	// The AWS Lambda trigger configuration information for the Amazon
	// Cognito user pool.
	LambdaConfig *CognitoUserPoolLambdaConfig `json:"LambdaConfig,omitempty"`

	// Specifies multi-factor authentication (MFA) configuration details. Can
	// be one of the following values:
	MfaConfiguration *StringExpr `json:"MfaConfiguration,omitempty"`

	// The policies associated with the Amazon Cognito user pool.
	Policies *CognitoUserPoolPolicies `json:"Policies,omitempty"`

	// A string used to name the user pool.
	UserPoolName *StringExpr `json:"UserPoolName,omitempty"`

	// A list of schema attributes for the new user pool. These attributes
	// can be standard or custom attributes.
	Schema *CognitoUserPoolSchemaAttributeList `json:"Schema,omitempty"`

	// A string representing the SMS authentication message. Must contain
	// {####} in the message.
	SmsAuthenticationMessage *StringExpr `json:"SmsAuthenticationMessage,omitempty"`

	// The Short Message Service (SMS) configuration.
	SmsConfiguration *CognitoUserPoolSmsConfiguration `json:"SmsConfiguration,omitempty"`

	// A string representing the SMS verification message. Must contain
	// {####} in the message.
	SmsVerificationMessage *StringExpr `json:"SmsVerificationMessage,omitempty"`

	// The cost allocation tags for the user pool. For more information, see
	// Adding Cost Allocation Tags to Your User Pool in the Amazon Cognito
	// Developer Guide.
	UserPoolTags *StringExpr `json:"UserPoolTags,omitempty"`
}

// CfnResourceType returns AWS::Cognito::UserPool to implement the ResourceProperties interface
func (s CognitoUserPool) CfnResourceType() string {
	return "AWS::Cognito::UserPool"
}

// CognitoUserPoolClient represents AWS::Cognito::UserPoolClient
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html
type CognitoUserPoolClient struct {
	// The client name for the user pool client that you want to create.
	ClientName *StringExpr `json:"ClientName,omitempty"`

	// The explicit authentication flows, which can be one of the following:
	// ADMIN_NO_SRP_AUTH or CUSTOM_AUTH_FLOW_ONLY.
	ExplicitAuthFlows interface{} `json:"ExplicitAuthFlows,omitempty"`

	// Specifies whether you want to generate a secret for the user pool
	// client being created.
	GenerateSecret *BoolExpr `json:"GenerateSecret,omitempty"`

	// The read attributes.
	ReadAttributes interface{} `json:"ReadAttributes,omitempty"`

	// The time limit, in days, after which the refresh token is no longer
	// valid.
	RefreshTokenValidity *IntegerExpr `json:"RefreshTokenValidity,omitempty"`

	// The user pool ID for the user pool where you want to create a client.
	UserPoolId *StringExpr `json:"UserPoolId,omitempty"`

	// The write attributes.
	WriteAttributes interface{} `json:"WriteAttributes,omitempty"`
}

// CfnResourceType returns AWS::Cognito::UserPoolClient to implement the ResourceProperties interface
func (s CognitoUserPoolClient) CfnResourceType() string {
	return "AWS::Cognito::UserPoolClient"
}

// CognitoUserPoolGroup represents AWS::Cognito::UserPoolGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html
type CognitoUserPoolGroup struct {
	// A description of the user group.
	Description *StringExpr `json:"Description,omitempty"`

	// The name of the user group. GroupName must be unique.
	GroupName *StringExpr `json:"GroupName,omitempty"`

	// A nonnegative integer value that specifies the precedence of this
	// group relative to the other groups that a user can belong to in the
	// user pool. Zero is the highest Precedence value. Groups with lower
	// Precedence values take precedence over groups with higher or null
	// Precedence values. If a user belongs to two or more groups, the role
	// ARN of the group with the lowest precedence value is used in the
	// cognito:roles and cognito:preferred_role claims in the user's tokens.
	Precedence *IntegerExpr `json:"Precedence,omitempty"`

	// The role ARN for the group.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// The user pool ID.
	UserPoolId *StringExpr `json:"UserPoolId,omitempty"`
}

// CfnResourceType returns AWS::Cognito::UserPoolGroup to implement the ResourceProperties interface
func (s CognitoUserPoolGroup) CfnResourceType() string {
	return "AWS::Cognito::UserPoolGroup"
}

// CognitoUserPoolUser represents AWS::Cognito::UserPoolUser
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html
type CognitoUserPoolUser struct {
	// Specifies how the welcome message will be sent. For email, specify
	// EMAIL. To use a phone number, specify SMS. You can specify more than
	// one value. The default value is SMS.
	DesiredDeliveryMediums interface{} `json:"DesiredDeliveryMediums,omitempty"`

	// Use this parameter only if the phone_number_verified attribute or the
	// email_verified attribute is set to True. Otherwise, it is ignored. The
	// default value is False.
	ForceAliasCreation *BoolExpr `json:"ForceAliasCreation,omitempty"`

	// A list of name-value pairs that contain user attributes and attribute
	// values to be set for the user that you are creating. You can create a
	// user without specifying any attributes other than Username. However,
	// any attributes that you specify as required (in CreateUserPool or in
	// the Attributes tab of the console) must be supplied either by you (in
	// your call to AdminCreateUser) or by the user (when signing up in
	// response to your welcome message).
	UserAttributes *CognitoUserPoolUserAttributeList `json:"UserAttributes,omitempty"`

	// Specifies the action you'd like to take for the message. Valid values
	// are RESEND and SUPPRESS.
	MessageAction *StringExpr `json:"MessageAction,omitempty"`

	// The user name for the user. Username must be unique within the user
	// pool. It must be a UTF-8 string between 1 and 128 characters. You
	// can't change the username.
	Username *StringExpr `json:"Username,omitempty"`

	// The ID for the user pool where the user will be created.
	UserPoolId *StringExpr `json:"UserPoolId,omitempty"`

	// The user's validation data. This is a list of name-value pairs that
	// contain user attributes and attribute values that you can use for
	// custom validation, such as restricting the types of user accounts that
	// can be registered. For example, you might choose to allow or disallow
	// user sign-up based on the user's domain.
	ValidationData *CognitoUserPoolUserAttributeList `json:"ValidationData,omitempty"`
}

// CfnResourceType returns AWS::Cognito::UserPoolUser to implement the ResourceProperties interface
func (s CognitoUserPoolUser) CfnResourceType() string {
	return "AWS::Cognito::UserPoolUser"
}

// CognitoUserPoolUserToGroupAttachment represents AWS::Cognito::UserPoolUserToGroupAttachment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html
type CognitoUserPoolUserToGroupAttachment struct {
	// The name of the group.
	GroupName *StringExpr `json:"GroupName,omitempty"`

	// The user's user name.
	Username *StringExpr `json:"Username,omitempty"`

	// The ID of the user pool.
	UserPoolId *StringExpr `json:"UserPoolId,omitempty"`
}

// CfnResourceType returns AWS::Cognito::UserPoolUserToGroupAttachment to implement the ResourceProperties interface
func (s CognitoUserPoolUserToGroupAttachment) CfnResourceType() string {
	return "AWS::Cognito::UserPoolUserToGroupAttachment"
}

// ConfigConfigRule represents AWS::Config::ConfigRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html
type ConfigConfigRule struct {
	// A name for the AWS Config rule. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// rule name. For more information, see Name Type.
	ConfigRuleName *StringExpr `json:"ConfigRuleName,omitempty"`

	// A description about this AWS Config rule.
	Description *StringExpr `json:"Description,omitempty"`

	// Input parameter values that are passed to the AWS Config rule (Lambda
	// function).
	InputParameters interface{} `json:"InputParameters,omitempty"`

	// The maximum frequency at which the AWS Config rule runs evaluations.
	// For valid values, see the ConfigRule data type in the AWS Config API
	// Reference.
	MaximumExecutionFrequency *StringExpr `json:"MaximumExecutionFrequency,omitempty"`

	// Defines which AWS resources will trigger an evaluation when their
	// configurations change. The scope can include one or more resource
	// types, a combination of a tag key and value, or a combination of one
	// resource type and one resource ID. Specify a scope to constrain the
	// resources that are evaluated. If you don't specify a scope, the rule
	// evaluates all resources in the recording group.
	Scope *ConfigConfigRuleScope `json:"Scope,omitempty"`

	// Specifies the rule owner, the rule identifier, and the events that
	// cause the function to evaluate your AWS resources.
	Source *ConfigConfigRuleSource `json:"Source,omitempty"`
}

// CfnResourceType returns AWS::Config::ConfigRule to implement the ResourceProperties interface
func (s ConfigConfigRule) CfnResourceType() string {
	return "AWS::Config::ConfigRule"
}

// ConfigConfigurationRecorder represents AWS::Config::ConfigurationRecorder
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html
type ConfigConfigurationRecorder struct {
	// A name for the configuration recorder. If you don't specify a name,
	// AWS CloudFormation generates a unique physical ID and uses that ID for
	// the configuration recorder name. For more information, see Name Type.
	Name *StringExpr `json:"Name,omitempty"`

	// Indicates whether to record configurations for all supported resources
	// or for a list of resource types. The resource types that you list must
	// be supported by AWS Config.
	RecordingGroup *ConfigConfigurationRecorderRecordingGroup `json:"RecordingGroup,omitempty"`

	// The Amazon Resource Name (ARN) of the AWS Identity and Access
	// Management (IAM) role that is used to make read or write requests to
	// the delivery channel that you specify and to get configuration details
	// for supported AWS resources. For more information, see Permissions for
	// the IAM Role Assigned to AWS Config in the AWS Config Developer Guide.
	RoleARN *StringExpr `json:"RoleARN,omitempty"`
}

// CfnResourceType returns AWS::Config::ConfigurationRecorder to implement the ResourceProperties interface
func (s ConfigConfigurationRecorder) CfnResourceType() string {
	return "AWS::Config::ConfigurationRecorder"
}

// ConfigDeliveryChannel represents AWS::Config::DeliveryChannel
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html
type ConfigDeliveryChannel struct {
	// Provides options for how AWS Config delivers configuration snapshots
	// to the S3 bucket in your delivery channel.
	ConfigSnapshotDeliveryProperties *ConfigDeliveryChannelConfigSnapshotDeliveryProperties `json:"ConfigSnapshotDeliveryProperties,omitempty"`

	// A name for the delivery channel. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// delivery channel name. For more information, see Name Type.
	Name *StringExpr `json:"Name,omitempty"`

	// The name of an S3 bucket where you want to store configuration history
	// for the delivery channel.
	S3BucketName *StringExpr `json:"S3BucketName,omitempty"`

	// A key prefix (folder) for the specified S3 bucket.
	S3KeyPrefix *StringExpr `json:"S3KeyPrefix,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon Simple Notification
	// Service (Amazon SNS) topic that AWS Config delivers notifications to.
	SnsTopicARN *StringExpr `json:"SnsTopicARN,omitempty"`
}

// CfnResourceType returns AWS::Config::DeliveryChannel to implement the ResourceProperties interface
func (s ConfigDeliveryChannel) CfnResourceType() string {
	return "AWS::Config::DeliveryChannel"
}

// DataPipelinePipeline represents AWS::DataPipeline::Pipeline
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html
type DataPipelinePipeline struct {
	// Indicates whether to validate and start the pipeline or stop an active
	// pipeline. By default, the value is set to true.
	Activate *BoolExpr `json:"Activate,omitempty"`

	// A description for the pipeline.
	Description *StringExpr `json:"Description,omitempty"`

	// A name for the pipeline. Because AWS CloudFormation assigns each new
	// pipeline a unique identifier, you can use the same name for multiple
	// pipelines that are associated with your AWS account.
	Name *StringExpr `json:"Name,omitempty"`

	// Defines the variables that are in the pipeline definition. For more
	// information, see Creating a Pipeline Using Parameterized Templates in
	// the AWS Data Pipeline Developer Guide.
	ParameterObjects *DataPipelinePipelineParameterObjectsList `json:"ParameterObjects,omitempty"`

	// Defines the values for the parameters that are defined in the
	// ParameterObjects property. For more information, see Creating a
	// Pipeline Using Parameterized Templates in the AWS Data Pipeline
	// Developer Guide.
	ParameterValues *DataPipelinePipelineParameterValuesList `json:"ParameterValues,omitempty"`

	// A list of pipeline objects that make up the pipeline. For more
	// information about pipeline objects and a description of each object,
	// see Pipeline Object Reference in the AWS Data Pipeline Developer
	// Guide.
	PipelineObjects *DataPipelinePipelineObjectList `json:"PipelineObjects,omitempty"`

	// A list of arbitrary tags (key-value pairs) to associate with the
	// pipeline, which you can use to control permissions. For more
	// information, see Controlling Access to Pipelines and Resources in the
	// AWS Data Pipeline Developer Guide.
	PipelineTags *DataPipelinePipelinePipelineTagsList `json:"PipelineTags,omitempty"`
}

// CfnResourceType returns AWS::DataPipeline::Pipeline to implement the ResourceProperties interface
func (s DataPipelinePipeline) CfnResourceType() string {
	return "AWS::DataPipeline::Pipeline"
}

// DAXCluster represents AWS::DAX::Cluster
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html
type DAXCluster struct {
	// The Availability Zones (AZs) in which the cluster nodes will be
	// created. All nodes belonging to the cluster are placed in these
	// Availability Zones. Use this parameter if you want to distribute the
	// nodes across multiple AZs.
	AvailabilityZones interface{} `json:"AvailabilityZones,omitempty"`

	// The cluster identifier. This parameter is stored as a lowercase
	// string.
	ClusterName *StringExpr `json:"ClusterName,omitempty"`

	// A description of the cluster.
	Description *StringExpr `json:"Description,omitempty"`

	// A valid Amazon Resource Name (ARN) that identifies an IAM role. At
	// runtime, DAX will assume this role and use the role's permissions to
	// access DynamoDB on your behalf.
	IAMRoleARN *StringExpr `json:"IAMRoleARN,omitempty"`

	// The compute and memory capacity of the nodes in the cluster.
	NodeType *StringExpr `json:"NodeType,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon SNS topic to which
	// notifications will be sent.
	NotificationTopicARN *StringExpr `json:"NotificationTopicARN,omitempty"`

	// The parameter group to be associated with the DAX cluster.
	ParameterGroupName *StringExpr `json:"ParameterGroupName,omitempty"`

	// Specifies the weekly time range during which maintenance on the DAX
	// cluster is performed. It is specified as a range in the format
	// ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
	// window is a 60 minute period. Valid values for ddd are:
	PreferredMaintenanceWindow *StringExpr `json:"PreferredMaintenanceWindow,omitempty"`

	// The number of nodes in the DAX cluster. A replication factor of 1 will
	// create a single-node cluster, without any read replicas. For
	// additional fault tolerance, you can create a multiple node cluster
	// with one or more read replicas. To do this, set ReplicationFactor to 2
	// or more.
	ReplicationFactor *IntegerExpr `json:"ReplicationFactor,omitempty"`

	// A list of security group IDs to be assigned to each node in the DAX
	// cluster. (Each of the security group ID is system-generated.)
	SecurityGroupIds interface{} `json:"SecurityGroupIds,omitempty"`

	// The name of the subnet group to be used for the replication group.
	SubnetGroupName *StringExpr `json:"SubnetGroupName,omitempty"`

	// A map of tags to associate with the DAX cluster.
	Tags *StringExpr `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::DAX::Cluster to implement the ResourceProperties interface
func (s DAXCluster) CfnResourceType() string {
	return "AWS::DAX::Cluster"
}

// DAXParameterGroup represents AWS::DAX::ParameterGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html
type DAXParameterGroup struct {
	// The name of the parameter group.
	ParameterGroupName *StringExpr `json:"ParameterGroupName,omitempty"`

	// A description of the parameter group.
	Description *StringExpr `json:"Description,omitempty"`

	// A map of DAX parameter names and values.
	ParameterNameValues *StringExpr `json:"ParameterNameValues,omitempty"`
}

// CfnResourceType returns AWS::DAX::ParameterGroup to implement the ResourceProperties interface
func (s DAXParameterGroup) CfnResourceType() string {
	return "AWS::DAX::ParameterGroup"
}

// DAXSubnetGroup represents AWS::DAX::SubnetGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html
type DAXSubnetGroup struct {
	// The name of the subnet group.
	SubnetGroupName *StringExpr `json:"SubnetGroupName,omitempty"`

	// The description of the subnet group.
	Description *StringExpr `json:"Description,omitempty"`

	// A list of subnets associated with the subnet group.
	SubnetIds interface{} `json:"SubnetIds,omitempty"`
}

// CfnResourceType returns AWS::DAX::SubnetGroup to implement the ResourceProperties interface
func (s DAXSubnetGroup) CfnResourceType() string {
	return "AWS::DAX::SubnetGroup"
}

// DirectoryServiceMicrosoftAD represents AWS::DirectoryService::MicrosoftAD
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html
type DirectoryServiceMicrosoftAD struct {
	// A unique alias to assign to the Microsoft Active Directory in AWS. AWS
	// Directory Service uses the alias to construct the access URL for the
	// directory, such as http://alias.awsapps.com. By default, AWS
	// CloudFormation does not create an alias.
	CreateAlias *BoolExpr `json:"CreateAlias,omitempty"`

	// Whether to enable single sign-on for a Microsoft Active Directory in
	// AWS. Single sign-on allows users in your directory to access certain
	// AWS services from a computer joined to the directory without having to
	// enter their credentials separately. If you don't specify a value, AWS
	// CloudFormation disables single sign-on by default.
	EnableSso *BoolExpr `json:"EnableSso,omitempty"`

	// The fully qualified name for the Microsoft Active Directory in AWS,
	// such as corp.example.com. The name doesn't need to be publicly
	// resolvable; it will resolve inside your VPC only.
	Name *StringExpr `json:"Name,omitempty"`

	// The password for the default administrative user, Admin.
	Password *StringExpr `json:"Password,omitempty"`

	// The NetBIOS name for your domain, such as CORP. If you don't specify a
	// value, AWS Directory Service uses the first part of your directory DNS
	// server name. For example, if your directory DNS server name is
	// corp.example.com, AWS Directory Service specifies CORP for the NetBIOS
	// name.
	ShortName *StringExpr `json:"ShortName,omitempty"`

	// Specifies the VPC settings of the Microsoft Active Directory server in
	// AWS.
	VpcSettings *DirectoryServiceMicrosoftADVpcSettings `json:"VpcSettings,omitempty"`
}

// CfnResourceType returns AWS::DirectoryService::MicrosoftAD to implement the ResourceProperties interface
func (s DirectoryServiceMicrosoftAD) CfnResourceType() string {
	return "AWS::DirectoryService::MicrosoftAD"
}

// DirectoryServiceSimpleAD represents AWS::DirectoryService::SimpleAD
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html
type DirectoryServiceSimpleAD struct {
	// A unique alias to assign to the directory. AWS Directory Service uses
	// the alias to construct the access URL for the directory, such as
	// http://alias.awsapps.com. By default, AWS CloudFormation does not
	// create an alias.
	CreateAlias *BoolExpr `json:"CreateAlias,omitempty"`

	// A description of the directory.
	Description *StringExpr `json:"Description,omitempty"`

	// Whether to enable single sign-on for a directory. If you don't specify
	// a value, AWS CloudFormation disables single sign-on by default.
	EnableSso *BoolExpr `json:"EnableSso,omitempty"`

	// The fully qualified name for the directory, such as corp.example.com.
	Name *StringExpr `json:"Name,omitempty"`

	// The password for the directory administrator. AWS Directory Service
	// creates a directory administrator account with the user name
	// Administrator and this password.
	Password *StringExpr `json:"Password,omitempty"`

	// The NetBIOS name of the on-premises directory, such as CORP.
	ShortName *StringExpr `json:"ShortName,omitempty"`

	// The size of the directory. For valid values, see CreateDirectory in
	// the AWS Directory Service API Reference.
	Size *StringExpr `json:"Size,omitempty"`

	// Specifies the VPC settings of the directory server.
	VpcSettings *DirectoryServiceSimpleADVpcSettings `json:"VpcSettings,omitempty"`
}

// CfnResourceType returns AWS::DirectoryService::SimpleAD to implement the ResourceProperties interface
func (s DirectoryServiceSimpleAD) CfnResourceType() string {
	return "AWS::DirectoryService::SimpleAD"
}

// DMSCertificate represents AWS::DMS::Certificate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html
type DMSCertificate struct {
	// The customer-assigned name of the certificate. Valid characters are
	// A-z and 0-9.
	CertificateIdentifier *StringExpr `json:"CertificateIdentifier,omitempty"`

	// The contents of the .pem X.509 certificate file for the certificate.
	CertificatePem *StringExpr `json:"CertificatePem,omitempty"`

	// The location of the imported Oracle Wallet certificate for use with
	// SSL.
	CertificateWallet interface{} `json:"CertificateWallet,omitempty"`
}

// CfnResourceType returns AWS::DMS::Certificate to implement the ResourceProperties interface
func (s DMSCertificate) CfnResourceType() string {
	return "AWS::DMS::Certificate"
}

// DMSEndpoint represents AWS::DMS::Endpoint
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html
type DMSEndpoint struct {
	// The Amazon Resource Number (ARN) for the certificate.
	CertificateArn *StringExpr `json:"CertificateArn,omitempty"`

	// The name of the endpoint database.
	DatabaseName *StringExpr `json:"DatabaseName,omitempty"`

	// Settings in JSON format for the target DynamoDB endpoint. For more
	// information about the available settings, see the Using Object Mapping
	// to Migrate Data to DynamoDB section at Using an Amazon DynamoDB
	// Database as a Target for AWS Database Migration Service.
	DynamoDbSettings interface{} `json:"DynamoDbSettings,omitempty"`

	// The database endpoint identifier. Identifiers must begin with a
	// letter; must contain only ASCII letters, digits, and hyphens; and must
	// not end with a hyphen or contain two consecutive hyphens.
	EndpointIdentifier *StringExpr `json:"EndpointIdentifier,omitempty"`

	// The type of endpoint. Valid values are source and target.
	EndpointType *StringExpr `json:"EndpointType,omitempty"`

	// The type of engine for the endpoint. Valid values depend on the
	// EndPointType and include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA,
	// REDSHIFT, S3, SYBASE, DYNAMODB, MONGODB, and SQLSERVER.
	EngineName *StringExpr `json:"EngineName,omitempty"`

	// Additional attributes associated with the connection.
	ExtraConnectionAttributes *StringExpr `json:"ExtraConnectionAttributes,omitempty"`

	// The KMS key identifier that will be used to encrypt the connection
	// parameters. If you do not specify a value for the KmsKeyId parameter,
	// then AWS DMS will use your default encryption key. AWS KMS creates the
	// default encryption key for your AWS account. Your AWS account has a
	// different default encryption key for each AWS region.
	KmsKeyId *StringExpr `json:"KmsKeyId,omitempty"`

	// Settings in JSON format for the source MongoDB endpoint. For more
	// information about the available settings, see the Configuration
	// Properties When Using MongoDB as a Source for AWS Database Migration
	// Service section at Using Amazon S3 as a Target for AWS Database
	// Migration Service.
	MongoDbSettings interface{} `json:"MongoDbSettings,omitempty"`

	// The password to be used to login to the endpoint database. Do not use
	// this parameter directly. Use Password as an input parameter with
	// noEcho as shown in the Parameters. For best practices information, see
	// Do Not Embed Credentials in Your Templates.
	Password *StringExpr `json:"Password,omitempty"`

	// The port used by the endpoint database.
	Port *IntegerExpr `json:"Port,omitempty"`

	// Settings in JSON format for the target Amazon S3 endpoint. For more
	// information about the available settings, see the Extra Connection
	// Attributes section at Using Amazon S3 as a Target for AWS Database
	// Migration Service in the AWS Database Migration Service User Guide.
	S3Settings interface{} `json:"S3Settings,omitempty"`

	// The name of the server where the endpoint database resides.
	ServerName *StringExpr `json:"ServerName,omitempty"`

	// The SSL mode to use for the SSL connection.
	SslMode *StringExpr `json:"SslMode,omitempty"`

	// The tags that you want to attach to the DMS endpoint.
	Tags *ResourceTagList `json:"Tags,omitempty"`

	// The user name to be used to login to the endpoint database.
	Username *StringExpr `json:"Username,omitempty"`
}

// CfnResourceType returns AWS::DMS::Endpoint to implement the ResourceProperties interface
func (s DMSEndpoint) CfnResourceType() string {
	return "AWS::DMS::Endpoint"
}

// DMSEventSubscription represents AWS::DMS::EventSubscription
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html
type DMSEventSubscription struct {
	// Indicates whether to activate the subscription. If you don't specify
	// this property, AWS CloudFormation activates the subscription.
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// A list of event categories that you want to subscribe to for a given
	// source type. If you don't specify this property, you are notified
	// about all event categories. For more information, see Using AWS DMS
	// Event Notification in the AWS Database Migration Service User Guide.
	EventCategories interface{} `json:"EventCategories,omitempty"`

	// The Amazon Resource Name (ARN) of an Amazon SNS topic that you want to
	// send event notifications to.
	SnsTopicArn *StringExpr `json:"SnsTopicArn,omitempty"`

	// A list of identifiers for which AWS DMS provides notification events.
	SourceIds interface{} `json:"SourceIds,omitempty"`

	// The type of source for which AWS DMS provides notification events. For
	// example, if you want to be notified of events generated by a database
	// instance, set this parameter to replication-instance. If you don't
	// specify a value, notifications are provided for all source types. For
	// valid values, see the SourceType parameter for the
	// CreateEventSubscription action in the AWS Database Migration Service
	// API Reference.
	SourceType *StringExpr `json:"SourceType,omitempty"`

	// The subscription name.
	SubscriptionName interface{} `json:"SubscriptionName,omitempty"`

	// The tags that you want to attach to the DMS event subscription.
	Tags *ResourceTagList `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::DMS::EventSubscription to implement the ResourceProperties interface
func (s DMSEventSubscription) CfnResourceType() string {
	return "AWS::DMS::EventSubscription"
}

// DMSReplicationInstance represents AWS::DMS::ReplicationInstance
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html
type DMSReplicationInstance struct {
	// The amount of storage (in gigabytes) to be initially allocated for the
	// replication instance.
	AllocatedStorage *IntegerExpr `json:"AllocatedStorage,omitempty"`

	// Indicates that minor engine upgrades will be applied automatically to
	// the replication instance during the maintenance window.
	AutoMinorVersionUpgrade *BoolExpr `json:"AutoMinorVersionUpgrade,omitempty"`

	// The EC2 Availability Zone that the replication instance will be
	// created in. The default value is a random, system-chosen Availability
	// Zone in the endpoint's region.
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`

	// The engine version number of the replication instance.
	EngineVersion *StringExpr `json:"EngineVersion,omitempty"`

	// The KMS key identifier that will be used to encrypt the content on the
	// replication instance. If you do not specify a value for the KmsKeyId
	// parameter, then AWS DMS will use your default encryption key. AWS KMS
	// creates the default encryption key for your AWS account. Your AWS
	// account has a different default encryption key for each AWS region.
	KmsKeyId *StringExpr `json:"KmsKeyId,omitempty"`

	// Specifies if the replication instance is a Multi-AZ deployment. You
	// cannot set the AvailabilityZone parameter if the MultiAZ parameter is
	// set to true .
	MultiAZ *BoolExpr `json:"MultiAZ,omitempty"`

	// The weekly time range during which system maintenance can occur, in
	// Universal Coordinated Time (UTC).
	PreferredMaintenanceWindow *StringExpr `json:"PreferredMaintenanceWindow,omitempty"`

	// Specifies the accessibility options for the replication instance. A
	// value of true represents an instance with a public IP address. A value
	// of false represents an instance with a private IP address. The default
	// value is true .
	PubliclyAccessible *BoolExpr `json:"PubliclyAccessible,omitempty"`

	// The compute and memory capacity of the replication instance as
	// specified by the replication instance class.
	ReplicationInstanceClass *StringExpr `json:"ReplicationInstanceClass,omitempty"`

	// A name for the replication instance. If you specify a name, AWS
	// CloudFormation converts it to lower case. If you don't specify a name,
	// AWS CloudFormation generates a unique physical ID and uses that ID for
	// the replication instance identifier. For more information, see Name
	// Type.
	ReplicationInstanceIdentifier *StringExpr `json:"ReplicationInstanceIdentifier,omitempty"`

	// A subnet group to associate with the replication instance.
	ReplicationSubnetGroupIdentifier *StringExpr `json:"ReplicationSubnetGroupIdentifier,omitempty"`

	// The tags that you want to attach to the DMS endpoint.
	Tags *ResourceTagList `json:"Tags,omitempty"`

	// Specifies the VPC security group to be used with the replication
	// instance. The VPC security group must work with the VPC containing the
	// replication instance.
	VpcSecurityGroupIds interface{} `json:"VpcSecurityGroupIds,omitempty"`
}

// CfnResourceType returns AWS::DMS::ReplicationInstance to implement the ResourceProperties interface
func (s DMSReplicationInstance) CfnResourceType() string {
	return "AWS::DMS::ReplicationInstance"
}

// DMSReplicationSubnetGroup represents AWS::DMS::ReplicationSubnetGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnet-group.html
type DMSReplicationSubnetGroup struct {
	// The identifier for the replication subnet group. If you don't specify
	// a name, AWS CloudFormation generates a unique physical ID and uses
	// that ID for the identifier.
	ReplicationSubnetGroupIdentifier *StringExpr `json:"ReplicationSubnetGroupIdentifier,omitempty"`

	// The description for the replication subnet group.
	ReplicationSubnetGroupDescription *StringExpr `json:"ReplicationSubnetGroupDescription,omitempty"`

	// The EC2 subnet IDs for the replication subnet group.
	SubnetIds interface{} `json:"SubnetIds,omitempty"`

	// The tags that you want to attach to the AWS DMS replication subnet
	// group.
	Tags *ResourceTagList `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::DMS::ReplicationSubnetGroup to implement the ResourceProperties interface
func (s DMSReplicationSubnetGroup) CfnResourceType() string {
	return "AWS::DMS::ReplicationSubnetGroup"
}

// DMSReplicationTask represents AWS::DMS::ReplicationTask
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html
type DMSReplicationTask struct {
	// The start time for the Change Data Capture (CDC) operation.
	CdcStartTime interface{} `json:"CdcStartTime,omitempty"`

	// The migration type.
	MigrationType *StringExpr `json:"MigrationType,omitempty"`

	// The Amazon Resource Name (ARN) of the replication instance.
	ReplicationInstanceArn *StringExpr `json:"ReplicationInstanceArn,omitempty"`

	// The ARN string that uniquely identifies the endpoint.
	ReplicationTaskIdentifier *StringExpr `json:"ReplicationTaskIdentifier,omitempty"`

	// Settings for the task, such as target metadata settings. For a
	// complete list of task settings, see Task Settings for AWS Database
	// Migration Service Tasks in the AWS Database Migration Service User
	// Guide.
	ReplicationTaskSettings *StringExpr `json:"ReplicationTaskSettings,omitempty"`

	// The ARN string that uniquely identifies the endpoint.
	SourceEndpointArn *StringExpr `json:"SourceEndpointArn,omitempty"`

	// The JSON that contains additional parameter values.
	TableMappings *StringExpr `json:"TableMappings,omitempty"`

	// The tags that you want to attach to the migration task.
	Tags *ResourceTagList `json:"Tags,omitempty"`

	// The ARN string that uniquely identifies the endpoint.
	TargetEndpointArn *StringExpr `json:"TargetEndpointArn,omitempty"`
}

// CfnResourceType returns AWS::DMS::ReplicationTask to implement the ResourceProperties interface
func (s DMSReplicationTask) CfnResourceType() string {
	return "AWS::DMS::ReplicationTask"
}

// DynamoDBTable represents AWS::DynamoDB::Table
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html
type DynamoDBTable struct {
	// A list of attributes that describe the key schema for the table and
	// indexes. Duplicates are allowed.
	AttributeDefinitions *DynamoDBTableAttributeDefinitionList `json:"AttributeDefinitions,omitempty"`

	// Global secondary indexes to be created on the table. You can create up
	// to 5 global secondary indexes.
	GlobalSecondaryIndexes *DynamoDBTableGlobalSecondaryIndexList `json:"GlobalSecondaryIndexes,omitempty"`

	// Specifies the attributes that make up the primary key for the table.
	// The attributes in the KeySchema property must also be defined in the
	// AttributeDefinitions property.
	KeySchema *DynamoDBTableKeySchemaList `json:"KeySchema,omitempty"`

	// Local secondary indexes to be created on the table. You can create up
	// to 5 local secondary indexes. Each index is scoped to a given hash key
	// value. The size of each hash key can be up to 10 gigabytes.
	LocalSecondaryIndexes *DynamoDBTableLocalSecondaryIndexList `json:"LocalSecondaryIndexes,omitempty"`

	// Throughput for the specified table, which consists of values for
	// ReadCapacityUnits and WriteCapacityUnits. For more information about
	// the contents of a provisioned throughput structure, see Amazon
	// DynamoDB Table ProvisionedThroughput.
	ProvisionedThroughput *DynamoDBTableProvisionedThroughput `json:"ProvisionedThroughput,omitempty"`

	// The settings for the DynamoDB table stream, which capture changes to
	// items stored in the table.
	StreamSpecification *DynamoDBTableStreamSpecification `json:"StreamSpecification,omitempty"`

	// A name for the table. If you don't specify a name, AWS CloudFormation
	// generates a unique physical ID and uses that ID for the table name.
	// For more information, see Name Type.
	TableName *StringExpr `json:"TableName,omitempty"`

	// Specifies an arbitrary set of tags (key–value pairs) to associate
	// with this table. Use tags to manage your resources.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// Specifies the Time to Live (TTL) settings for the table.
	TimeToLiveSpecification *DynamoDBTableTimeToLiveSpecification `json:"TimeToLiveSpecification,omitempty"`
}

// CfnResourceType returns AWS::DynamoDB::Table to implement the ResourceProperties interface
func (s DynamoDBTable) CfnResourceType() string {
	return "AWS::DynamoDB::Table"
}

// EC2CustomerGateway represents AWS::EC2::CustomerGateway
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html
type EC2CustomerGateway struct {
	// The customer gateway's Border Gateway Protocol (BGP) Autonomous System
	// Number (ASN).
	BgpAsn *IntegerExpr `json:"BgpAsn,omitempty"`

	// The internet-routable IP address for the customer gateway's outside
	// interface. The address must be static.
	IpAddress *StringExpr `json:"IpAddress,omitempty"`

	// The tags that you want to attach to the resource.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The type of VPN connection that this customer gateway supports.
	Type *StringExpr `json:"Type,omitempty"`
}

// CfnResourceType returns AWS::EC2::CustomerGateway to implement the ResourceProperties interface
func (s EC2CustomerGateway) CfnResourceType() string {
	return "AWS::EC2::CustomerGateway"
}

// EC2DHCPOptions represents AWS::EC2::DHCPOptions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html
type EC2DHCPOptions struct {
	// A domain name of your choice.
	DomainName *StringExpr `json:"DomainName,omitempty"`

	// The IP (IPv4) address of a domain name server. You can specify up to
	// four addresses.
	DomainNameServers interface{} `json:"DomainNameServers,omitempty"`

	// The IP address (IPv4) of a NetBIOS name server. You can specify up to
	// four addresses.
	NetbiosNameServers interface{} `json:"NetbiosNameServers,omitempty"`

	// An integer value indicating the NetBIOS node type:
	NetbiosNodeType interface{} `json:"NetbiosNodeType,omitempty"`

	// The IP address (IPv4) of a Network Time Protocol (NTP) server. You can
	// specify up to four addresses.
	NtpServers interface{} `json:"NtpServers,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this resource.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::EC2::DHCPOptions to implement the ResourceProperties interface
func (s EC2DHCPOptions) CfnResourceType() string {
	return "AWS::EC2::DHCPOptions"
}

// EC2EgressOnlyInternetGateway represents AWS::EC2::EgressOnlyInternetGateway
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html
type EC2EgressOnlyInternetGateway struct {
	// The ID of the VPC for which to create the egress-only Internet
	// gateway.
	VpcId *StringExpr `json:"VpcId,omitempty"`
}

// CfnResourceType returns AWS::EC2::EgressOnlyInternetGateway to implement the ResourceProperties interface
func (s EC2EgressOnlyInternetGateway) CfnResourceType() string {
	return "AWS::EC2::EgressOnlyInternetGateway"
}

// EC2EIP represents AWS::EC2::EIP
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html
type EC2EIP struct {
	// The Instance ID of the Amazon EC2 instance that you want to associate
	// with this Elastic IP address.
	InstanceId *StringExpr `json:"InstanceId,omitempty"`

	// Set to vpc to allocate the address to your Virtual Private Cloud
	// (VPC). No other values are supported.
	Domain *StringExpr `json:"Domain,omitempty"`
}

// CfnResourceType returns AWS::EC2::EIP to implement the ResourceProperties interface
func (s EC2EIP) CfnResourceType() string {
	return "AWS::EC2::EIP"
}

// EC2EIPAssociation represents AWS::EC2::EIPAssociation
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html
type EC2EIPAssociation struct {
	// [EC2-VPC] Allocation ID for the VPC Elastic IP address you want to
	// associate with an Amazon EC2 instance in your VPC.
	AllocationId *StringExpr `json:"AllocationId,omitempty"`

	// Elastic IP address that you want to associate with the Amazon EC2
	// instance specified by the InstanceId property. You can specify an
	// existing Elastic IP address or a reference to an Elastic IP address
	// allocated with a AWS::EC2::EIP resource.
	EIP *StringExpr `json:"EIP,omitempty"`

	// Instance ID of the Amazon EC2 instance that you want to associate with
	// the Elastic IP address specified by the EIP property. If the instance
	// has more than one network interface, you must specify a network
	// interface ID.
	InstanceId *StringExpr `json:"InstanceId,omitempty"`

	// [EC2-VPC] The ID of the network interface to associate with the
	// Elastic IP address. If the instance has more than one network
	// interface, you must specify a network interface ID.
	NetworkInterfaceId *StringExpr `json:"NetworkInterfaceId,omitempty"`

	// [EC2-VPC] The private IP address that you want to associate with the
	// Elastic IP address. The private IP address is restricted to the
	// primary and secondary private IP addresses that are associated with
	// the network interface. By default, the private IP address that is
	// associated with the EIP is the primary private IP address of the
	// network interface.
	PrivateIpAddress *StringExpr `json:"PrivateIpAddress,omitempty"`
}

// CfnResourceType returns AWS::EC2::EIPAssociation to implement the ResourceProperties interface
func (s EC2EIPAssociation) CfnResourceType() string {
	return "AWS::EC2::EIPAssociation"
}

// EC2FlowLog represents AWS::EC2::FlowLog
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html
type EC2FlowLog struct {
	// The Amazon Resource Name (ARN) of an AWS Identity and Access
	// Management (IAM) role that permits Amazon EC2 to publish flow logs to
	// a CloudWatch Logs log group in your account.
	DeliverLogsPermissionArn *StringExpr `json:"DeliverLogsPermissionArn,omitempty"`

	// The name of a new or existing CloudWatch Logs log group where Amazon
	// EC2 publishes your flow logs.
	LogGroupName *StringExpr `json:"LogGroupName,omitempty"`

	// The ID of the subnet, network interface, or VPC for which you want to
	// create a flow log.
	ResourceId *StringExpr `json:"ResourceId,omitempty"`

	// The type of resource that you specified in the ResourceId property.
	// For example, if you specified a VPC ID for the ResourceId property,
	// specify VPC for this property. For valid values, see the ResourceType
	// parameter for the CreateFlowLogs action in the Amazon EC2 API
	// Reference.
	ResourceType *StringExpr `json:"ResourceType,omitempty"`

	// The type of traffic to log. You can log traffic that the resource
	// accepts or rejects, or all traffic. For valid values, see the
	// TrafficType parameter for the CreateFlowLogs action in the Amazon EC2
	// API Reference.
	TrafficType *StringExpr `json:"TrafficType,omitempty"`
}

// CfnResourceType returns AWS::EC2::FlowLog to implement the ResourceProperties interface
func (s EC2FlowLog) CfnResourceType() string {
	return "AWS::EC2::FlowLog"
}

// EC2Host represents AWS::EC2::Host
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html
type EC2Host struct {
	// Indicates if the host accepts EC2 instances with only matching
	// configurations or if instances must also specify the host ID.
	// Instances that don't specify a host ID can't launch onto a host with
	// AutoPlacement set to off. By default, AWS CloudFormation sets this
	// property to on. For more information, see Understanding Instance
	// Placement and Host Affinity in the Amazon EC2 User Guide for Linux
	// Instances.
	AutoPlacement *StringExpr `json:"AutoPlacement,omitempty"`

	// The Availability Zone (AZ) in which to launch the dedicated host.
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`

	// The instance type that the dedicated host accepts. Only instances of
	// this type can be launched onto the host. For more information, see
	// Supported Instance Types in the Amazon EC2 User Guide for Linux
	// Instances.
	InstanceType *StringExpr `json:"InstanceType,omitempty"`
}

// CfnResourceType returns AWS::EC2::Host to implement the ResourceProperties interface
func (s EC2Host) CfnResourceType() string {
	return "AWS::EC2::Host"
}

// EC2Instance represents AWS::EC2::Instance
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html
type EC2Instance struct {
	// Indicates whether Amazon Elastic Compute Cloud (Amazon EC2) always
	// associates the instance with a dedicated host. If you want Amazon EC2
	// to always restart the instance (if it was stopped) onto the same host
	// on which it was launched, specify host. If you want Amazon EC2 to
	// restart the instance on any available host, but to try to launch the
	// instance onto the last host it ran on (on a best-effort basis),
	// specify default.
	Affinity *StringExpr `json:"Affinity,omitempty"`

	// Specifies the name of the Availability Zone in which the instance is
	// located.
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`

	// Defines a set of Amazon Elastic Block Store block device mappings,
	// ephemeral instance store block device mappings, or both. For more
	// information, see Amazon Elastic Block Store or Amazon EC2 Instance
	// Store in the Amazon EC2 User Guide for Linux Instances.
	BlockDeviceMappings *EC2BlockDeviceMappingPropertyList `json:"BlockDeviceMappings,omitempty"`

	// Specifies whether the instance can be terminated through the API.
	DisableApiTermination *BoolExpr `json:"DisableApiTermination,omitempty"`

	// Specifies whether the instance is optimized for Amazon Elastic Block
	// Store I/O. This optimization provides dedicated throughput to Amazon
	// EBS and an optimized configuration stack to provide optimal EBS I/O
	// performance.
	EbsOptimized *BoolExpr `json:"EbsOptimized,omitempty"`

	// If you specify host for the Affinity property, the ID of a dedicated
	// host that the instance is associated with. If you don't specify an ID,
	// Amazon EC2 launches the instance onto any available, compatible
	// dedicated host in your account. This type of launch is called an
	// untargeted launch. Note that for untargeted launches, you must have a
	// compatible, dedicated host available to successfully launch instances.
	HostId *StringExpr `json:"HostId,omitempty"`

	// The name of an instance profile or a reference to an
	// AWS::IAM::InstanceProfile resource.
	IamInstanceProfile *StringExpr `json:"IamInstanceProfile,omitempty"`

	// Provides the unique ID of the Amazon Machine Image (AMI) that was
	// assigned during registration.
	ImageId *StringExpr `json:"ImageId,omitempty"`

	// Indicates whether an instance stops or terminates when you shut down
	// the instance from the instance's operating system shutdown command.
	// You can specify stop or terminate. For more information, see the
	// RunInstances command in the Amazon EC2 API Reference.
	InstanceInitiatedShutdownBehavior *StringExpr `json:"InstanceInitiatedShutdownBehavior,omitempty"`

	// The instance type, such as t2.micro. The default type is "m3.medium".
	// For a list of instance types, see Instance Families and Types.
	InstanceType *StringExpr `json:"InstanceType,omitempty"`

	// The number of IPv6 addresses to associate with the instance's primary
	// network interface. Amazon EC2 automatically selects the IPv6 addresses
	// from the subnet range. To specify specific IPv6 addresses, use the
	// Ipv6Addresses property and don't specify this property.
	Ipv6AddressCount *IntegerExpr `json:"Ipv6AddressCount,omitempty"`

	// One or more specific IPv6 addresses from the IPv6 CIDR block range of
	// your subnet to associate with the instance's primary network
	// interface. To specify a number of IPv6 addresses, use the
	// Ipv6AddressCount property and don't specify this property.
	Ipv6Addresses *EC2NetworkInterfaceIpv6AddressesList `json:"Ipv6Addresses,omitempty"`

	// The kernel ID.
	KernelId *StringExpr `json:"KernelId,omitempty"`

	// Provides the name of the Amazon EC2 key pair.
	KeyName *StringExpr `json:"KeyName,omitempty"`

	// Specifies whether detailed monitoring is enabled for the instance.
	Monitoring *BoolExpr `json:"Monitoring,omitempty"`

	// A list of embedded objects that describes the network interfaces to
	// associate with this instance.
	NetworkInterfaces *EC2NetworkInterfaceEmbeddedList `json:"NetworkInterfaces,omitempty"`

	// The name of an existing placement group that you want to launch the
	// instance into (for cluster instances).
	PlacementGroupName *StringExpr `json:"PlacementGroupName,omitempty"`

	// The private IP address for this instance.
	PrivateIpAddress *StringExpr `json:"PrivateIpAddress,omitempty"`

	// The ID of the RAM disk to select. Some kernels require additional
	// drivers at launch. Check the kernel requirements for information about
	// whether you need to specify a RAM disk. To find kernel requirements,
	// go to the AWS Resource Center and search for the kernel ID.
	RamdiskId *StringExpr `json:"RamdiskId,omitempty"`

	// A list that contains the security group IDs for VPC security groups to
	// assign to the Amazon EC2 instance. If you specified the
	// NetworkInterfaces property, do not specify this property.
	SecurityGroupIds interface{} `json:"SecurityGroupIds,omitempty"`

	// Valid only for Amazon EC2 security groups. A list that contains the
	// Amazon EC2 security groups to assign to the Amazon EC2 instance. The
	// list can contain both the name of existing Amazon EC2 security groups
	// or references to AWS::EC2::SecurityGroup resources created in the
	// template.
	SecurityGroups interface{} `json:"SecurityGroups,omitempty"`

	// Controls whether source/destination checking is enabled on the
	// instance. Also determines if an instance in a VPC will perform network
	// address translation (NAT).
	SourceDestCheck *BoolExpr `json:"SourceDestCheck,omitempty"`

	// The Amazon EC2 Systems Manager (SSM) document and parameter values to
	// associate with this instance. To use this property, you must specify
	// an IAM role for the instance. For more information, see Prerequisites
	// for Remotely Running Commands on EC2 Instances in the Amazon EC2 User
	// Guide for Windows Instances.
	SsmAssociations *EC2InstanceSsmAssociationsList `json:"SsmAssociations,omitempty"`

	// If you're using Amazon VPC, this property specifies the ID of the
	// subnet that you want to launch the instance into. If you specified the
	// NetworkInterfaces property, do not specify this property.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this instance.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The tenancy of the instance that you want to launch, such as default,
	// dedicated, or host. If you specify a tenancy value of dedicated or
	// host, you must launch the instance in a VPC. For more information, see
	// Dedicated Instances in the Amazon VPC User Guide.
	Tenancy *StringExpr `json:"Tenancy,omitempty"`

	// Base64-encoded MIME user data that is made available to the instances.
	UserData *StringExpr `json:"UserData,omitempty"`

	// The Amazon EBS volumes to attach to the instance.
	Volumes *EC2MountPointList `json:"Volumes,omitempty"`

	// Reserved.
	AdditionalInfo *StringExpr `json:"AdditionalInfo,omitempty"`
}

// CfnResourceType returns AWS::EC2::Instance to implement the ResourceProperties interface
func (s EC2Instance) CfnResourceType() string {
	return "AWS::EC2::Instance"
}

// EC2InternetGateway represents AWS::EC2::InternetGateway
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
type EC2InternetGateway struct {
	// An arbitrary set of tags (key–value pairs) for this resource.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::EC2::InternetGateway to implement the ResourceProperties interface
func (s EC2InternetGateway) CfnResourceType() string {
	return "AWS::EC2::InternetGateway"
}

// EC2NatGateway represents AWS::EC2::NatGateway
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html
type EC2NatGateway struct {
	// The allocation ID of an Elastic IP address to associate with the NAT
	// gateway. If the Elastic IP address is associated with another
	// resource, you must first disassociate it.
	AllocationId *StringExpr `json:"AllocationId,omitempty"`

	// The public subnet in which to create the NAT gateway.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`

	// Specifies an arbitrary set of tags (key–value pairs) to associate
	// with this resource. Use tags to manage your resources.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::EC2::NatGateway to implement the ResourceProperties interface
func (s EC2NatGateway) CfnResourceType() string {
	return "AWS::EC2::NatGateway"
}

// EC2NetworkAcl represents AWS::EC2::NetworkAcl
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html
type EC2NetworkAcl struct {
	// An arbitrary set of tags (key–value pairs) for this ACL.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The ID of the VPC where the network ACL will be created.
	VpcId *StringExpr `json:"VpcId,omitempty"`
}

// CfnResourceType returns AWS::EC2::NetworkAcl to implement the ResourceProperties interface
func (s EC2NetworkAcl) CfnResourceType() string {
	return "AWS::EC2::NetworkAcl"
}

// EC2NetworkAclEntry represents AWS::EC2::NetworkAclEntry
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html
type EC2NetworkAclEntry struct {
	// The IPv4 CIDR range to allow or deny, in CIDR notation (e.g.,
	// 172.16.0.0/24).
	CidrBlock *StringExpr `json:"CidrBlock,omitempty"`

	// Whether this rule applies to egress traffic from the subnet (true) or
	// ingress traffic to the subnet (false). By default, AWS CloudFormation
	// specifies false.
	Egress *BoolExpr `json:"Egress,omitempty"`

	// The Internet Control Message Protocol (ICMP) code and type.
	Icmp *EC2NetworkAclEntryIcmp `json:"Icmp,omitempty"`

	// The IPv6 CIDR range to allow or deny, in CIDR notation.
	Ipv6CidrBlock *StringExpr `json:"Ipv6CidrBlock,omitempty"`

	// ID of the ACL where the entry will be created.
	NetworkAclId *StringExpr `json:"NetworkAclId,omitempty"`

	// The range of port numbers for the UDP/TCP protocol.
	PortRange *EC2NetworkAclEntryPortRange `json:"PortRange,omitempty"`

	// The IP protocol that the rule applies to. You must specify -1 or a
	// protocol number (go to Protocol Numbers at iana.org). You can specify
	// -1 for all protocols.
	Protocol *IntegerExpr `json:"Protocol,omitempty"`

	// Whether to allow or deny traffic that matches the rule; valid values
	// are "allow" or "deny".
	RuleAction *StringExpr `json:"RuleAction,omitempty"`

	// Rule number to assign to the entry, such as 100. ACL entries are
	// processed in ascending order by rule number. Entries can't use the
	// same rule number unless one is an egress rule and the other is an
	// ingress rule. For valid values, see the CreateNetworkAclEntry action
	// in the Amazon EC2 API Reference.
	RuleNumber *IntegerExpr `json:"RuleNumber,omitempty"`
}

// CfnResourceType returns AWS::EC2::NetworkAclEntry to implement the ResourceProperties interface
func (s EC2NetworkAclEntry) CfnResourceType() string {
	return "AWS::EC2::NetworkAclEntry"
}

// EC2NetworkInterface represents AWS::EC2::NetworkInterface
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html
type EC2NetworkInterface struct {
	// The description of this network interface.
	Description *StringExpr `json:"Description,omitempty"`

	// A list of security group IDs associated with this network interface.
	GroupSet *StringListExpr `json:"GroupSet,omitempty"`

	// The number of IPv6 addresses to associate with the network interface.
	// EC2 automatically selects the IPv6 addresses from the subnet range. To
	// specify specific IPv6 addresses, use the Ipv6Addresses property and
	// don't specify this property.
	Ipv6AddressCount *IntegerExpr `json:"Ipv6AddressCount,omitempty"`

	// One or more specific IPv6 addresses from the IPv6 CIDR block range of
	// your subnet to associate with the network interface. If you're
	// specifying a number of IPv6 addresses, use the Ipv6AddressCount
	// property and don't specify this property.
	Ipv6Addresses *EC2NetworkInterfaceIpv6AddressesList `json:"Ipv6Addresses,omitempty"`

	// Assigns a single private IP address to the network interface, which is
	// used as the primary private IP address. If you want to specify
	// multiple private IP address, use the PrivateIpAddresses property.
	PrivateIpAddress *StringExpr `json:"PrivateIpAddress,omitempty"`

	// Assigns a list of private IP addresses to the network interface. You
	// can specify a primary private IP address by setting the value of the
	// Primary property to true in the PrivateIpAddressSpecification
	// property. If you want EC2 to automatically assign private IP
	// addresses, use the SecondaryPrivateIpAddressCount property and do not
	// specify this property.
	PrivateIpAddresses *EC2NetworkInterfacePrivateIPSpecificationList `json:"PrivateIpAddresses,omitempty"`

	// The number of secondary private IP addresses that EC2 automatically
	// assigns to the network interface. EC2 uses the value of the
	// PrivateIpAddress property as the primary private IP address. If you
	// don't specify that property, EC2 automatically assigns both the
	// primary and secondary private IP addresses.
	SecondaryPrivateIpAddressCount *IntegerExpr `json:"SecondaryPrivateIpAddressCount,omitempty"`

	// Flag indicating whether traffic to or from the instance is validated.
	SourceDestCheck *BoolExpr `json:"SourceDestCheck,omitempty"`

	// The ID of the subnet to associate with the network interface.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this network
	// interface.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::EC2::NetworkInterface to implement the ResourceProperties interface
func (s EC2NetworkInterface) CfnResourceType() string {
	return "AWS::EC2::NetworkInterface"
}

// EC2NetworkInterfaceAttachment represents AWS::EC2::NetworkInterfaceAttachment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html
type EC2NetworkInterfaceAttachment struct {
	// Whether to delete the network interface when the instance terminates.
	// By default, this value is set to True.
	DeleteOnTermination *BoolExpr `json:"DeleteOnTermination,omitempty"`

	// The network interface's position in the attachment order. For example,
	// the first attached network interface has a DeviceIndex of 0.
	DeviceIndex *StringExpr `json:"DeviceIndex,omitempty"`

	// The ID of the instance to which you will attach the ENI.
	InstanceId *StringExpr `json:"InstanceId,omitempty"`

	// The ID of the ENI that you want to attach.
	NetworkInterfaceId *StringExpr `json:"NetworkInterfaceId,omitempty"`
}

// CfnResourceType returns AWS::EC2::NetworkInterfaceAttachment to implement the ResourceProperties interface
func (s EC2NetworkInterfaceAttachment) CfnResourceType() string {
	return "AWS::EC2::NetworkInterfaceAttachment"
}

// EC2NetworkInterfacePermission represents AWS::EC2::NetworkInterfacePermission
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html
type EC2NetworkInterfacePermission struct {
	// The AWS account ID.
	AwsAccountId interface{} `json:"AwsAccountId,omitempty"`

	// The ID of the network interface.
	NetworkInterfaceId interface{} `json:"NetworkInterfaceId,omitempty"`

	// The type of permission to grant: INSTANCE-ATTACH or EIP-ASSOCIATE.
	Permission interface{} `json:"Permission,omitempty"`
}

// CfnResourceType returns AWS::EC2::NetworkInterfacePermission to implement the ResourceProperties interface
func (s EC2NetworkInterfacePermission) CfnResourceType() string {
	return "AWS::EC2::NetworkInterfacePermission"
}

// EC2PlacementGroup represents AWS::EC2::PlacementGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html
type EC2PlacementGroup struct {
	// The placement strategy, which relates to the instance types that can
	// be added to the placement group. For example, for the cluster
	// strategy, you can cluster C4 instance types but not T2 instance types.
	// For valid values, see CreatePlacementGroup in the Amazon EC2 API
	// Reference. By default, AWS CloudFormation sets the value of this
	// property to cluster.
	Strategy *StringExpr `json:"Strategy,omitempty"`
}

// CfnResourceType returns AWS::EC2::PlacementGroup to implement the ResourceProperties interface
func (s EC2PlacementGroup) CfnResourceType() string {
	return "AWS::EC2::PlacementGroup"
}

// EC2Route represents AWS::EC2::Route
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
type EC2Route struct {
	// The IPv4 CIDR address block used for the destination match. For
	// example, 0.0.0.0/0. Routing decisions are based on the most specific
	// match.
	DestinationCidrBlock *StringExpr `json:"DestinationCidrBlock,omitempty"`

	// The IPv6 CIDR address block used for the destination match. For
	// example, ::/0. Routing decisions are based on the most specific match.
	DestinationIpv6CidrBlock *StringExpr `json:"DestinationIpv6CidrBlock,omitempty"`

	// The ID of an egress-only internet gateway that is attached to your VPC
	// (over IPv6 only).
	EgressOnlyInternetGatewayId *StringExpr `json:"EgressOnlyInternetGatewayId,omitempty"`

	// The ID of an internet gateway or virtual private gateway that is
	// attached to your VPC. For example: igw-eaad4883.
	GatewayId *StringExpr `json:"GatewayId,omitempty"`

	// The ID of a NAT instance in your VPC. For example, i-1a2b3c4d.
	InstanceId *StringExpr `json:"InstanceId,omitempty"`

	// The ID of a NAT gateway. For example, nat-0a12bc456789de0fg.
	NatGatewayId *StringExpr `json:"NatGatewayId,omitempty"`

	// Allows the routing of network interface IDs.
	NetworkInterfaceId *StringExpr `json:"NetworkInterfaceId,omitempty"`

	// The ID of the route table where the route will be added.
	RouteTableId *StringExpr `json:"RouteTableId,omitempty"`

	// The ID of a VPC peering connection.
	VpcPeeringConnectionId *StringExpr `json:"VpcPeeringConnectionId,omitempty"`
}

// CfnResourceType returns AWS::EC2::Route to implement the ResourceProperties interface
func (s EC2Route) CfnResourceType() string {
	return "AWS::EC2::Route"
}

// EC2RouteTable represents AWS::EC2::RouteTable
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html
type EC2RouteTable struct {
	// The ID of the VPC where the route table will be created.
	VpcId *StringExpr `json:"VpcId,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this route table.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::EC2::RouteTable to implement the ResourceProperties interface
func (s EC2RouteTable) CfnResourceType() string {
	return "AWS::EC2::RouteTable"
}

// EC2SecurityGroup represents AWS::EC2::SecurityGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
type EC2SecurityGroup struct {
	// The name of the security group. For valid values, see the GroupName
	// parameter of the CreateSecurityGroup action in the Amazon EC2 API
	// Reference.
	GroupName *StringExpr `json:"GroupName,omitempty"`

	// A description of the security group.
	GroupDescription *StringExpr `json:"GroupDescription,omitempty"`

	// A list of Amazon EC2 security group egress rules.
	SecurityGroupEgress *EC2SecurityGroupRuleList `json:"SecurityGroupEgress,omitempty"`

	// A list of Amazon EC2 security group ingress rules.
	SecurityGroupIngress *EC2SecurityGroupRuleList `json:"SecurityGroupIngress,omitempty"`

	// The tags that you want to attach to the resource.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The physical ID of the VPC. You can obtain the physical ID by using a
	// reference to an AWS::EC2::VPC, such as: { "Ref" : "myVPC" }.
	VpcId *StringExpr `json:"VpcId,omitempty"`
}

// CfnResourceType returns AWS::EC2::SecurityGroup to implement the ResourceProperties interface
func (s EC2SecurityGroup) CfnResourceType() string {
	return "AWS::EC2::SecurityGroup"
}

// EC2SecurityGroupEgress represents AWS::EC2::SecurityGroupEgress
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html
type EC2SecurityGroupEgress struct {
	// An IPv4 CIDR range.
	CidrIp *StringExpr `json:"CidrIp,omitempty"`

	// An IPv6 CIDR range.
	CidrIpv6 *StringExpr `json:"CidrIpv6,omitempty"`

	// Description of the egress rule.
	Description *StringExpr `json:"Description,omitempty"`

	// The AWS service prefix of an Amazon VPC endpoint. For more
	// information, see VPC Endpoints in the Amazon VPC User Guide.
	DestinationPrefixListId *StringExpr `json:"DestinationPrefixListId,omitempty"`

	// Specifies the group ID of the destination Amazon VPC security group.
	DestinationSecurityGroupId *StringExpr `json:"DestinationSecurityGroupId,omitempty"`

	// Start of port range for the TCP and UDP protocols, or an ICMP type
	// number. If you specify icmp for the IpProtocol property, you can
	// specify -1 as a wildcard (i.e., any ICMP type number).
	FromPort *IntegerExpr `json:"FromPort,omitempty"`

	// ID of the Amazon VPC security group to modify. This value can be a
	// reference to an AWS::EC2::SecurityGroup resource that has a valid
	// VpcId property or the ID of an existing Amazon VPC security group.
	GroupId *StringExpr `json:"GroupId,omitempty"`

	// IP protocol name or number. For valid values, see the IpProtocol
	// parameter in AuthorizeSecurityGroupIngress
	IpProtocol *StringExpr `json:"IpProtocol,omitempty"`

	// End of port range for the TCP and UDP protocols, or an ICMP code. If
	// you specify icmp for the IpProtocol property, you can specify -1 as a
	// wildcard (i.e., any ICMP code).
	ToPort *IntegerExpr `json:"ToPort,omitempty"`
}

// CfnResourceType returns AWS::EC2::SecurityGroupEgress to implement the ResourceProperties interface
func (s EC2SecurityGroupEgress) CfnResourceType() string {
	return "AWS::EC2::SecurityGroupEgress"
}

// EC2SecurityGroupIngress represents AWS::EC2::SecurityGroupIngress
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html
type EC2SecurityGroupIngress struct {
	// An IPv4 CIDR range.
	CidrIp *StringExpr `json:"CidrIp,omitempty"`

	// An IPv6 CIDR range.
	CidrIpv6 *StringExpr `json:"CidrIpv6,omitempty"`

	// Description of the ingress rule.
	Description *StringExpr `json:"Description,omitempty"`

	// Start of port range for the TCP and UDP protocols, or an ICMP type
	// number. If you specify icmp for the IpProtocol property, you can
	// specify -1 as a wildcard (i.e., any ICMP type number).
	FromPort *IntegerExpr `json:"FromPort,omitempty"`

	// ID of the Amazon EC2 or VPC security group to modify. The group must
	// belong to your account.
	GroupId *StringExpr `json:"GroupId,omitempty"`

	// Name of the Amazon EC2 security group (non-VPC security group) to
	// modify. This value can be a reference to an AWS::EC2::SecurityGroup
	// resource or the name of an existing Amazon EC2 security group.
	GroupName *StringExpr `json:"GroupName,omitempty"`

	// IP protocol name or number. For valid values, see the IpProtocol
	// parameter in AuthorizeSecurityGroupIngress
	IpProtocol *StringExpr `json:"IpProtocol,omitempty"`

	// Specifies the ID of the source security group or uses the Ref
	// intrinsic function to refer to the logical ID of a security group
	// defined in the same template.
	SourceSecurityGroupId *StringExpr `json:"SourceSecurityGroupId,omitempty"`

	// Specifies the name of the Amazon EC2 security group (non-VPC security
	// group) to allow access or use the Ref intrinsic function to refer to
	// the logical ID of a security group defined in the same template. For
	// instances in a VPC, specify the SourceSecurityGroupId property.
	SourceSecurityGroupName *StringExpr `json:"SourceSecurityGroupName,omitempty"`

	// Specifies the AWS Account ID of the owner of the Amazon EC2 security
	// group specified in the SourceSecurityGroupName property.
	SourceSecurityGroupOwnerId *StringExpr `json:"SourceSecurityGroupOwnerId,omitempty"`

	// End of port range for the TCP and UDP protocols, or an ICMP code. If
	// you specify icmp for the IpProtocol property, you can specify -1 as a
	// wildcard (i.e., any ICMP code).
	ToPort *IntegerExpr `json:"ToPort,omitempty"`
}

// CfnResourceType returns AWS::EC2::SecurityGroupIngress to implement the ResourceProperties interface
func (s EC2SecurityGroupIngress) CfnResourceType() string {
	return "AWS::EC2::SecurityGroupIngress"
}

// EC2SpotFleet represents AWS::EC2::SpotFleet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html
type EC2SpotFleet struct {
	// The configuration for a Spot fleet request.
	SpotFleetRequestConfigData *EC2SpotFleetSpotFleetRequestConfigData `json:"SpotFleetRequestConfigData,omitempty"`
}

// CfnResourceType returns AWS::EC2::SpotFleet to implement the ResourceProperties interface
func (s EC2SpotFleet) CfnResourceType() string {
	return "AWS::EC2::SpotFleet"
}

// EC2Subnet represents AWS::EC2::Subnet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
type EC2Subnet struct {
	// Indicates whether a network interface created in this subnet receives
	// an IPv6 address.
	AssignIpv6AddressOnCreation *BoolExpr `json:"AssignIpv6AddressOnCreation,omitempty"`

	// The availability zone in which you want the subnet. Default: AWS
	// selects a zone for you (recommended).
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`

	// The CIDR block that you want the subnet to cover (for example,
	// "10.0.0.0/24").
	CidrBlock *StringExpr `json:"CidrBlock,omitempty"`

	// The IPv6 network range for the subnet, in CIDR notation. The subnet
	// size must use a /64 prefix length.
	Ipv6CidrBlock *StringExpr `json:"Ipv6CidrBlock,omitempty"`

	// Indicates whether instances that are launched in this subnet receive a
	// public IP address. By default, the value is false.
	MapPublicIpOnLaunch *BoolExpr `json:"MapPublicIpOnLaunch,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this subnet.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// A Ref structure that contains the ID of the VPC on which you want to
	// create the subnet. The VPC ID is provided as the value of the "Ref"
	// property, as: { "Ref": "VPCID" }.
	VpcId interface{} `json:"VpcId,omitempty"`
}

// CfnResourceType returns AWS::EC2::Subnet to implement the ResourceProperties interface
func (s EC2Subnet) CfnResourceType() string {
	return "AWS::EC2::Subnet"
}

// EC2SubnetCidrBlock represents AWS::EC2::SubnetCidrBlock
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html
type EC2SubnetCidrBlock struct {
	// The IPv6 CIDR block for the subnet. The CIDR block must have a prefix
	// length of /64.
	Ipv6CidrBlock *StringExpr `json:"Ipv6CidrBlock,omitempty"`

	// The ID of the subnet to associate the IPv6 CIDR block with.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`
}

// CfnResourceType returns AWS::EC2::SubnetCidrBlock to implement the ResourceProperties interface
func (s EC2SubnetCidrBlock) CfnResourceType() string {
	return "AWS::EC2::SubnetCidrBlock"
}

// EC2SubnetNetworkAclAssociation represents AWS::EC2::SubnetNetworkAclAssociation
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html
type EC2SubnetNetworkAclAssociation struct {
	// The ID representing the current association between the original
	// network ACL and the subnet.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`

	// The ID of the new ACL to associate with the subnet.
	NetworkAclId *StringExpr `json:"NetworkAclId,omitempty"`
}

// CfnResourceType returns AWS::EC2::SubnetNetworkAclAssociation to implement the ResourceProperties interface
func (s EC2SubnetNetworkAclAssociation) CfnResourceType() string {
	return "AWS::EC2::SubnetNetworkAclAssociation"
}

// EC2SubnetRouteTableAssociation represents AWS::EC2::SubnetRouteTableAssociation
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
type EC2SubnetRouteTableAssociation struct {
	// The ID of the route table. This is commonly written as a reference to
	// a route table declared elsewhere in the template. For example:
	RouteTableId *StringExpr `json:"RouteTableId,omitempty"`

	// The ID of the subnet. This is commonly written as a reference to a
	// subnet declared elsewhere in the template. For example:
	SubnetId *StringExpr `json:"SubnetId,omitempty"`
}

// CfnResourceType returns AWS::EC2::SubnetRouteTableAssociation to implement the ResourceProperties interface
func (s EC2SubnetRouteTableAssociation) CfnResourceType() string {
	return "AWS::EC2::SubnetRouteTableAssociation"
}

// EC2Volume represents AWS::EC2::Volume
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html
type EC2Volume struct {
	// Indicates whether the volume is auto-enabled for I/O operations. By
	// default, Amazon EBS disables I/O to the volume from attached EC2
	// instances when it determines that a volume's data is potentially
	// inconsistent. If the consistency of the volume is not a concern, and
	// you prefer that the volume be made available immediately if it's
	// impaired, you can configure the volume to automatically enable I/O.
	// For more information, see Working with the AutoEnableIO Volume
	// Attribute in the Amazon EC2 User Guide for Linux Instances.
	AutoEnableIO *BoolExpr `json:"AutoEnableIO,omitempty"`

	// The Availability Zone in which to create the new volume.
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`

	// Indicates whether the volume is encrypted. You can attach encrypted
	// Amazon EBS volumes only to instance types that support Amazon EBS
	// encryption. Volumes that are created from encrypted snapshots are
	// automatically encrypted. You can't create an encrypted volume from an
	// unencrypted snapshot, or vice versa. If your AMI uses encrypted
	// volumes, you can launch the AMI only on supported instance types. For
	// more information, see Amazon EBS encryption in the Amazon EC2 User
	// Guide for Linux Instances.
	Encrypted *BoolExpr `json:"Encrypted,omitempty"`

	// The number of I/O operations per second (IOPS) that the volume
	// supports. For more information about the valid sizes for each volume
	// type, see the Iops parameter for the CreateVolume action in the Amazon
	// EC2 API Reference.
	Iops *IntegerExpr `json:"Iops,omitempty"`

	// The Amazon Resource Name (ARN) of the AWS Key Management Service
	// master key that is used to create the encrypted volume, such as
	// arn:aws:kms:us-east-2:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef.
	// If you create an encrypted volume and don't specify this property, AWS
	// CloudFormation uses the default master key.
	KmsKeyId *StringExpr `json:"KmsKeyId,omitempty"`

	// The size of the volume, in gibibytes (GiBs). For more information
	// about the valid sizes for each volume type, see the Size parameter for
	// the CreateVolume action in the Amazon EC2 API Reference.
	Size *IntegerExpr `json:"Size,omitempty"`

	// The snapshot from which to create the new volume.
	SnapshotId *StringExpr `json:"SnapshotId,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this volume.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The volume type. If you set the type to io1, you must also set the
	// Iops property. For valid values, see the VolumeType parameter for the
	// CreateVolume action in the Amazon EC2 API Reference.
	VolumeType *StringExpr `json:"VolumeType,omitempty"`
}

// CfnResourceType returns AWS::EC2::Volume to implement the ResourceProperties interface
func (s EC2Volume) CfnResourceType() string {
	return "AWS::EC2::Volume"
}

// EC2VolumeAttachment represents AWS::EC2::VolumeAttachment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html
type EC2VolumeAttachment struct {
	// How the device is exposed to the instance (e.g., /dev/sdh, or xvdh).
	Device *StringExpr `json:"Device,omitempty"`

	// The ID of the instance to which the volume attaches. This value can be
	// a reference to an AWS::EC2::Instance resource, or it can be the
	// physical ID of an existing EC2 instance.
	InstanceId *StringExpr `json:"InstanceId,omitempty"`

	// The ID of the Amazon EBS volume. The volume and instance must be
	// within the same Availability Zone. This value can be a reference to an
	// AWS::EC2::Volume resource, or it can be the volume ID of an existing
	// Amazon EBS volume.
	VolumeId *StringExpr `json:"VolumeId,omitempty"`
}

// CfnResourceType returns AWS::EC2::VolumeAttachment to implement the ResourceProperties interface
func (s EC2VolumeAttachment) CfnResourceType() string {
	return "AWS::EC2::VolumeAttachment"
}

// EC2VPC represents AWS::EC2::VPC
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
type EC2VPC struct {
	// The CIDR block you want the VPC to cover. For example: "10.0.0.0/16".
	CidrBlock *StringExpr `json:"CidrBlock,omitempty"`

	// Specifies whether DNS resolution is supported for the VPC. If this
	// attribute is true, the Amazon DNS server resolves DNS hostnames for
	// your instances to their corresponding IP addresses; otherwise, it does
	// not. By default the value is set to true.
	EnableDnsSupport *BoolExpr `json:"EnableDnsSupport,omitempty"`

	// Specifies whether the instances launched in the VPC get DNS hostnames.
	// If this attribute is true, instances in the VPC get DNS hostnames;
	// otherwise, they do not. You can only set EnableDnsHostnames to true if
	// you also set the EnableDnsSupport attribute to true. By default, the
	// value is set to false.
	EnableDnsHostnames *BoolExpr `json:"EnableDnsHostnames,omitempty"`

	// The allowed tenancy of instances launched into the VPC.
	InstanceTenancy *StringExpr `json:"InstanceTenancy,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this VPC. To name a
	// VPC resource, specify a value for the Name key.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::EC2::VPC to implement the ResourceProperties interface
func (s EC2VPC) CfnResourceType() string {
	return "AWS::EC2::VPC"
}

// EC2VPCCidrBlock represents AWS::EC2::VPCCidrBlock
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html
type EC2VPCCidrBlock struct {
	// Whether to request an Amazon-provided IPv6 CIDR block with a /56
	// prefix length for the VPC. You can't specify the range of IPv6
	// addresses or the size of the CIDR block.
	AmazonProvidedIpv6CidrBlock *BoolExpr `json:"AmazonProvidedIpv6CidrBlock,omitempty"`

	// An IPv4 CIDR block to associate with the VPC.
	CidrBlock *StringExpr `json:"CidrBlock,omitempty"`

	// The ID of the VPC to associate the Amazon-provided IPv6 CIDR block
	// with.
	VpcId *StringExpr `json:"VpcId,omitempty"`
}

// CfnResourceType returns AWS::EC2::VPCCidrBlock to implement the ResourceProperties interface
func (s EC2VPCCidrBlock) CfnResourceType() string {
	return "AWS::EC2::VPCCidrBlock"
}

// EC2VPCDHCPOptionsAssociation represents AWS::EC2::VPCDHCPOptionsAssociation
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html
type EC2VPCDHCPOptionsAssociation struct {
	// The ID of the DHCP options you want to associate with the VPC. Specify
	// default if you want the VPC to use no DHCP options.
	DhcpOptionsId *StringExpr `json:"DhcpOptionsId,omitempty"`

	// The ID of the VPC to associate with this DHCP options set.
	VpcId *StringExpr `json:"VpcId,omitempty"`
}

// CfnResourceType returns AWS::EC2::VPCDHCPOptionsAssociation to implement the ResourceProperties interface
func (s EC2VPCDHCPOptionsAssociation) CfnResourceType() string {
	return "AWS::EC2::VPCDHCPOptionsAssociation"
}

// EC2VPCEndpoint represents AWS::EC2::VPCEndpoint
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html
type EC2VPCEndpoint struct {
	// A policy to attach to the endpoint that controls access to the
	// service. The policy must be valid JSON. The default policy allows full
	// access to the AWS service. For more information, see Controlling
	// Access to Services in the Amazon VPC User Guide.
	PolicyDocument interface{} `json:"PolicyDocument,omitempty"`

	// One or more route table IDs that are used by the VPC to reach the
	// endpoint.
	RouteTableIds interface{} `json:"RouteTableIds,omitempty"`

	// The AWS service to which you want to establish a connection. Specify
	// the service name in the form of com.amazonaws.region.service.
	ServiceName *StringExpr `json:"ServiceName,omitempty"`

	// The ID of the VPC in which the endpoint is used.
	VpcId *StringExpr `json:"VpcId,omitempty"`
}

// CfnResourceType returns AWS::EC2::VPCEndpoint to implement the ResourceProperties interface
func (s EC2VPCEndpoint) CfnResourceType() string {
	return "AWS::EC2::VPCEndpoint"
}

// EC2VPCGatewayAttachment represents AWS::EC2::VPCGatewayAttachment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html
type EC2VPCGatewayAttachment struct {
	// The ID of the Internet gateway.
	InternetGatewayId *StringExpr `json:"InternetGatewayId,omitempty"`

	// The ID of the VPC to associate with this gateway.
	VpcId *StringExpr `json:"VpcId,omitempty"`

	// The ID of the virtual private network (VPN) gateway to attach to the
	// VPC.
	VpnGatewayId *StringExpr `json:"VpnGatewayId,omitempty"`
}

// CfnResourceType returns AWS::EC2::VPCGatewayAttachment to implement the ResourceProperties interface
func (s EC2VPCGatewayAttachment) CfnResourceType() string {
	return "AWS::EC2::VPCGatewayAttachment"
}

// EC2VPCPeeringConnection represents AWS::EC2::VPCPeeringConnection
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html
type EC2VPCPeeringConnection struct {
	// The ID of the VPC with which you are creating the peering connection.
	PeerVpcId *StringExpr `json:"PeerVpcId,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this resource.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The ID of the VPC that is requesting a peering connection.
	VpcId *StringExpr `json:"VpcId,omitempty"`

	// The AWS account ID of the owner of the VPC that you want to peer with.
	PeerOwnerId *StringExpr `json:"PeerOwnerId,omitempty"`

	// The Amazon Resource Name (ARN) of the VPC peer role for the peering
	// connection in another AWS account.
	PeerRoleArn *StringExpr `json:"PeerRoleArn,omitempty"`
}

// CfnResourceType returns AWS::EC2::VPCPeeringConnection to implement the ResourceProperties interface
func (s EC2VPCPeeringConnection) CfnResourceType() string {
	return "AWS::EC2::VPCPeeringConnection"
}

// EC2VPNConnection represents AWS::EC2::VPNConnection
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html
type EC2VPNConnection struct {
	// The type of VPN connection this virtual private gateway supports.
	Type *StringExpr `json:"Type,omitempty"`

	// The ID of the customer gateway. This can either be an embedded JSON
	// object or a reference to a Gateway ID.
	CustomerGatewayId *StringExpr `json:"CustomerGatewayId,omitempty"`

	// Indicates whether the VPN connection requires static routes.
	StaticRoutesOnly *BoolExpr `json:"StaticRoutesOnly,omitempty"`

	// The tags that you want to attach to the resource.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The ID of the virtual private gateway. This can either be an embedded
	// JSON object or a reference to a Gateway ID.
	VpnGatewayId *StringExpr `json:"VpnGatewayId,omitempty"`

	// The tunnel options for the VPN connection. Duplicates not allowed.
	VpnTunnelOptionsSpecifications *EC2VPNConnectionVpnTunnelOptionsSpecificationList `json:"VpnTunnelOptionsSpecifications,omitempty"`
}

// CfnResourceType returns AWS::EC2::VPNConnection to implement the ResourceProperties interface
func (s EC2VPNConnection) CfnResourceType() string {
	return "AWS::EC2::VPNConnection"
}

// EC2VPNConnectionRoute represents AWS::EC2::VPNConnectionRoute
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html
type EC2VPNConnectionRoute struct {
	// The CIDR block that is associated with the local subnet of the
	// customer network.
	DestinationCidrBlock *StringExpr `json:"DestinationCidrBlock,omitempty"`

	// The ID of the VPN connection.
	VpnConnectionId *StringExpr `json:"VpnConnectionId,omitempty"`
}

// CfnResourceType returns AWS::EC2::VPNConnectionRoute to implement the ResourceProperties interface
func (s EC2VPNConnectionRoute) CfnResourceType() string {
	return "AWS::EC2::VPNConnectionRoute"
}

// EC2VPNGateway represents AWS::EC2::VPNGateway
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html
type EC2VPNGateway struct {
	// The private Autonomous System Number (ASN) for the Amazon side of a
	// BGP session.
	AmazonSideAsn interface{} `json:"AmazonSideAsn,omitempty"`

	// The type of VPN connection this virtual private gateway supports. The
	// only valid value is "ipsec.1".
	Type *StringExpr `json:"Type,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this resource.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::EC2::VPNGateway to implement the ResourceProperties interface
func (s EC2VPNGateway) CfnResourceType() string {
	return "AWS::EC2::VPNGateway"
}

// EC2VPNGatewayRoutePropagation represents AWS::EC2::VPNGatewayRoutePropagation
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html
type EC2VPNGatewayRoutePropagation struct {
	// A list of routing table IDs that are associated with a VPC. The
	// routing tables must be associated with the same VPC that the virtual
	// private gateway is attached to.
	RouteTableIds interface{} `json:"RouteTableIds,omitempty"`

	// The ID of the virtual private gateway that is attached to a VPC. The
	// virtual private gateway must be attached to the same VPC that the
	// routing tables are associated with.
	VpnGatewayId *StringExpr `json:"VpnGatewayId,omitempty"`
}

// CfnResourceType returns AWS::EC2::VPNGatewayRoutePropagation to implement the ResourceProperties interface
func (s EC2VPNGatewayRoutePropagation) CfnResourceType() string {
	return "AWS::EC2::VPNGatewayRoutePropagation"
}

// ECRRepository represents AWS::ECR::Repository
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html
type ECRRepository struct {
	// A lifecycle policy for the repository.
	LifecyclePolicy *ElasticContainerRegistryRepositoryLifecyclePolicy `json:"LifecyclePolicy,omitempty"`

	// A name for the image repository. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// repository name. For more information, see Name Type.
	RepositoryName *StringExpr `json:"RepositoryName,omitempty"`

	// A policy that controls who has access to the repository and which
	// actions they can perform on it. For more information, see Amazon ECR
	// Repository Policies in the Amazon Elastic Container Registry User
	// Guide.
	RepositoryPolicyText interface{} `json:"RepositoryPolicyText,omitempty"`
}

// CfnResourceType returns AWS::ECR::Repository to implement the ResourceProperties interface
func (s ECRRepository) CfnResourceType() string {
	return "AWS::ECR::Repository"
}

// ECSCluster represents AWS::ECS::Cluster
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html
type ECSCluster struct {
	// A name for the cluster. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID for the name. For more
	// information, see Name Type.
	ClusterName *StringExpr `json:"ClusterName,omitempty"`
}

// CfnResourceType returns AWS::ECS::Cluster to implement the ResourceProperties interface
func (s ECSCluster) CfnResourceType() string {
	return "AWS::ECS::Cluster"
}

// ECSService represents AWS::ECS::Service
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html
type ECSService struct {
	// The name or Amazon Resource Name (ARN) of the cluster that you want to
	// run your Amazon ECS service on. If you do not specify a cluster,
	// Amazon ECS uses the default cluster.
	Cluster *StringExpr `json:"Cluster,omitempty"`

	// Configures how many tasks run during a deployment.
	DeploymentConfiguration *ElasticContainerServiceServiceDeploymentConfiguration `json:"DeploymentConfiguration,omitempty"`

	// The number of simultaneous tasks that you want to run on the cluster.
	// Specify the tasks with the TaskDefinition property.
	DesiredCount *IntegerExpr `json:"DesiredCount,omitempty"`

	// The launch type on which to run your service. If one is not specified,
	// EC2 will be used by default. Valid values include EC2 and FARGATE.
	LaunchType interface{} `json:"LaunchType,omitempty"`

	// A list of load balancer objects to associate with the cluster. If you
	// specify the Role property, LoadBalancers must be specified as well.
	// For information about the number of load balancers that you can
	// specify per service, see Service Load Balancing in the Amazon Elastic
	// Container Service Developer Guide.
	LoadBalancers *ElasticContainerServiceServiceLoadBalancersList `json:"LoadBalancers,omitempty"`

	// The network configuration for the service. This parameter is required
	// for task definitions that use the awsvpc network mode to receive their
	// own Elastic Network Interface, and it is not supported for other
	// network modes. For more information, see Task Networking in the Amazon
	// Elastic Container Service Developer Guide.
	NetworkConfiguration *ElasticContainerServiceServiceNetworkConfiguration `json:"NetworkConfiguration,omitempty"`

	// The placement constraints for the tasks in the service.
	PlacementConstraints *ElasticContainerServiceServicePlacementConstraintList `json:"PlacementConstraints,omitempty"`

	// The placement strategies that determine how tasks for the service are
	// placed.
	PlacementStrategies *ElasticContainerServiceServicePlacementStrategiesList `json:"PlacementStrategies,omitempty"`

	// The platform version on which to run your service. If one is not
	// specified, the latest version will be used by default.
	PlatformVersion interface{} `json:"PlatformVersion,omitempty"`

	// The name or ARN of an AWS Identity and Access Management (IAM) role
	// that allows your Amazon ECS container agent to make calls to your load
	// balancer.
	Role *StringExpr `json:"Role,omitempty"`

	// The name of your service. The name is limited to 255 letters
	// (uppercase and lowercase), numbers, hyphens, and underscores. Service
	// names must be unique within a cluster, but you can have similarly
	// named services in multiple clusters within a region or across multiple
	// regions.
	ServiceName *StringExpr `json:"ServiceName,omitempty"`

	// The ARN of the task definition (including the revision number) that
	// you want to run on the cluster, such as
	// arn:aws:ecs:us-east-1:123456789012:task-definition/mytask:3. You can't
	// use :latest to specify a revision because it's ambiguous. For example,
	// if AWS CloudFormation needed to roll back an update, it wouldn't know
	// which revision to roll back to.
	TaskDefinition *StringExpr `json:"TaskDefinition,omitempty"`
}

// CfnResourceType returns AWS::ECS::Service to implement the ResourceProperties interface
func (s ECSService) CfnResourceType() string {
	return "AWS::ECS::Service"
}

// ECSTaskDefinition represents AWS::ECS::TaskDefinition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html
type ECSTaskDefinition struct {
	// A list of container definitions in JSON format that describes the
	// containers that make up your task.
	ContainerDefinitions *ElasticContainerServiceTaskDefinitionContainerDefinitionList `json:"ContainerDefinitions,omitempty"`

	// The number of cpu units used by the task. If using the EC2 launch
	// type, this field is optional and any value can be used. If you are
	// using the Fargate launch type, this field is required and you must use
	// one of the following values, which determines your range of valid
	// values for the memory parameter:
	Cpu *StringExpr `json:"Cpu,omitempty"`

	// The Amazon Resource Name (ARN) of the task execution role that
	// containers in this task can assume. All containers in this task are
	// granted the permissions that are specified in this role.
	ExecutionRoleArn *StringExpr `json:"ExecutionRoleArn,omitempty"`

	// The name of a family that this task definition is registered to. A
	// family groups multiple versions of a task definition. Amazon ECS gives
	// the first task definition that you registered to a family a revision
	// number of 1. Amazon ECS gives sequential revision numbers to each task
	// definition that you add.
	Family *StringExpr `json:"Family,omitempty"`

	// The amount (in MiB) of memory used by the task. If using the EC2
	// launch type, this field is optional and any value can be used. If you
	// are using the Fargate launch type, this field is required and you must
	// use one of the following values, which determines your range of valid
	// values for the cpu parameter:
	Memory *StringExpr `json:"Memory,omitempty"`

	// The Docker networking mode to use for the containers in the task, such
	// as none, bridge, or host. For information about network modes, see
	// NetworkMode in the Task Definition Parameters topic in the Amazon
	// Elastic Container Service Developer Guide.
	NetworkMode *StringExpr `json:"NetworkMode,omitempty"`

	// The placement constraints for the tasks in the service.
	PlacementConstraints *ElasticContainerServiceServicePlacementConstraint `json:"PlacementConstraints,omitempty"`

	// The launch type the task requires. If no value is specified, it will
	// default to EC2. Valid values include EC2 and FARGATE.
	RequiresCompatibilities interface{} `json:"RequiresCompatibilities,omitempty"`

	// The Amazon Resource Name (ARN) of an AWS Identity and Access
	// Management (IAM) role that grants containers in the task permission to
	// call AWS APIs on your behalf. For more information, see IAM Roles for
	// Tasks in the Amazon Elastic Container Service Developer Guide.
	TaskRoleArn *StringExpr `json:"TaskRoleArn,omitempty"`

	// A list of volume definitions in JSON format for the volumes that you
	// can use in your container definitions.
	Volumes *ElasticContainerServiceTaskDefinitionVolumesList `json:"Volumes,omitempty"`
}

// CfnResourceType returns AWS::ECS::TaskDefinition to implement the ResourceProperties interface
func (s ECSTaskDefinition) CfnResourceType() string {
	return "AWS::ECS::TaskDefinition"
}

// EFSFileSystem represents AWS::EFS::FileSystem
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html
type EFSFileSystem struct {
	// Tags to associate with the file system.
	FileSystemTags *ElasticFileSystemFileSystemFileSystemTagsList `json:"FileSystemTags,omitempty"`

	// A boolean value that, if true, creates an encrypted file system. For
	// more information, see CreateFileSystem in the Amazon Elastic File
	// System User Guide.
	Encrypted *BoolExpr `json:"Encrypted,omitempty"`

	// The ID of the AWS KMS customer master key (CMK) to use to protect the
	// encrypted file system. This parameter is only required if you want to
	// use a non-default CMK. For more information, see CreateFileSystem in
	// the Amazon Elastic File System User Guide.
	KmsKeyId *StringExpr `json:"KmsKeyId,omitempty"`

	// The performance mode of the file system. For valid values, see the
	// PerformanceMode parameter for the CreateFileSystem action in the
	// Amazon Elastic File System User Guide.
	PerformanceMode *StringExpr `json:"PerformanceMode,omitempty"`
}

// CfnResourceType returns AWS::EFS::FileSystem to implement the ResourceProperties interface
func (s EFSFileSystem) CfnResourceType() string {
	return "AWS::EFS::FileSystem"
}

// EFSMountTarget represents AWS::EFS::MountTarget
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html
type EFSMountTarget struct {
	// The ID of the file system for which you want to create the mount
	// target.
	FileSystemId *StringExpr `json:"FileSystemId,omitempty"`

	// An IPv4 address that is within the address range of the subnet that is
	// specified in the SubnetId property. If you don't specify an IP
	// address, Amazon EFS automatically assigns an address that is within
	// the range of the subnet.
	IpAddress *StringExpr `json:"IpAddress,omitempty"`

	// A maximum of five VPC security group IDs that are in the same VPC as
	// the subnet that is specified in the SubnetId property. For more
	// information about security groups and mount targets, see Security in
	// the Amazon Elastic File System User Guide.
	SecurityGroups interface{} `json:"SecurityGroups,omitempty"`

	// The ID of the subnet in which you want to add the mount target.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`
}

// CfnResourceType returns AWS::EFS::MountTarget to implement the ResourceProperties interface
func (s EFSMountTarget) CfnResourceType() string {
	return "AWS::EFS::MountTarget"
}

// ElastiCacheCacheCluster represents AWS::ElastiCache::CacheCluster
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html
type ElastiCacheCacheCluster struct {
	// Indicates that minor engine upgrades will be applied automatically to
	// the cache cluster during the maintenance window.
	AutoMinorVersionUpgrade *BoolExpr `json:"AutoMinorVersionUpgrade,omitempty"`

	// For Memcached cache clusters, indicates whether the nodes are created
	// in a single Availability Zone or across multiple Availability Zones in
	// the cluster's region. For valid values, see CreateCacheCluster in the
	// Amazon ElastiCache API Reference.
	AZMode *StringExpr `json:"AZMode,omitempty"`

	// The compute and memory capacity of nodes in a cache cluster.
	CacheNodeType *StringExpr `json:"CacheNodeType,omitempty"`

	// The name of the cache parameter group that is associated with this
	// cache cluster.
	CacheParameterGroupName *StringExpr `json:"CacheParameterGroupName,omitempty"`

	// A list of cache security group names that are associated with this
	// cache cluster. If your cache cluster is in a VPC, specify the
	// VpcSecurityGroupIds property instead.
	CacheSecurityGroupNames interface{} `json:"CacheSecurityGroupNames,omitempty"`

	// The cache subnet group that you associate with a cache cluster.
	CacheSubnetGroupName *StringExpr `json:"CacheSubnetGroupName,omitempty"`

	// A name for the cache cluster. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// cache cluster. For more information, see Name Type.
	ClusterName *StringExpr `json:"ClusterName,omitempty"`

	// The name of the cache engine to be used for this cache cluster, such
	// as memcached or redis.
	Engine *StringExpr `json:"Engine,omitempty"`

	// The version of the cache engine to be used for this cluster.
	EngineVersion *StringExpr `json:"EngineVersion,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon Simple Notification
	// Service (SNS) topic to which notifications will be sent.
	NotificationTopicArn *StringExpr `json:"NotificationTopicArn,omitempty"`

	// The number of cache nodes that the cache cluster should have.
	NumCacheNodes *IntegerExpr `json:"NumCacheNodes,omitempty"`

	// The port number on which each of the cache nodes will accept
	// connections.
	Port *IntegerExpr `json:"Port,omitempty"`

	// The Amazon EC2 Availability Zone in which the cache cluster is
	// created.
	PreferredAvailabilityZone *StringExpr `json:"PreferredAvailabilityZone,omitempty"`

	// For Memcached cache clusters, the list of Availability Zones in which
	// cache nodes are created. The number of Availability Zones listed must
	// equal the number of cache nodes. For example, if you want to create
	// three nodes in two different Availability Zones, you can specify
	// ["us-east-1a", "us-east-1a", "us-east-1b"], which would create two
	// nodes in us-east-1a and one node in us-east-1b.
	PreferredAvailabilityZones interface{} `json:"PreferredAvailabilityZones,omitempty"`

	// The weekly time range (in UTC) during which system maintenance can
	// occur.
	PreferredMaintenanceWindow *StringExpr `json:"PreferredMaintenanceWindow,omitempty"`

	// The ARN of the snapshot file that you want to use to seed a new Redis
	// cache cluster. If you manage a Redis instance outside of Amazon
	// ElastiCache, you can create a new cache cluster in ElastiCache by
	// using a snapshot file that is stored in an Amazon S3 bucket.
	SnapshotArns interface{} `json:"SnapshotArns,omitempty"`

	// The name of a snapshot from which to restore data into a new Redis
	// cache cluster.
	SnapshotName *StringExpr `json:"SnapshotName,omitempty"`

	// For Redis cache clusters, the number of days for which ElastiCache
	// retains automatic snapshots before deleting them. For example, if you
	// set the value to 5, a snapshot that was taken today will be retained
	// for 5 days before being deleted.
	SnapshotRetentionLimit *IntegerExpr `json:"SnapshotRetentionLimit,omitempty"`

	// For Redis cache clusters, the daily time range (in UTC) during which
	// ElastiCache will begin taking a daily snapshot of your node group. For
	// example, you can specify 05:00-09:00.
	SnapshotWindow *StringExpr `json:"SnapshotWindow,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this cache cluster.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// A list of VPC security group IDs. If your cache cluster isn't in a
	// VPC, specify the CacheSecurityGroupNames property instead.
	VpcSecurityGroupIds interface{} `json:"VpcSecurityGroupIds,omitempty"`
}

// CfnResourceType returns AWS::ElastiCache::CacheCluster to implement the ResourceProperties interface
func (s ElastiCacheCacheCluster) CfnResourceType() string {
	return "AWS::ElastiCache::CacheCluster"
}

// ElastiCacheParameterGroup represents AWS::ElastiCache::ParameterGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html
type ElastiCacheParameterGroup struct {
	// The name of the cache parameter group family that the cache parameter
	// group can be used with.
	CacheParameterGroupFamily *StringExpr `json:"CacheParameterGroupFamily,omitempty"`

	// The description for the Cache Parameter Group.
	Description *StringExpr `json:"Description,omitempty"`

	// A comma-delimited list of parameter name/value pairs. For more
	// information, go to ModifyCacheParameterGroup in the Amazon ElastiCache
	// API Reference Guide.
	Properties interface{} `json:"Properties,omitempty"`
}

// CfnResourceType returns AWS::ElastiCache::ParameterGroup to implement the ResourceProperties interface
func (s ElastiCacheParameterGroup) CfnResourceType() string {
	return "AWS::ElastiCache::ParameterGroup"
}

// ElastiCacheReplicationGroup represents AWS::ElastiCache::ReplicationGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html
type ElastiCacheReplicationGroup struct {
	// Indicates whether to enable encryption at rest. The default value is
	// false. For more information about how you can use this property, see
	// CreateReplicationGroup in the Amazon ElastiCache API Reference.
	AtRestEncryptionEnabled *BoolExpr `json:"AtRestEncryptionEnabled,omitempty"`

	// The password that's used to access a password-protected server. For
	// constraints, see CreateReplicationGroup in the Amazon ElastiCache API
	// Reference.
	AuthToken *StringExpr `json:"AuthToken,omitempty"`

	// Indicates whether Multi-AZ is enabled. When Multi-AZ is enabled, a
	// read-only replica is automatically promoted to a read-write primary
	// cluster if the existing primary cluster fails. If you specify true,
	// you must specify a value greater than 1 for the NumCacheClusters
	// property. By default, AWS CloudFormation sets the value to true.
	AutomaticFailoverEnabled *BoolExpr `json:"AutomaticFailoverEnabled,omitempty"`

	// Currently, this property isn't used by ElastiCache.
	AutoMinorVersionUpgrade *BoolExpr `json:"AutoMinorVersionUpgrade,omitempty"`

	// The compute and memory capacity of nodes in the node group. For valid
	// values, see CreateReplicationGroup in the Amazon ElastiCache API
	// Reference Guide.
	CacheNodeType *StringExpr `json:"CacheNodeType,omitempty"`

	// The name of the parameter group to associate with this replication
	// group. For valid and default values, see CreateReplicationGroup in the
	// Amazon ElastiCache API Reference Guide.
	CacheParameterGroupName *StringExpr `json:"CacheParameterGroupName,omitempty"`

	// A list of cache security group names to associate with this
	// replication group.
	CacheSecurityGroupNames interface{} `json:"CacheSecurityGroupNames,omitempty"`

	// The name of a cache subnet group to use for this replication group.
	CacheSubnetGroupName *StringExpr `json:"CacheSubnetGroupName,omitempty"`

	// The name of the cache engine to use for the cache clusters in this
	// replication group. Currently, you can specify only redis.
	Engine *StringExpr `json:"Engine,omitempty"`

	// The version number of the cache engine to use for the cache clusters
	// in this replication group.
	EngineVersion *StringExpr `json:"EngineVersion,omitempty"`

	// Configuration options for the node group (shard).
	NodeGroupConfiguration *ElastiCacheReplicationGroupNodeGroupConfigurationList `json:"NodeGroupConfiguration,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon Simple Notification
	// Service topic to which notifications are sent.
	NotificationTopicArn *StringExpr `json:"NotificationTopicArn,omitempty"`

	// The number of cache clusters for this replication group. If automatic
	// failover is enabled, you must specify a value greater than 1. For
	// valid values, see CreateReplicationGroup in the Amazon ElastiCache API
	// Reference Guide.
	NumCacheClusters *IntegerExpr `json:"NumCacheClusters,omitempty"`

	// The number of node groups (shards) for this Redis (clustered mode
	// enabled) replication group. For Redis (clustered mode disabled), omit
	// this property.
	NumNodeGroups *IntegerExpr `json:"NumNodeGroups,omitempty"`

	// The port number on which each member of the replication group accepts
	// connections.
	Port *IntegerExpr `json:"Port,omitempty"`

	// A list of Availability Zones in which the cache clusters in this
	// replication group are created.
	PreferredCacheClusterAZs interface{} `json:"PreferredCacheClusterAZs,omitempty"`

	// The weekly time range during which system maintenance can occur. Use
	// the following format to specify a time range: ddd:hh24:mi-ddd:hh24:mi
	// (24H Clock UTC). For example, you can specify sun:22:00-sun:23:30 for
	// Sunday from 10 PM to 11:30 PM.
	PreferredMaintenanceWindow *StringExpr `json:"PreferredMaintenanceWindow,omitempty"`

	// The cache cluster that ElastiCache uses as the primary cluster for the
	// replication group. The cache cluster must have a status of available.
	PrimaryClusterId *StringExpr `json:"PrimaryClusterId,omitempty"`

	// The number of replica nodes in each node group (shard). For valid
	// values, see CreateReplicationGroup in the Amazon ElastiCache API
	// Reference Guide.
	ReplicasPerNodeGroup *IntegerExpr `json:"ReplicasPerNodeGroup,omitempty"`

	// A description of the replication group.
	ReplicationGroupDescription *StringExpr `json:"ReplicationGroupDescription,omitempty"`

	// An ID for the replication group. If you don't specify an ID, AWS
	// CloudFormation generates a unique physical ID. For more information,
	// see Name Type.
	ReplicationGroupId *StringExpr `json:"ReplicationGroupId,omitempty"`

	// A list of Amazon Virtual Private Cloud (Amazon VPC) security groups to
	// associate with this replication group.
	SecurityGroupIds interface{} `json:"SecurityGroupIds,omitempty"`

	// A single-element string list that specifies an ARN of a Redis .rdb
	// snapshot file that is stored in Amazon Simple Storage Service (Amazon
	// S3). The snapshot file populates the node group. The Amazon S3 object
	// name in the ARN cannot contain commas. For example, you can specify
	// arn:aws:s3:::my_bucket/snapshot1.rdb.
	SnapshotArns interface{} `json:"SnapshotArns,omitempty"`

	// The name of a snapshot from which to restore data into the replication
	// group.
	SnapshotName *StringExpr `json:"SnapshotName,omitempty"`

	// The number of days that ElastiCache retains automatic snapshots before
	// deleting them.
	SnapshotRetentionLimit *IntegerExpr `json:"SnapshotRetentionLimit,omitempty"`

	// The ID of the cache cluster that ElastiCache uses as the daily
	// snapshot source for the replication group.
	SnapshottingClusterId *StringExpr `json:"SnapshottingClusterId,omitempty"`

	// The time range (in UTC) when ElastiCache takes a daily snapshot of the
	// node group that you specified in the SnapshottingClusterId property.
	// For example, you can specify 05:00-09:00.
	SnapshotWindow *StringExpr `json:"SnapshotWindow,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this replication
	// group.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// Indicates whether to enable in-transit encryption. The default value
	// is false. For more information about how you can use this property,
	// see CreateReplicationGroup in the Amazon ElastiCache API Reference.
	TransitEncryptionEnabled *BoolExpr `json:"TransitEncryptionEnabled,omitempty"`
}

// CfnResourceType returns AWS::ElastiCache::ReplicationGroup to implement the ResourceProperties interface
func (s ElastiCacheReplicationGroup) CfnResourceType() string {
	return "AWS::ElastiCache::ReplicationGroup"
}

// ElastiCacheSecurityGroup represents AWS::ElastiCache::SecurityGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html
type ElastiCacheSecurityGroup struct {
	// A description for the cache security group.
	Description *StringExpr `json:"Description,omitempty"`
}

// CfnResourceType returns AWS::ElastiCache::SecurityGroup to implement the ResourceProperties interface
func (s ElastiCacheSecurityGroup) CfnResourceType() string {
	return "AWS::ElastiCache::SecurityGroup"
}

// ElastiCacheSecurityGroupIngress represents AWS::ElastiCache::SecurityGroupIngress
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html
type ElastiCacheSecurityGroupIngress struct {
	// The name of the Cache Security Group to authorize.
	CacheSecurityGroupName *StringExpr `json:"CacheSecurityGroupName,omitempty"`

	// Name of the EC2 Security Group to include in the authorization.
	EC2SecurityGroupName *StringExpr `json:"EC2SecurityGroupName,omitempty"`

	// Specifies the AWS Account ID of the owner of the EC2 security group
	// specified in the EC2SecurityGroupName property. The AWS access key ID
	// is not an acceptable value.
	EC2SecurityGroupOwnerId *StringExpr `json:"EC2SecurityGroupOwnerId,omitempty"`
}

// CfnResourceType returns AWS::ElastiCache::SecurityGroupIngress to implement the ResourceProperties interface
func (s ElastiCacheSecurityGroupIngress) CfnResourceType() string {
	return "AWS::ElastiCache::SecurityGroupIngress"
}

// ElastiCacheSubnetGroup represents AWS::ElastiCache::SubnetGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html
type ElastiCacheSubnetGroup struct {
	// A name for the cache subnet group. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID. For more information,
	// see Name Type.
	CacheSubnetGroupName *StringExpr `json:"CacheSubnetGroupName,omitempty"`

	// The description for the cache subnet group.
	Description *StringExpr `json:"Description,omitempty"`

	// The Amazon EC2 subnet IDs for the cache subnet group.
	SubnetIds *StringListExpr `json:"SubnetIds,omitempty"`
}

// CfnResourceType returns AWS::ElastiCache::SubnetGroup to implement the ResourceProperties interface
func (s ElastiCacheSubnetGroup) CfnResourceType() string {
	return "AWS::ElastiCache::SubnetGroup"
}

// ElasticBeanstalkApplication represents AWS::ElasticBeanstalk::Application
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk.html
type ElasticBeanstalkApplication struct {
	// A name for the Elastic Beanstalk application. If you don't specify a
	// name, AWS CloudFormation generates a unique physical ID and uses that
	// ID for the application name. For more information, see Name Type.
	ApplicationName *StringExpr `json:"ApplicationName,omitempty"`

	// An optional description of this application.
	Description *StringExpr `json:"Description,omitempty"`

	// Defines lifecycle settings for resources that belong to the
	// application, and the service role that Elastic Beanstalk assumes in
	// order to apply lifecycle settings.
	ResourceLifecycleConfig *ElasticBeanstalkApplicationApplicationResourceLifecycleConfig `json:"ResourceLifecycleConfig,omitempty"`
}

// CfnResourceType returns AWS::ElasticBeanstalk::Application to implement the ResourceProperties interface
func (s ElasticBeanstalkApplication) CfnResourceType() string {
	return "AWS::ElasticBeanstalk::Application"
}

// ElasticBeanstalkApplicationVersion represents AWS::ElasticBeanstalk::ApplicationVersion
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-version.html
type ElasticBeanstalkApplicationVersion struct {
	// Name of the Elastic Beanstalk application that is associated with this
	// application version.
	ApplicationName *StringExpr `json:"ApplicationName,omitempty"`

	// A description of this application version.
	Description *StringExpr `json:"Description,omitempty"`

	// The location of the source bundle for this version.
	SourceBundle *ElasticBeanstalkSourceBundle `json:"SourceBundle,omitempty"`
}

// CfnResourceType returns AWS::ElasticBeanstalk::ApplicationVersion to implement the ResourceProperties interface
func (s ElasticBeanstalkApplicationVersion) CfnResourceType() string {
	return "AWS::ElasticBeanstalk::ApplicationVersion"
}

// ElasticBeanstalkConfigurationTemplate represents AWS::ElasticBeanstalk::ConfigurationTemplate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-beanstalk-configurationtemplate.html
type ElasticBeanstalkConfigurationTemplate struct {
	// Name of the Elastic Beanstalk application that is associated with this
	// configuration template.
	ApplicationName *StringExpr `json:"ApplicationName,omitempty"`

	// An optional description for this configuration.
	Description *StringExpr `json:"Description,omitempty"`

	// An environment whose settings you want to use to create the
	// configuration template. You must specify this property if you don't
	// specify the SolutionStackName or SourceConfiguration properties.
	EnvironmentId *StringExpr `json:"EnvironmentId,omitempty"`

	// The options for the Elastic Beanstalk configuration, such as the
	// instance type. For a complete list of Elastic Beanstalk configuration
	// options, see Option Values, in the AWS Elastic Beanstalk Developer
	// Guide.
	OptionSettings *ElasticBeanstalkConfigurationTemplateConfigurationOptionSettingList `json:"OptionSettings,omitempty"`

	// The Amazon Resource Name (ARN) of the custom platform. For more
	// information, see Custom Platforms in the AWS Elastic Beanstalk
	// Developer Guide.
	PlatformArn interface{} `json:"PlatformArn,omitempty"`

	// The name of an Elastic Beanstalk solution stack that this
	// configuration will use. A solution stack specifies the operating
	// system, architecture, and application server for a configuration
	// template, such as 64bit Amazon Linux 2013.09 running Tomcat 7 Java 7.
	// For more information, see Supported Platforms in the AWS Elastic
	// Beanstalk Developer Guide.
	SolutionStackName *StringExpr `json:"SolutionStackName,omitempty"`

	// A configuration template that is associated with another Elastic
	// Beanstalk application. If you specify the SolutionStackName property
	// and the SourceConfiguration property, the solution stack in the source
	// configuration template must match the value that you specified for the
	// SolutionStackName property.
	SourceConfiguration *ElasticBeanstalkConfigurationTemplateSourceConfiguration `json:"SourceConfiguration,omitempty"`
}

// CfnResourceType returns AWS::ElasticBeanstalk::ConfigurationTemplate to implement the ResourceProperties interface
func (s ElasticBeanstalkConfigurationTemplate) CfnResourceType() string {
	return "AWS::ElasticBeanstalk::ConfigurationTemplate"
}

// ElasticBeanstalkEnvironment represents AWS::ElasticBeanstalk::Environment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html
type ElasticBeanstalkEnvironment struct {
	// The name of the application that is associated with this environment.
	ApplicationName *StringExpr `json:"ApplicationName,omitempty"`

	// A prefix for your Elastic Beanstalk environment URL.
	CNAMEPrefix *StringExpr `json:"CNAMEPrefix,omitempty"`

	// A description that helps you identify this environment.
	Description *StringExpr `json:"Description,omitempty"`

	// A name for the Elastic Beanstalk environment. If you don't specify a
	// name, AWS CloudFormation generates a unique physical ID and uses that
	// ID for the environment name. For more information, see Name Type.
	EnvironmentName *StringExpr `json:"EnvironmentName,omitempty"`

	// Key-value pairs defining configuration options for this environment,
	// such as the instance type. These options override the values that are
	// defined in the solution stack or the configuration template. If you
	// remove any options during a stack update, the removed options revert
	// to default values.
	OptionSettings *ElasticBeanstalkEnvironmentOptionSettingList `json:"OptionSettings,omitempty"`

	// The Amazon Resource Name (ARN) of the custom platform to use with the
	// environment. For more information, see Custom Platforms in the AWS
	// Elastic Beanstalk Developer Guide.
	PlatformArn interface{} `json:"PlatformArn,omitempty"`

	// The name of an Elastic Beanstalk solution stack that this
	// configuration will use. For more information, see Supported Platforms
	// in the AWS Elastic Beanstalk Developer Guide.
	SolutionStackName *StringExpr `json:"SolutionStackName,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this environment.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The name of the Elastic Beanstalk configuration template to use with
	// the environment.
	TemplateName *StringExpr `json:"TemplateName,omitempty"`

	// Specifies the tier to use in creating this environment. The
	// environment tier that you choose determines whether Elastic Beanstalk
	// provisions resources to support a web application that handles HTTP(S)
	// requests or a web application that handles background-processing
	// tasks.
	Tier *ElasticBeanstalkEnvironmentTier `json:"Tier,omitempty"`

	// The version to associate with the environment.
	VersionLabel *StringExpr `json:"VersionLabel,omitempty"`
}

// CfnResourceType returns AWS::ElasticBeanstalk::Environment to implement the ResourceProperties interface
func (s ElasticBeanstalkEnvironment) CfnResourceType() string {
	return "AWS::ElasticBeanstalk::Environment"
}

// ElasticLoadBalancingLoadBalancer represents AWS::ElasticLoadBalancing::LoadBalancer
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html
type ElasticLoadBalancingLoadBalancer struct {
	// Captures detailed information for all requests made to your load
	// balancer, such as the time a request was received, client’s IP
	// address, latencies, request path, and server responses.
	AccessLoggingPolicy *ElasticLoadBalancingAccessLoggingPolicy `json:"AccessLoggingPolicy,omitempty"`

	// Generates one or more stickiness policies with sticky session
	// lifetimes that follow that of an application-generated cookie. These
	// policies can be associated only with HTTP/HTTPS listeners.
	AppCookieStickinessPolicy *ElasticLoadBalancingAppCookieStickinessPolicyList `json:"AppCookieStickinessPolicy,omitempty"`

	// The Availability Zones in which to create the load balancer. You can
	// specify the AvailabilityZones or Subnets property, but not both.
	AvailabilityZones interface{} `json:"AvailabilityZones,omitempty"`

	// Whether deregistered or unhealthy instances can complete all in-flight
	// requests.
	ConnectionDrainingPolicy *ElasticLoadBalancingConnectionDrainingPolicy `json:"ConnectionDrainingPolicy,omitempty"`

	// Specifies how long front-end and back-end connections of your load
	// balancer can remain idle.
	ConnectionSettings *ElasticLoadBalancingConnectionSettings `json:"ConnectionSettings,omitempty"`

	// Whether cross-zone load balancing is enabled for the load balancer.
	// With cross-zone load balancing, your load balancer nodes route traffic
	// to the back-end instances across all Availability Zones. By default
	// the CrossZone property is false.
	CrossZone *BoolExpr `json:"CrossZone,omitempty"`

	// Application health check for the instances.
	HealthCheck *ElasticLoadBalancingLoadBalancerHealthCheck `json:"HealthCheck,omitempty"`

	// A list of EC2 instance IDs for the load balancer.
	Instances interface{} `json:"Instances,omitempty"`

	// Generates a stickiness policy with sticky session lifetimes controlled
	// by the lifetime of the browser (user-agent), or by a specified
	// expiration period. This policy can be associated only with HTTP/HTTPS
	// listeners.
	LBCookieStickinessPolicy *ElasticLoadBalancingLBCookieStickinessPolicyList `json:"LBCookieStickinessPolicy,omitempty"`

	// A name for the load balancer. For valid values, see the
	// LoadBalancerName parameter for the CreateLoadBalancer action in the
	// Elastic Load Balancing API Reference version 2012-06-01.
	LoadBalancerName *StringExpr `json:"LoadBalancerName,omitempty"`

	// One or more listeners for this load balancer. Each listener must be
	// registered for a specific port, and you cannot have more than one
	// listener for a given port.
	Listeners *ElasticLoadBalancingListenerList `json:"Listeners,omitempty"`

	// A list of elastic load balancing policies to apply to this elastic
	// load balancer. Specify only back-end server policies. For more
	// information, see DescribeLoadBalancerPolicyTypes in the Elastic Load
	// Balancing API Reference version 2012-06-01.
	Policies *ElasticLoadBalancingPolicyList `json:"Policies,omitempty"`

	// For load balancers attached to an Amazon VPC, this parameter can be
	// used to specify the type of load balancer to use. Specify internal to
	// create an internal load balancer with a DNS name that resolves to
	// private IP addresses or internet-facing to create a load balancer with
	// a publicly resolvable DNS name, which resolves to public IP addresses.
	Scheme *StringExpr `json:"Scheme,omitempty"`

	// Required: No
	SecurityGroups interface{} `json:"SecurityGroups,omitempty"`

	// A list of subnet IDs in your virtual private cloud (VPC) to attach to
	// your load balancer. Do not specify multiple subnets that are in the
	// same Availability Zone. You can specify the AvailabilityZones or
	// Subnets property, but not both.
	Subnets interface{} `json:"Subnets,omitempty"`

	// An arbitrary set of tags (key-value pairs) for this load balancer.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::ElasticLoadBalancing::LoadBalancer to implement the ResourceProperties interface
func (s ElasticLoadBalancingLoadBalancer) CfnResourceType() string {
	return "AWS::ElasticLoadBalancing::LoadBalancer"
}

// ElasticLoadBalancingV2Listener represents AWS::ElasticLoadBalancingV2::Listener
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html
type ElasticLoadBalancingV2Listener struct {
	// The SSL server certificate for the listener. With a certificate, you
	// can encrypt traffic between the load balancer and the clients that
	// initiate HTTPS sessions, and traffic between the load balancer and
	// your targets.
	Certificates *ElasticLoadBalancingListenerCertificateList `json:"Certificates,omitempty"`

	// The default actions that the listener takes when handling incoming
	// requests.
	DefaultActions *ElasticLoadBalancingListenerActionList `json:"DefaultActions,omitempty"`

	// The Amazon Resource Name (ARN) of the load balancer to associate with
	// the listener.
	LoadBalancerArn *StringExpr `json:"LoadBalancerArn,omitempty"`

	// The port on which the listener listens for requests.
	Port *IntegerExpr `json:"Port,omitempty"`

	// The protocol that clients must use to send requests to the listener.
	Protocol *StringExpr `json:"Protocol,omitempty"`

	// The security policy that defines the ciphers and protocols that the
	// load balancer supports.
	SslPolicy *StringExpr `json:"SslPolicy,omitempty"`
}

// CfnResourceType returns AWS::ElasticLoadBalancingV2::Listener to implement the ResourceProperties interface
func (s ElasticLoadBalancingV2Listener) CfnResourceType() string {
	return "AWS::ElasticLoadBalancingV2::Listener"
}

// ElasticLoadBalancingV2ListenerCertificate represents AWS::ElasticLoadBalancingV2::ListenerCertificate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html
type ElasticLoadBalancingV2ListenerCertificate struct {
	// Certificates specified for the listener. Duplicates not allowed.
	Certificates *ElasticLoadBalancingListenerCertificateCertificateList `json:"Certificates,omitempty"`

	// The Amazon Resource Name (ARN) of the listener.
	ListenerArn interface{} `json:"ListenerArn,omitempty"`
}

// CfnResourceType returns AWS::ElasticLoadBalancingV2::ListenerCertificate to implement the ResourceProperties interface
func (s ElasticLoadBalancingV2ListenerCertificate) CfnResourceType() string {
	return "AWS::ElasticLoadBalancingV2::ListenerCertificate"
}

// ElasticLoadBalancingV2ListenerRule represents AWS::ElasticLoadBalancingV2::ListenerRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html
type ElasticLoadBalancingV2ListenerRule struct {
	// The action that the listener takes when a request meets the specified
	// condition.
	Actions *ElasticLoadBalancingListenerRuleActionsList `json:"Actions,omitempty"`

	// The conditions under which a rule takes effect.
	Conditions *ElasticLoadBalancingListenerRuleConditionsList `json:"Conditions,omitempty"`

	// The Amazon Resource Name (ARN) of the listener that the rule applies
	// to.
	ListenerArn *StringExpr `json:"ListenerArn,omitempty"`

	// The priority for the rule. Elastic Load Balancing evaluates rules in
	// priority order, from the lowest value to the highest value. If a
	// request satisfies a rule, Elastic Load Balancing ignores all
	// subsequent rules.
	Priority *IntegerExpr `json:"Priority,omitempty"`
}

// CfnResourceType returns AWS::ElasticLoadBalancingV2::ListenerRule to implement the ResourceProperties interface
func (s ElasticLoadBalancingV2ListenerRule) CfnResourceType() string {
	return "AWS::ElasticLoadBalancingV2::ListenerRule"
}

// ElasticLoadBalancingV2LoadBalancer represents AWS::ElasticLoadBalancingV2::LoadBalancer
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
type ElasticLoadBalancingV2LoadBalancer struct {
	// Specifies the load balancer configuration.
	LoadBalancerAttributes *ElasticLoadBalancingLoadBalancerLoadBalancerAttributesList `json:"LoadBalancerAttributes,omitempty"`

	// Specifies a name for the load balancer. This name must be unique
	// within your AWS account and can have a maximum of 32 alphanumeric
	// characters and hyphens. A name can't begin or end with a hyphen.
	Name *StringExpr `json:"Name,omitempty"`

	// Specifies whether the load balancer is internal or Internet-facing.
	// Valid values are internet-facing and internal. The default is
	// internet-facing.
	Scheme *StringExpr `json:"Scheme,omitempty"`

	// [Application Load Balancers] Specifies a list of the IDs of the
	// security groups to assign to the load balancer.
	SecurityGroups interface{} `json:"SecurityGroups,omitempty"`

	// The subnets to attach to the load balancer, specified as a list of
	// SubnetMapping property types. You can specify only one subnet per
	// Availability Zone. You must specify either subnets or subnet mappings.
	SubnetMappings *ElasticLoadBalancingLoadBalancerSubnetMappingList `json:"SubnetMappings,omitempty"`

	// The subnets to attach to the load balancer, specified as a list of
	// subnet IDs. You can specify only one subnet per Availability Zone. You
	// must specify either subnets or subnet mappings.
	Subnets interface{} `json:"Subnets,omitempty"`

	// Specifies an arbitrary set of tags (key–value pairs) to associate
	// with this load balancer. Use tags to manage your resources.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// Specifies the type of load balancer to create. Valid values are
	// application and network.The default is application.
	Type *StringExpr `json:"Type,omitempty"`

	// [Application Load Balancers] The type of IP addresses that are used by
	// the load balancer's subnets, such as ipv4 (for IPv4 addresses) or
	// dualstack (for IPv4 and IPv6 addresses). For valid values, see the
	// IpAddressType parameter for the CreateLoadBalancer action in the
	// Elastic Load Balancing API Reference version 2015-12-01.
	IpAddressType *StringExpr `json:"IpAddressType,omitempty"`
}

// CfnResourceType returns AWS::ElasticLoadBalancingV2::LoadBalancer to implement the ResourceProperties interface
func (s ElasticLoadBalancingV2LoadBalancer) CfnResourceType() string {
	return "AWS::ElasticLoadBalancingV2::LoadBalancer"
}

// ElasticLoadBalancingV2TargetGroup represents AWS::ElasticLoadBalancingV2::TargetGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html
type ElasticLoadBalancingV2TargetGroup struct {
	// The approximate number of seconds between health checks for an
	// individual target.
	HealthCheckIntervalSeconds *IntegerExpr `json:"HealthCheckIntervalSeconds,omitempty"`

	// The ping path destination where Elastic Load Balancing sends health
	// check requests.
	HealthCheckPath *StringExpr `json:"HealthCheckPath,omitempty"`

	// The port that the load balancer uses when performing health checks on
	// the targets.
	HealthCheckPort *StringExpr `json:"HealthCheckPort,omitempty"`

	// The protocol that the load balancer uses when performing health checks
	// on the targets, such as HTTP or HTTPS.
	HealthCheckProtocol *StringExpr `json:"HealthCheckProtocol,omitempty"`

	// The number of seconds to wait for a response before considering that a
	// health check has failed.
	HealthCheckTimeoutSeconds *IntegerExpr `json:"HealthCheckTimeoutSeconds,omitempty"`

	// The number of consecutive successful health checks that are required
	// before an unhealthy target is considered healthy.
	HealthyThresholdCount *IntegerExpr `json:"HealthyThresholdCount,omitempty"`

	// The HTTP codes that a healthy target uses when responding to a health
	// check.
	Matcher *ElasticLoadBalancingTargetGroupMatcher `json:"Matcher,omitempty"`

	// A name for the target group.
	Name *StringExpr `json:"Name,omitempty"`

	// The port on which the targets receive traffic.
	Port *IntegerExpr `json:"Port,omitempty"`

	// The protocol to use for routing traffic to the targets.
	Protocol *StringExpr `json:"Protocol,omitempty"`

	// An arbitrary set of tags (key–value pairs) for the target group. Use
	// tags to help manage resources.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// Target group configurations.
	TargetGroupAttributes *ElasticLoadBalancingTargetGroupTargetGroupAttributesList `json:"TargetGroupAttributes,omitempty"`

	// The targets to add to this target group.
	Targets *ElasticLoadBalancingTargetGroupTargetDescriptionList `json:"Targets,omitempty"`

	// The registration type of the targets in this target group. Valid
	// values are instance and ip. The default is instance.
	TargetType interface{} `json:"TargetType,omitempty"`

	// The number of consecutive failed health checks that are required
	// before a target is considered unhealthy.
	UnhealthyThresholdCount *IntegerExpr `json:"UnhealthyThresholdCount,omitempty"`

	// The ID of the VPC in which your targets are located.
	VpcId *StringExpr `json:"VpcId,omitempty"`
}

// CfnResourceType returns AWS::ElasticLoadBalancingV2::TargetGroup to implement the ResourceProperties interface
func (s ElasticLoadBalancingV2TargetGroup) CfnResourceType() string {
	return "AWS::ElasticLoadBalancingV2::TargetGroup"
}

// ElasticsearchDomain represents AWS::Elasticsearch::Domain
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html
type ElasticsearchDomain struct {
	// An AWS Identity and Access Management (IAM) policy document that
	// specifies who can access the Amazon ES domain and their permissions.
	// For more information, see Configuring Access Policies in the Amazon
	// Elasticsearch Service Developer Guide.
	AccessPolicies interface{} `json:"AccessPolicies,omitempty"`

	// Additional options to specify for the Amazon ES domain. For more
	// information, see Configuring Advanced Options in the Amazon
	// Elasticsearch Service Developer Guide.
	AdvancedOptions interface{} `json:"AdvancedOptions,omitempty"`

	// A name for the Amazon ES domain. For valid values, see the DomainName
	// data type in the Amazon Elasticsearch Service Developer Guide.
	DomainName *StringExpr `json:"DomainName,omitempty"`

	// The configurations of Amazon Elastic Block Store (Amazon EBS) volumes
	// that are attached to data nodes in the Amazon ES domain. For more
	// information, see Configuring EBS-based Storage in the Amazon
	// Elasticsearch Service Developer Guide.
	EBSOptions *ElasticsearchServiceDomainEBSOptions `json:"EBSOptions,omitempty"`

	// The cluster configuration for the Amazon ES domain. You can specify
	// options such as the instance type and the number of instances. For
	// more information, see Configuring Amazon ES Domains in the Amazon
	// Elasticsearch Service Developer Guide.
	ElasticsearchClusterConfig *ElasticsearchServiceDomainElasticsearchClusterConfig `json:"ElasticsearchClusterConfig,omitempty"`

	// The version of Elasticsearch to use, such as 2.3. For information
	// about the versions that Amazon ES supports, see the
	// Elasticsearch-Version parameter for the CreateElasticsearchDomain
	// action in the Amazon Elasticsearch Service Developer Guide.
	ElasticsearchVersion *StringExpr `json:"ElasticsearchVersion,omitempty"`

	// The automated snapshot configuration for the Amazon ES domain indices.
	SnapshotOptions *ElasticsearchServiceDomainSnapshotOptions `json:"SnapshotOptions,omitempty"`

	// An arbitrary set of tags (key–value pairs) to associate with the
	// Amazon ES domain.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The virtual private cloud (VPC) configuration for the Amazon ES
	// domain. For more information, see VPC Support for Amazon Elasticsearch
	// Service Domains in the Amazon Elasticsearch Service Developer Guide.
	VPCOptions *ElasticsearchServiceDomainVPCOptions `json:"VPCOptions,omitempty"`
}

// CfnResourceType returns AWS::Elasticsearch::Domain to implement the ResourceProperties interface
func (s ElasticsearchDomain) CfnResourceType() string {
	return "AWS::Elasticsearch::Domain"
}

// EMRCluster represents AWS::EMR::Cluster
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-cluster.html
type EMRCluster struct {
	// (Intended for advanced uses only.) Additional features that you want
	// to select. This is meta information about third-party applications
	// that third-party vendors use for testing purposes.
	AdditionalInfo interface{} `json:"AdditionalInfo,omitempty"`

	// The software applications to deploy on the cluster, and the arguments
	// that Amazon EMR passes to those applications.
	Applications *EMRClusterApplicationList `json:"Applications,omitempty"`

	// An AWS Identity and Access Management (IAM) role for automatic scaling
	// policies. The default role is EMR_AutoScaling_DefaultRole. The IAM
	// role provides permissions that the automatic scaling feature requires
	// to launch and terminate Amazon EC2 instances in an instance group.
	AutoScalingRole *StringExpr `json:"AutoScalingRole,omitempty"`

	// A list of bootstrap actions that Amazon EMR runs before starting
	// applications on the cluster.
	BootstrapActions *EMRClusterBootstrapActionConfigList `json:"BootstrapActions,omitempty"`

	// The software configuration of the Amazon EMR cluster.
	Configurations *EMRClusterConfigurationsList `json:"Configurations,omitempty"`

	// A custom Amazon Linux AMI for the cluster (instead of an EMR-owned
	// AMI). For more information, see Using a Custom AMI in the Amazon EMR
	// Management Guide.
	CustomAmiId *StringExpr `json:"CustomAmiId,omitempty"`

	// The size, in GiB, of the EBS root device volume of the Linux AMI
	// that's used for each EC2 instance.
	EbsRootVolumeSize *IntegerExpr `json:"EbsRootVolumeSize,omitempty"`

	// Configures the EC2 instances that run jobs in the Amazon EMR cluster.
	Instances *EMRClusterJobFlowInstancesConfig `json:"Instances,omitempty"`

	// (Also called instance profile and EC2 role.) Accepts an instance
	// profile that's associated with the role that you want to use. All EC2
	// instances in the cluster assume this role. For more information, see
	// Create and Use IAM Roles for Amazon EMR in the Amazon EMR Management
	// Guide.
	JobFlowRole *StringExpr `json:"JobFlowRole,omitempty"`

	// An S3 bucket location that Amazon EMR writes logs files to from a job
	// flow. If you don't specify a value, Amazon EMR doesn't write any log
	// files.
	LogUri *StringExpr `json:"LogUri,omitempty"`

	// A name for the Amazon EMR cluster.
	Name *StringExpr `json:"Name,omitempty"`

	// The Amazon EMR software release label. A release is a set of software
	// applications and components that you can install and configure on an
	// Amazon EMR cluster. For more information, see About Amazon EMR
	// Releases in the Amazon EMR Release Guide.
	ReleaseLabel *StringExpr `json:"ReleaseLabel,omitempty"`

	// Indicates how individual EC2 instances terminate when an automatic
	// scale-in activity occurs or an instance group is resized. For more
	// information, see Cluster in the Amazon EMR API Reference.
	ScaleDownBehavior *StringExpr `json:"ScaleDownBehavior,omitempty"`

	// The name of the security configuration that's applied to the cluster.
	SecurityConfiguration *StringExpr `json:"SecurityConfiguration,omitempty"`

	// The IAM role that Amazon EMR assumes to access AWS resources on your
	// behalf. For more information, see Configure IAM Roles for Amazon EMR
	// in the Amazon EMR Management Guide.
	ServiceRole *StringExpr `json:"ServiceRole,omitempty"`

	// An arbitrary set of tags (key–value pairs) to help you identify the
	// Amazon EMR cluster.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// Indicates whether the instances in the cluster are visible to all IAM
	// users in the AWS account. If you specify true, all IAM users can view
	// and (if they have permissions) manage the instances. If you specify
	// false, only the IAM user that created the cluster can view and manage
	// it.
	VisibleToAllUsers *BoolExpr `json:"VisibleToAllUsers,omitempty"`
}

// CfnResourceType returns AWS::EMR::Cluster to implement the ResourceProperties interface
func (s EMRCluster) CfnResourceType() string {
	return "AWS::EMR::Cluster"
}

// EMRInstanceFleetConfig represents AWS::EMR::InstanceFleetConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html
type EMRInstanceFleetConfig struct {
	// The ID of the target cluster.
	ClusterId *StringExpr `json:"ClusterId,omitempty"`

	// The node type that the instance fleet hosts. Valid values are MASTER,
	// CORE, and TASK.
	InstanceFleetType *StringExpr `json:"InstanceFleetType,omitempty"`

	// The instance type configurations that define the EC2 instances in the
	// instance fleet. Duplicates not allowed.
	InstanceTypeConfigs *EMRInstanceFleetConfigInstanceTypeConfigList `json:"InstanceTypeConfigs,omitempty"`

	// The launch specification for the instance fleet.
	LaunchSpecifications *EMRInstanceFleetConfigInstanceFleetProvisioningSpecifications `json:"LaunchSpecifications,omitempty"`

	// The friendly name of the instance fleet. For constraints, see
	// InstanceFleetConfig in the Amazon EMR API Reference.
	Name *StringExpr `json:"Name,omitempty"`

	// The target capacity of On-Demand units for the instance fleet. This
	// determines how many On-Demand Instances to provision. For more
	// information, see InstanceFleetConfig in the Amazon EMR API Reference.
	TargetOnDemandCapacity *IntegerExpr `json:"TargetOnDemandCapacity,omitempty"`

	// The target capacity of Spot units for the instance fleet. This
	// determines how many Spot Instances to provision. For more information,
	// see InstanceFleetConfig in the Amazon EMR API Reference.
	TargetSpotCapacity *IntegerExpr `json:"TargetSpotCapacity,omitempty"`
}

// CfnResourceType returns AWS::EMR::InstanceFleetConfig to implement the ResourceProperties interface
func (s EMRInstanceFleetConfig) CfnResourceType() string {
	return "AWS::EMR::InstanceFleetConfig"
}

// EMRInstanceGroupConfig represents AWS::EMR::InstanceGroupConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html
type EMRInstanceGroupConfig struct {
	// An automatic scaling policy for a core instance group or task instance
	// group in an Amazon EMR cluster. An automatic scaling policy defines
	// how an instance group dynamically adds and terminates EC2 instances in
	// response to the value of a CloudWatch metric. For more information,
	// see PutAutoScalingPolicy in the Amazon EMR API Reference.
	AutoScalingPolicy *EMRInstanceGroupConfigAutoScalingPolicy `json:"AutoScalingPolicy,omitempty"`

	// The bid price in USD for each Amazon EC2 instance in the instance
	// group when launching instances (nodes) as Spot Instances.
	BidPrice *StringExpr `json:"BidPrice,omitempty"`

	// A list of configurations to apply to this instance group. For more
	// information see, Configuring Applications in the Amazon EMR Release
	// Guide.
	Configurations *EMRClusterConfigurationsList `json:"Configurations,omitempty"`

	// Configures Amazon Elastic Block Store (Amazon EBS) storage volumes to
	// attach to your instances.
	EbsConfiguration *EMREbsConfiguration `json:"EbsConfiguration,omitempty"`

	// The number of instances to launch in the instance group.
	InstanceCount *IntegerExpr `json:"InstanceCount,omitempty"`

	// The role of the servers in the Amazon EMR cluster, such as TASK. For
	// more information, see Instance Groups in the Amazon EMR Management
	// Guide.
	InstanceRole *StringExpr `json:"InstanceRole,omitempty"`

	// The EC2 instance type for all instances in the instance group. For
	// more information, see Instance Configurations in the Amazon EMR
	// Management Guide.
	InstanceType *StringExpr `json:"InstanceType,omitempty"`

	// The ID of an Amazon EMR cluster that you want to associate this
	// instance group with.
	JobFlowId *StringExpr `json:"JobFlowId,omitempty"`

	// The type of marketplace from which your instances are provisioned into
	// this group, either ON_DEMAND or SPOT. For more information, see Amazon
	// EC2 Purchasing Options.
	Market *StringExpr `json:"Market,omitempty"`

	// A name for the instance group.
	Name *StringExpr `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::EMR::InstanceGroupConfig to implement the ResourceProperties interface
func (s EMRInstanceGroupConfig) CfnResourceType() string {
	return "AWS::EMR::InstanceGroupConfig"
}

// EMRSecurityConfiguration represents AWS::EMR::SecurityConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html
type EMRSecurityConfiguration struct {
	// The name of the security configuration. For a list of valid parameters
	// for encryption settings, see AWS CLI Security Configuration JSON
	// Reference in the Amazon EMR Release Guide.
	Name *StringExpr `json:"Name,omitempty"`

	// The security configuration details in JSON format.
	SecurityConfiguration *StringExpr `json:"SecurityConfiguration,omitempty"`
}

// CfnResourceType returns AWS::EMR::SecurityConfiguration to implement the ResourceProperties interface
func (s EMRSecurityConfiguration) CfnResourceType() string {
	return "AWS::EMR::SecurityConfiguration"
}

// EMRStep represents AWS::EMR::Step
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html
type EMRStep struct {
	// The action to take if the job flow step fails. Currently, AWS
	// CloudFormation supports CONTINUE and CANCEL_AND_WAIT.
	ActionOnFailure *StringExpr `json:"ActionOnFailure,omitempty"`

	// The JAR file that includes the main function that Amazon EMR executes.
	HadoopJarStep *EMRStepHadoopJarStepConfig `json:"HadoopJarStep,omitempty"`

	// The ID of a cluster in which you want to run this job flow step.
	JobFlowId *StringExpr `json:"JobFlowId,omitempty"`

	// A name for the job flow step.
	Name *StringExpr `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::EMR::Step to implement the ResourceProperties interface
func (s EMRStep) CfnResourceType() string {
	return "AWS::EMR::Step"
}

// EventsRule represents AWS::Events::Rule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html
type EventsRule struct {
	// A description of the rule's purpose.
	Description *StringExpr `json:"Description,omitempty"`

	// Describes which events CloudWatch Events routes to the specified
	// target. These routed events are matched events. For more information,
	// see Events and Event Patterns in the Amazon CloudWatch User Guide.
	EventPattern interface{} `json:"EventPattern,omitempty"`

	// A name for the rule. If you don't specify a name, AWS CloudFormation
	// generates a unique physical ID and uses that ID for the rule name. For
	// more information, see Name Type.
	Name *StringExpr `json:"Name,omitempty"`

	// The schedule or rate (frequency) that determines when CloudWatch
	// Events runs the rule. For more information, see Schedule Expression
	// Syntax for Rules in the Amazon CloudWatch User Guide.
	ScheduleExpression *StringExpr `json:"ScheduleExpression,omitempty"`

	// Indicates whether the rule is enabled. For valid values, see the State
	// parameter for the PutRule action in the Amazon CloudWatch Events API
	// Reference.
	State *StringExpr `json:"State,omitempty"`

	// The resources, such as Lambda functions or Kinesis streams, that
	// CloudWatch Events routes events to and invokes when the rule is
	// triggered. For information about valid targets, see the PutTargets
	// action in the Amazon CloudWatch Events API Reference.
	Targets *CloudWatchEventsRuleTargetList `json:"Targets,omitempty"`
}

// CfnResourceType returns AWS::Events::Rule to implement the ResourceProperties interface
func (s EventsRule) CfnResourceType() string {
	return "AWS::Events::Rule"
}

// GameLiftAlias represents AWS::GameLift::Alias
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html
type GameLiftAlias struct {
	// Information that helps you identify the purpose of this alias.
	Description *StringExpr `json:"Description,omitempty"`

	// An identifier to associate with this alias. Alias names don't need to
	// be unique.
	Name *StringExpr `json:"Name,omitempty"`

	// A routing configuration that specifies where traffic is directed for
	// this alias, such as to a fleet or to a message.
	RoutingStrategy *GameLiftAliasRoutingStrategy `json:"RoutingStrategy,omitempty"`
}

// CfnResourceType returns AWS::GameLift::Alias to implement the ResourceProperties interface
func (s GameLiftAlias) CfnResourceType() string {
	return "AWS::GameLift::Alias"
}

// GameLiftBuild represents AWS::GameLift::Build
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html
type GameLiftBuild struct {
	// An identifier to associate with this build. Build names don't need to
	// be unique.
	Name *StringExpr `json:"Name,omitempty"`

	// The Amazon Simple Storage Service (Amazon S3) location where your
	// build package files are located.
	StorageLocation *GameLiftBuildStorageLocation `json:"StorageLocation,omitempty"`

	// A version to associate with this build. Version is useful if you want
	// to track updates to your build package files. Versions don't need to
	// be unique.
	Version *StringExpr `json:"Version,omitempty"`
}

// CfnResourceType returns AWS::GameLift::Build to implement the ResourceProperties interface
func (s GameLiftBuild) CfnResourceType() string {
	return "AWS::GameLift::Build"
}

// GameLiftFleet represents AWS::GameLift::Fleet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html
type GameLiftFleet struct {
	// The unique identifier for the build that you want to use with this
	// fleet.
	BuildId *StringExpr `json:"BuildId,omitempty"`

	// Information that helps you identify the purpose of this fleet.
	Description *StringExpr `json:"Description,omitempty"`

	// The number of EC2 instances that you want in this fleet.
	DesiredEC2Instances *IntegerExpr `json:"DesiredEC2Instances,omitempty"`

	// The incoming traffic, expressed as IP ranges and port numbers, that is
	// permitted to access the game server. If you don't specify values, no
	// traffic is permitted to your game servers.
	EC2InboundPermissions *GameLiftFleetEC2InboundPermissionList `json:"EC2InboundPermissions,omitempty"`

	// The type of EC2 instances that the fleet uses. EC2 instance types
	// define the CPU, memory, storage, and networking capacity of the
	// fleet's hosts. For more information about the instance types that are
	// supported by GameLift, see the EC2InstanceType parameter in the Amazon
	// GameLift API Reference.
	EC2InstanceType *StringExpr `json:"EC2InstanceType,omitempty"`

	// The path to game-session log files that are generated by your game
	// server, with the slashes (\) escaped. After a game session has been
	// terminated, GameLift captures and stores the logs in an S3 bucket.
	LogPaths interface{} `json:"LogPaths,omitempty"`

	// The maximum number of EC2 instances that you want to allow in this
	// fleet. By default, AWS CloudFormation, sets this property to 1.
	MaxSize *IntegerExpr `json:"MaxSize,omitempty"`

	// The minimum number of EC2 instances that you want to allow in this
	// fleet. By default, AWS CloudFormation, sets this property to 0.
	MinSize *IntegerExpr `json:"MinSize,omitempty"`

	// An identifier to associate with this fleet. Fleet names don't need to
	// be unique.
	Name *StringExpr `json:"Name,omitempty"`

	// The parameters that are required to launch your game server. Specify
	// these parameters as a string of command-line parameters, such as
	// +sv_port 33435 +start_lobby.
	ServerLaunchParameters *StringExpr `json:"ServerLaunchParameters,omitempty"`

	// The location of your game server that GameLift launches. You must
	// escape the slashes (\) and use the following pattern:
	// C:\\game\\launchpath. For example, if your game server files are in
	// the MyGame folder, the path should be C:\\game\\MyGame\\server.exe.
	ServerLaunchPath *StringExpr `json:"ServerLaunchPath,omitempty"`
}

// CfnResourceType returns AWS::GameLift::Fleet to implement the ResourceProperties interface
func (s GameLiftFleet) CfnResourceType() string {
	return "AWS::GameLift::Fleet"
}

// GlueClassifier represents AWS::Glue::Classifier
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html
type GlueClassifier struct {
	// A classifier that uses grok.
	GrokClassifier *GlueClassifierGrokClassifier `json:"GrokClassifier,omitempty"`
}

// CfnResourceType returns AWS::Glue::Classifier to implement the ResourceProperties interface
func (s GlueClassifier) CfnResourceType() string {
	return "AWS::Glue::Classifier"
}

// GlueConnection represents AWS::Glue::Connection
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-connection.html
type GlueConnection struct {
	// The connection that you want to create.
	ConnectionInput *GlueConnectionConnectionInput `json:"ConnectionInput,omitempty"`

	// The ID of the data catalog to create the catalog object in. Currently,
	// this should be the AWS account ID.
	CatalogId interface{} `json:"CatalogId,omitempty"`
}

// CfnResourceType returns AWS::Glue::Connection to implement the ResourceProperties interface
func (s GlueConnection) CfnResourceType() string {
	return "AWS::Glue::Connection"
}

// GlueCrawler represents AWS::Glue::Crawler
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html
type GlueCrawler struct {
	// The Amazon Resource Name (ARN) of an IAM role that's used to access
	// customer resources, such as Amazon S3 data.
	Role interface{} `json:"Role,omitempty"`

	// A list of UTF-8 strings that specify the custom classifiers that are
	// associated with the crawler.
	Classifiers interface{} `json:"Classifiers,omitempty"`

	// A description of the crawler and where it should be used. It must
	// match the URI address multi-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*
	Description interface{} `json:"Description,omitempty"`

	// The policy that specifies update and delete behaviors for the crawler.
	SchemaChangePolicy *GlueCrawlerSchemaChangePolicy `json:"SchemaChangePolicy,omitempty"`

	// The schedule for the crawler.
	Schedule *GlueCrawlerSchedule `json:"Schedule,omitempty"`

	// The name of the database where the crawler's output is stored.
	DatabaseName interface{} `json:"DatabaseName,omitempty"`

	// The crawler targets.
	Targets *GlueCrawlerTargets `json:"Targets,omitempty"`

	// The table prefix that's used for catalog tables that are created.
	TablePrefix interface{} `json:"TablePrefix,omitempty"`

	// The name of the crawler. Must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Name interface{} `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::Glue::Crawler to implement the ResourceProperties interface
func (s GlueCrawler) CfnResourceType() string {
	return "AWS::Glue::Crawler"
}

// GlueDatabase represents AWS::Glue::Database
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-database.html
type GlueDatabase struct {
	// The metadata of the database.
	DatabaseInput *GlueDatabaseDatabaseInput `json:"DatabaseInput,omitempty"`

	// The ID of the data catalog to create the catalog object in. Currently,
	// this should be the AWS account ID.
	CatalogId interface{} `json:"CatalogId,omitempty"`
}

// CfnResourceType returns AWS::Glue::Database to implement the ResourceProperties interface
func (s GlueDatabase) CfnResourceType() string {
	return "AWS::Glue::Database"
}

// GlueDevEndpoint represents AWS::Glue::DevEndpoint
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html
type GlueDevEndpoint struct {
	// The name of the endpoint.
	EndpointName interface{} `json:"EndpointName,omitempty"`

	// The path to one or more Java Jars in an Amazon S3 bucket to load in
	// your endpoint.
	ExtraJarsS3Path interface{} `json:"ExtraJarsS3Path,omitempty"`

	// The path to one or more Python libraries in an Amazon S3 bucket to
	// load in your endpoint.
	ExtraPythonLibsS3Path interface{} `json:"ExtraPythonLibsS3Path,omitempty"`

	// The number of nodes that the endpoint uses.
	NumberOfNodes interface{} `json:"NumberOfNodes,omitempty"`

	// The public key for the endpoint to use for authentication.
	PublicKey interface{} `json:"PublicKey,omitempty"`

	// The Amazon Resource Name (ARN) of the IAM role for the endpoint. It
	// must match the AWS ARN string pattern: arn:aws:iam::\d{12}:role/.*
	RoleArn interface{} `json:"RoleArn,omitempty"`

	// A list of UTF-8 strings that specify the security group IDs for the
	// endpoint.
	SecurityGroupIds interface{} `json:"SecurityGroupIds,omitempty"`

	// The subnet ID for the endpoint.
	SubnetId interface{} `json:"SubnetId,omitempty"`
}

// CfnResourceType returns AWS::Glue::DevEndpoint to implement the ResourceProperties interface
func (s GlueDevEndpoint) CfnResourceType() string {
	return "AWS::Glue::DevEndpoint"
}

// GlueJob represents AWS::Glue::Job
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html
type GlueJob struct {
	// The role that's associated with the job.
	Role interface{} `json:"Role,omitempty"`

	// UTF-8 string–to–UTF-8 string key-value pairs that specify the
	// default parameters for the job.
	DefaultArguments interface{} `json:"DefaultArguments,omitempty"`

	// The connections that are used by the job.
	Connections *GlueJobConnectionsList `json:"Connections,omitempty"`

	// The maximum number of times to retry this job if it fails.
	MaxRetries interface{} `json:"MaxRetries,omitempty"`

	// The description of the job.
	Description interface{} `json:"Description,omitempty"`

	// The location of the logs for the job.
	LogUri interface{} `json:"LogUri,omitempty"`

	// The code that executes a job.
	Command *GlueJobJobCommand `json:"Command,omitempty"`

	// The number of capacity units that are allocated to this job.
	AllocatedCapacity interface{} `json:"AllocatedCapacity,omitempty"`

	// The execution property of the job, which specifies the maximum number
	// of concurrent runs that are allowed for the job.
	ExecutionProperty *GlueJobExecutionProperty `json:"ExecutionProperty,omitempty"`

	// The name of the job. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Name interface{} `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::Glue::Job to implement the ResourceProperties interface
func (s GlueJob) CfnResourceType() string {
	return "AWS::Glue::Job"
}

// GluePartition represents AWS::Glue::Partition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-partition.html
type GluePartition struct {
	// The name of the metadata table to create the partition in.
	TableName interface{} `json:"TableName,omitempty"`

	// The name of the catalog database to create the partition in. It must
	// match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	DatabaseName interface{} `json:"DatabaseName,omitempty"`

	// The ID of the data catalog to create the catalog object in. Currently,
	// this should be the AWS account ID.
	CatalogId interface{} `json:"CatalogId,omitempty"`

	// The metadata of the partition.
	PartitionInput *GluePartitionPartitionInput `json:"PartitionInput,omitempty"`
}

// CfnResourceType returns AWS::Glue::Partition to implement the ResourceProperties interface
func (s GluePartition) CfnResourceType() string {
	return "AWS::Glue::Partition"
}

// GlueTable represents AWS::Glue::Table
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-table.html
type GlueTable struct {
	// The metadata of the table.
	TableInput *GlueTableTableInput `json:"TableInput,omitempty"`

	// The name of the catalog database for the table. It must match the
	// single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	DatabaseName interface{} `json:"DatabaseName,omitempty"`

	// The ID of the data catalog to create the catalog object in. Currently,
	// this should be the AWS account ID.
	CatalogId interface{} `json:"CatalogId,omitempty"`
}

// CfnResourceType returns AWS::Glue::Table to implement the ResourceProperties interface
func (s GlueTable) CfnResourceType() string {
	return "AWS::Glue::Table"
}

// GlueTrigger represents AWS::Glue::Trigger
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html
type GlueTrigger struct {
	// The type of job trigger. Valid values are SCHEDULED, CONDITIONAL, or
	// ON_DEMAND.
	Type interface{} `json:"Type,omitempty"`

	// The description of the job trigger.
	Description interface{} `json:"Description,omitempty"`

	// The actions that the job trigger initiates when it fires.
	Actions *GlueTriggerActionList `json:"Actions,omitempty"`

	// The cron schedule expression for the job trigger.
	Schedule interface{} `json:"Schedule,omitempty"`

	// The name of the job trigger.
	Name interface{} `json:"Name,omitempty"`

	// The predicate of the job trigger, which determines when the trigger
	// fires.
	Predicate *GlueTriggerPredicate `json:"Predicate,omitempty"`
}

// CfnResourceType returns AWS::Glue::Trigger to implement the ResourceProperties interface
func (s GlueTrigger) CfnResourceType() string {
	return "AWS::Glue::Trigger"
}

// GuardDutyDetector represents AWS::GuardDuty::Detector
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html
type GuardDutyDetector struct {
	// A Boolean value that specifies whether the detector is to be enabled.
	Enable interface{} `json:"Enable,omitempty"`
}

// CfnResourceType returns AWS::GuardDuty::Detector to implement the ResourceProperties interface
func (s GuardDutyDetector) CfnResourceType() string {
	return "AWS::GuardDuty::Detector"
}

// GuardDutyIPSet represents AWS::GuardDuty::IPSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html
type GuardDutyIPSet struct {
	// A Boolean value that indicates whether GuardDuty is to start using the
	// uploaded IP set.
	Activate interface{} `json:"Activate,omitempty"`

	// The detector ID that specifies the GuardDuty service for which an IP
	// set is to be created.
	DetectorId interface{} `json:"DetectorId,omitempty"`

	// The format of the file that contains the IP set. Valid values are TXT,
	// STIX, and OTX_CSV.
	Format interface{} `json:"Format,omitempty"`

	// The URI of the file that contains the IP set.
	Location interface{} `json:"Location,omitempty"`

	// The friendly name to identify the IP set. This name is displayed in
	// all findings that are triggered by activity that involves IP addresses
	// included in this IP set.
	Name interface{} `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::GuardDuty::IPSet to implement the ResourceProperties interface
func (s GuardDutyIPSet) CfnResourceType() string {
	return "AWS::GuardDuty::IPSet"
}

// GuardDutyThreatIntelSet represents AWS::GuardDuty::ThreatIntelSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html
type GuardDutyThreatIntelSet struct {
	// A Boolean value that indicates whether GuardDuty should start using
	// the uploaded ThreatIntelSet.
	Activate interface{} `json:"Activate,omitempty"`

	// The detector ID that specifies the GuardDuty service for which an
	// ThreatIntelSet is to be created.
	DetectorId interface{} `json:"DetectorId,omitempty"`

	// The format of the file that contains the ThreatIntelSet. Valid values
	// are TXT, STIX, OTX_CSV, ALIEN_VAULT, PROOF_POINT, and FIRE_EYE.
	Format interface{} `json:"Format,omitempty"`

	// The URI of the file that contains the ThreatIntelSet.
	Location interface{} `json:"Location,omitempty"`

	// A friendly ThreatIntelSet name that is displayed in all findings
	// generated by activity that involves IP addresses included in this
	// ThreatIntelSet.
	Name interface{} `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::GuardDuty::ThreatIntelSet to implement the ResourceProperties interface
func (s GuardDutyThreatIntelSet) CfnResourceType() string {
	return "AWS::GuardDuty::ThreatIntelSet"
}

// IAMAccessKey represents AWS::IAM::AccessKey
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html
type IAMAccessKey struct {
	// This value is specific to AWS CloudFormation and can only be
	// incremented. Incrementing this value notifies AWS CloudFormation that
	// you want to rotate your access key. When you update your stack, AWS
	// CloudFormation will replace the existing access key with a new key.
	Serial *IntegerExpr `json:"Serial,omitempty"`

	// The status of the access key. By default, AWS CloudFormation sets this
	// property value to Active.
	Status *StringExpr `json:"Status,omitempty"`

	// The name of the user that the new key will belong to.
	UserName *StringExpr `json:"UserName,omitempty"`
}

// CfnResourceType returns AWS::IAM::AccessKey to implement the ResourceProperties interface
func (s IAMAccessKey) CfnResourceType() string {
	return "AWS::IAM::AccessKey"
}

// IAMGroup represents AWS::IAM::Group
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html
type IAMGroup struct {
	// A name for the IAM group. For valid values, see the GroupName
	// parameter for the CreateGroup action in the IAM API Reference. If you
	// don't specify a name, AWS CloudFormation generates a unique physical
	// ID and uses that ID for the group name.
	GroupName *StringExpr `json:"GroupName,omitempty"`

	// One or more managed policy ARNs to attach to this group.
	ManagedPolicyArns interface{} `json:"ManagedPolicyArns,omitempty"`

	// The path to the group. For more information about paths, see IAM
	// Identifiers in the IAM User Guide.
	Path *StringExpr `json:"Path,omitempty"`

	// The policies to associate with this group. For information about
	// policies, see Overview of IAM Policies in the IAM User Guide.
	Policies *IAMPoliciesList `json:"Policies,omitempty"`
}

// CfnResourceType returns AWS::IAM::Group to implement the ResourceProperties interface
func (s IAMGroup) CfnResourceType() string {
	return "AWS::IAM::Group"
}

// IAMInstanceProfile represents AWS::IAM::InstanceProfile
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html
type IAMInstanceProfile struct {
	// The path associated with this IAM instance profile. For information
	// about IAM paths, see Friendly Names and Paths in the AWS Identity and
	// Access Management User Guide.
	Path *StringExpr `json:"Path,omitempty"`

	// The name of an existing IAM role to associate with this instance
	// profile. Currently, you can assign a maximum of one role to an
	// instance profile.
	Roles interface{} `json:"Roles,omitempty"`

	// The name of the instance profile that you want to create. This
	// parameter allows (per its regex pattern) a string consisting of upper
	// and lowercase alphanumeric characters with no spaces. You can also
	// include any of the following characters: = , . @ -.
	InstanceProfileName *StringExpr `json:"InstanceProfileName,omitempty"`
}

// CfnResourceType returns AWS::IAM::InstanceProfile to implement the ResourceProperties interface
func (s IAMInstanceProfile) CfnResourceType() string {
	return "AWS::IAM::InstanceProfile"
}

// IAMManagedPolicy represents AWS::IAM::ManagedPolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html
type IAMManagedPolicy struct {
	// A description of the IAM policy. For example, describe the permissions
	// that are defined in the policy.
	Description *StringExpr `json:"Description,omitempty"`

	// The names of IAM groups to attach to this policy.
	Groups interface{} `json:"Groups,omitempty"`

	// The path for the IAM policy. By default, the path is /. For more
	// information, see IAM Identifiers in the IAM User Guide.
	Path *StringExpr `json:"Path,omitempty"`

	// Policies that define the permissions for this managed policy. For more
	// information about policy syntax, see IAM Policy Elements Reference in
	// IAM User Guide.
	PolicyDocument interface{} `json:"PolicyDocument,omitempty"`

	// The names of IAM roles to attach to this policy.
	Roles interface{} `json:"Roles,omitempty"`

	// The names of users to attach to this policy.
	Users interface{} `json:"Users,omitempty"`

	// A custom, friendly name for your IAM managed policy. For valid values,
	// see the PolicyName parameter of the CreatePolicy action in the IAM API
	// Reference.
	ManagedPolicyName *StringExpr `json:"ManagedPolicyName,omitempty"`
}

// CfnResourceType returns AWS::IAM::ManagedPolicy to implement the ResourceProperties interface
func (s IAMManagedPolicy) CfnResourceType() string {
	return "AWS::IAM::ManagedPolicy"
}

// IAMPolicy represents AWS::IAM::Policy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html
type IAMPolicy struct {
	// The names of groups to which you want to add the policy.
	Groups interface{} `json:"Groups,omitempty"`

	// A policy document that contains permissions to add to the specified
	// users or groups.
	PolicyDocument interface{} `json:"PolicyDocument,omitempty"`

	// The name of the policy. If you specify multiple policies for an
	// entity, specify unique names. For example, if you specify a list of
	// policies for an IAM role, each policy must have a unique name.
	PolicyName *StringExpr `json:"PolicyName,omitempty"`

	// The names of AWS::IAM::Roles to which this policy will be attached.
	Roles interface{} `json:"Roles,omitempty"`

	// The names of users for whom you want to add the policy.
	Users interface{} `json:"Users,omitempty"`
}

// CfnResourceType returns AWS::IAM::Policy to implement the ResourceProperties interface
func (s IAMPolicy) CfnResourceType() string {
	return "AWS::IAM::Policy"
}

// IAMRole represents AWS::IAM::Role
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
type IAMRole struct {
	// The trust policy that is associated with this role. You can associate
	// only one assume role policy with a role. For an example of an assume
	// role policy, see Template Examples. For more information about the
	// elements that you can use in an IAM policy, see IAM Policy Elements
	// Reference in the IAM User Guide.
	AssumeRolePolicyDocument interface{} `json:"AssumeRolePolicyDocument,omitempty"`

	// One or more managed policy ARNs to attach to this role.
	ManagedPolicyArns interface{} `json:"ManagedPolicyArns,omitempty"`

	// The path associated with this role. For information about IAM paths,
	// see Friendly Names and Paths in IAM User Guide.
	Path *StringExpr `json:"Path,omitempty"`

	// The policies to associate with this role. For sample templates, see
	// Template Examples.
	Policies *IAMPoliciesList `json:"Policies,omitempty"`

	// A name for the IAM role. For valid values, see the RoleName parameter
	// for the CreateRole action in the IAM API Reference. If you don't
	// specify a name, AWS CloudFormation generates a unique physical ID and
	// uses that ID for the group name.
	RoleName *StringExpr `json:"RoleName,omitempty"`
}

// CfnResourceType returns AWS::IAM::Role to implement the ResourceProperties interface
func (s IAMRole) CfnResourceType() string {
	return "AWS::IAM::Role"
}

// IAMUser represents AWS::IAM::User
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html
type IAMUser struct {
	// A name of a group to which you want to add the user.
	Groups interface{} `json:"Groups,omitempty"`

	// Creates a login profile so that the user can access the AWS Management
	// Console.
	LoginProfile *IAMUserLoginProfile `json:"LoginProfile,omitempty"`

	// One or more managed policy ARNs to attach to this user.
	ManagedPolicyArns interface{} `json:"ManagedPolicyArns,omitempty"`

	// The path for the user name. For more information about paths, see IAM
	// Identifiers in the IAM User Guide.
	Path *StringExpr `json:"Path,omitempty"`

	// The policies to associate with this user. For information about
	// policies, see Overview of IAM Policies in the IAM User Guide.
	Policies *IAMPoliciesList `json:"Policies,omitempty"`

	// A name for the IAM user. For valid values, see the UserName parameter
	// for the CreateUser action in the IAM API Reference. If you don't
	// specify a name, AWS CloudFormation generates a unique physical ID and
	// uses that ID for the user name.
	UserName *StringExpr `json:"UserName,omitempty"`
}

// CfnResourceType returns AWS::IAM::User to implement the ResourceProperties interface
func (s IAMUser) CfnResourceType() string {
	return "AWS::IAM::User"
}

// InspectorAssessmentTarget represents AWS::Inspector::AssessmentTarget
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttarget.html
type InspectorAssessmentTarget struct {
	// The name of the Amazon Inspector assessment target.
	AssessmentTargetName interface{} `json:"AssessmentTargetName,omitempty"`

	// The ARN that specifies the resource group that is associated with the
	// assessment target.
	ResourceGroupArn interface{} `json:"ResourceGroupArn,omitempty"`
}

// CfnResourceType returns AWS::Inspector::AssessmentTarget to implement the ResourceProperties interface
func (s InspectorAssessmentTarget) CfnResourceType() string {
	return "AWS::Inspector::AssessmentTarget"
}

// InspectorAssessmentTemplate represents AWS::Inspector::AssessmentTemplate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html
type InspectorAssessmentTemplate struct {
	// The ARN of the assessment target that corresponds to this assessment
	// template.
	AssessmentTargetArn interface{} `json:"AssessmentTargetArn,omitempty"`

	// The duration in seconds specified for this assessment tempate. The
	// default value is 3600 seconds (one hour). The maximum value is 86400
	// seconds (one day).
	DurationInSeconds interface{} `json:"DurationInSeconds,omitempty"`

	// The name of the assessment template.
	AssessmentTemplateName interface{} `json:"AssessmentTemplateName,omitempty"`

	// The rules packages that are specified for this assessment template.
	RulesPackageArns interface{} `json:"RulesPackageArns,omitempty"`

	// The user-defined attributes that are assigned to every generated
	// finding from the assessment run that uses this assessment template.
	UserAttributesForFindings *ResourceTagList `json:"UserAttributesForFindings,omitempty"`
}

// CfnResourceType returns AWS::Inspector::AssessmentTemplate to implement the ResourceProperties interface
func (s InspectorAssessmentTemplate) CfnResourceType() string {
	return "AWS::Inspector::AssessmentTemplate"
}

// InspectorResourceGroup represents AWS::Inspector::ResourceGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-resourcegroup.html
type InspectorResourceGroup struct {
	// The tags (key and value pairs) of the resource group.
	ResourceGroupTags *ResourceTagList `json:"ResourceGroupTags,omitempty"`
}

// CfnResourceType returns AWS::Inspector::ResourceGroup to implement the ResourceProperties interface
func (s InspectorResourceGroup) CfnResourceType() string {
	return "AWS::Inspector::ResourceGroup"
}

// IAMUserToGroupAddition represents AWS::IAM::UserToGroupAddition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html
type IAMUserToGroupAddition struct {
	// The name of group to add users to.
	GroupName *StringExpr `json:"GroupName,omitempty"`

	// Required: Yes
	Users interface{} `json:"Users,omitempty"`
}

// CfnResourceType returns AWS::IAM::UserToGroupAddition to implement the ResourceProperties interface
func (s IAMUserToGroupAddition) CfnResourceType() string {
	return "AWS::IAM::UserToGroupAddition"
}

// IoTCertificate represents AWS::IoT::Certificate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html
type IoTCertificate struct {
	// The certificate signing request (CSR).
	CertificateSigningRequest *StringExpr `json:"CertificateSigningRequest,omitempty"`

	// The status of the certificate.
	Status *StringExpr `json:"Status,omitempty"`
}

// CfnResourceType returns AWS::IoT::Certificate to implement the ResourceProperties interface
func (s IoTCertificate) CfnResourceType() string {
	return "AWS::IoT::Certificate"
}

// IoTPolicy represents AWS::IoT::Policy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policy.html
type IoTPolicy struct {
	// The JSON document that describes the policy.
	PolicyDocument interface{} `json:"PolicyDocument,omitempty"`

	// The name (the physical ID) of the AWS IoT policy.
	PolicyName *StringExpr `json:"PolicyName,omitempty"`
}

// CfnResourceType returns AWS::IoT::Policy to implement the ResourceProperties interface
func (s IoTPolicy) CfnResourceType() string {
	return "AWS::IoT::Policy"
}

// IoTPolicyPrincipalAttachment represents AWS::IoT::PolicyPrincipalAttachment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policyprincipalattachment.html
type IoTPolicyPrincipalAttachment struct {
	// The name of the policy.
	PolicyName *StringExpr `json:"PolicyName,omitempty"`

	// The principal, which can be a certificate ARN (as returned from the
	// CreateCertificate operation) or an Amazon Cognito ID.
	Principal *StringExpr `json:"Principal,omitempty"`
}

// CfnResourceType returns AWS::IoT::PolicyPrincipalAttachment to implement the ResourceProperties interface
func (s IoTPolicyPrincipalAttachment) CfnResourceType() string {
	return "AWS::IoT::PolicyPrincipalAttachment"
}

// IoTThing represents AWS::IoT::Thing
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thing.html
type IoTThing struct {
	// The attribute payload.
	AttributePayload *IoTThingAttributePayload `json:"AttributePayload,omitempty"`

	// The name (the physical ID) of the AWS IoT thing.
	ThingName *StringExpr `json:"ThingName,omitempty"`
}

// CfnResourceType returns AWS::IoT::Thing to implement the ResourceProperties interface
func (s IoTThing) CfnResourceType() string {
	return "AWS::IoT::Thing"
}

// IoTThingPrincipalAttachment represents AWS::IoT::ThingPrincipalAttachment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingprincipalattachment.html
type IoTThingPrincipalAttachment struct {
	// The principal, which can be a certificate ARN (as returned from the
	// CreateCertificate operation) or an Amazon Cognito ID.
	Principal *StringExpr `json:"Principal,omitempty"`

	// The name of the AWS IoT thing.
	ThingName *StringExpr `json:"ThingName,omitempty"`
}

// CfnResourceType returns AWS::IoT::ThingPrincipalAttachment to implement the ResourceProperties interface
func (s IoTThingPrincipalAttachment) CfnResourceType() string {
	return "AWS::IoT::ThingPrincipalAttachment"
}

// IoTTopicRule represents AWS::IoT::TopicRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicrule.html
type IoTTopicRule struct {
	// The name (the physical ID) of the AWS IoT rule.
	RuleName *StringExpr `json:"RuleName,omitempty"`

	// The actions associated with the AWS IoT rule.
	TopicRulePayload *IoTTopicRuleTopicRulePayload `json:"TopicRulePayload,omitempty"`
}

// CfnResourceType returns AWS::IoT::TopicRule to implement the ResourceProperties interface
func (s IoTTopicRule) CfnResourceType() string {
	return "AWS::IoT::TopicRule"
}

// KinesisStream represents AWS::Kinesis::Stream
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html
type KinesisStream struct {
	// The name of the Kinesis stream. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// stream name. For more information, see Name Type.
	Name *StringExpr `json:"Name,omitempty"`

	// The number of hours for the data records that are stored in shards to
	// remain accessible. The default value is 24. For more information about
	// the stream retention period, see Changing the Data Retention Period in
	// the Amazon Kinesis Developer Guide.
	RetentionPeriodHours *IntegerExpr `json:"RetentionPeriodHours,omitempty"`

	// The number of shards that the stream uses. For greater provisioned
	// throughput, increase the number of shards.
	ShardCount *IntegerExpr `json:"ShardCount,omitempty"`

	// An arbitrary set of tags (key–value pairs) to associate with the
	// Kinesis stream. For information about constraints for this property,
	// see Tag Restrictions in the Amazon Kinesis Developer Guide.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::Kinesis::Stream to implement the ResourceProperties interface
func (s KinesisStream) CfnResourceType() string {
	return "AWS::Kinesis::Stream"
}

// KinesisAnalyticsApplication represents AWS::KinesisAnalytics::Application
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-application.html
type KinesisAnalyticsApplication struct {
	// The name of your Amazon Kinesis Analytics application.
	ApplicationName interface{} `json:"ApplicationName,omitempty"`

	// The summary description of the application.
	ApplicationDescription interface{} `json:"ApplicationDescription,omitempty"`

	// One or more SQL statements that read input data, transform it, and
	// generate output.
	ApplicationCode interface{} `json:"ApplicationCode,omitempty"`

	// Use this parameter to configure the application input.
	Inputs *KinesisAnalyticsApplicationInputList `json:"Inputs,omitempty"`
}

// CfnResourceType returns AWS::KinesisAnalytics::Application to implement the ResourceProperties interface
func (s KinesisAnalyticsApplication) CfnResourceType() string {
	return "AWS::KinesisAnalytics::Application"
}

// KinesisAnalyticsApplicationOutput represents AWS::KinesisAnalytics::ApplicationOutput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationoutput.html
type KinesisAnalyticsApplicationOutput struct {
	// The name of the application to which you want to add the output
	// configuration.
	ApplicationName *StringExpr `json:"ApplicationName,omitempty"`

	// An array of objects, each describing one output configuration.
	Output *KinesisAnalyticsApplicationOutputOutput `json:"Output,omitempty"`
}

// CfnResourceType returns AWS::KinesisAnalytics::ApplicationOutput to implement the ResourceProperties interface
func (s KinesisAnalyticsApplicationOutput) CfnResourceType() string {
	return "AWS::KinesisAnalytics::ApplicationOutput"
}

// KinesisAnalyticsApplicationReferenceDataSource represents AWS::KinesisAnalytics::ApplicationReferenceDataSource
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationreferencedatasource.html
type KinesisAnalyticsApplicationReferenceDataSource struct {
	// The name of an existing application.
	ApplicationName interface{} `json:"ApplicationName,omitempty"`

	// The reference data source, which is an object in your Amazon Simple
	// Storage Service (Amazon S3) bucket.
	ReferenceDataSource *KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSource `json:"ReferenceDataSource,omitempty"`
}

// CfnResourceType returns AWS::KinesisAnalytics::ApplicationReferenceDataSource to implement the ResourceProperties interface
func (s KinesisAnalyticsApplicationReferenceDataSource) CfnResourceType() string {
	return "AWS::KinesisAnalytics::ApplicationReferenceDataSource"
}

// KinesisFirehoseDeliveryStream represents AWS::KinesisFirehose::DeliveryStream
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html
type KinesisFirehoseDeliveryStream struct {
	// A name for the delivery stream.
	DeliveryStreamName *StringExpr `json:"DeliveryStreamName,omitempty"`

	// The delivery stream type. This property can be one of the following
	// values:
	DeliveryStreamType *StringExpr `json:"DeliveryStreamType,omitempty"`

	// An Amazon ES destination for the delivery stream.
	ElasticsearchDestinationConfiguration *KinesisFirehoseDeliveryStreamElasticsearchDestinationConfiguration `json:"ElasticsearchDestinationConfiguration,omitempty"`

	// An Amazon S3 destination for the delivery stream.
	ExtendedS3DestinationConfiguration *KinesisFirehoseDeliveryStreamExtendedS3DestinationConfiguration `json:"ExtendedS3DestinationConfiguration,omitempty"`

	// When a Kinesis stream is used as the source for the delivery stream, a
	// Kinesis Firehose DeliveryStream KinesisStreamSourceConfiguration
	// containing the Kinesis stream ARN and the role ARN for the source
	// stream.
	KinesisStreamSourceConfiguration *KinesisFirehoseDeliveryStreamKinesisStreamSourceConfiguration `json:"KinesisStreamSourceConfiguration,omitempty"`

	// An Amazon Redshift destination for the delivery stream.
	RedshiftDestinationConfiguration *KinesisFirehoseDeliveryStreamRedshiftDestinationConfiguration `json:"RedshiftDestinationConfiguration,omitempty"`

	// An Amazon S3 destination for the delivery stream.
	S3DestinationConfiguration *KinesisFirehoseDeliveryStreamS3DestinationConfiguration `json:"S3DestinationConfiguration,omitempty"`
}

// CfnResourceType returns AWS::KinesisFirehose::DeliveryStream to implement the ResourceProperties interface
func (s KinesisFirehoseDeliveryStream) CfnResourceType() string {
	return "AWS::KinesisFirehose::DeliveryStream"
}

// KMSAlias represents AWS::KMS::Alias
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html
type KMSAlias struct {
	// The name of the alias. The name must start with alias followed by a
	// forward slash, such as alias/. You can't specify aliases that begin
	// with alias/AWS. These aliases are reserved.
	AliasName *StringExpr `json:"AliasName,omitempty"`

	// The ID of the key for which you are creating the alias. Specify the
	// key's globally unique identifier or Amazon Resource Name (ARN). You
	// can't specify another alias.
	TargetKeyId *StringExpr `json:"TargetKeyId,omitempty"`
}

// CfnResourceType returns AWS::KMS::Alias to implement the ResourceProperties interface
func (s KMSAlias) CfnResourceType() string {
	return "AWS::KMS::Alias"
}

// KMSKey represents AWS::KMS::Key
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html
type KMSKey struct {
	// A description of the key. Use a description that helps your users
	// decide whether the key is appropriate for a particular task.
	Description *StringExpr `json:"Description,omitempty"`

	// Indicates whether the key is available for use. AWS CloudFormation
	// sets this value to true by default.
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// Indicates whether AWS KMS rotates the key. AWS CloudFormation sets
	// this value to false by default.
	EnableKeyRotation *BoolExpr `json:"EnableKeyRotation,omitempty"`

	// An AWS KMS key policy to attach to the key. Use a policy to specify
	// who has permission to use the key and which actions they can perform.
	// For more information, see Key Policies in the AWS Key Management
	// Service Developer Guide.
	KeyPolicy interface{} `json:"KeyPolicy,omitempty"`

	// Specifies an arbitrary set of tags (key–value pairs) to associate
	// with this key. Use tags to manage your resources.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::KMS::Key to implement the ResourceProperties interface
func (s KMSKey) CfnResourceType() string {
	return "AWS::KMS::Key"
}

// LambdaEventSourceMapping represents AWS::Lambda::EventSourceMapping
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html
type LambdaEventSourceMapping struct {
	// The largest number of records that Lambda retrieves from your event
	// source when invoking your function. Your function receives an event
	// with all the retrieved records. For the default and valid values, see
	// CreateEventSourceMapping in the AWS Lambda Developer Guide.
	BatchSize *IntegerExpr `json:"BatchSize,omitempty"`

	// Indicates whether Lambda begins polling the event source.
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// The Amazon Resource Name (ARN) of the Kinesis or DynamoDB stream that
	// is the source of events. Any record added to this stream can invoke
	// the Lambda function. For more information, see
	// CreateEventSourceMapping in the AWS Lambda Developer Guide.
	EventSourceArn *StringExpr `json:"EventSourceArn,omitempty"`

	// The name or ARN of a Lambda function to invoke when Lambda detects an
	// event on the stream.
	FunctionName *StringExpr `json:"FunctionName,omitempty"`

	// The position in the stream where Lambda starts reading. For valid
	// values, see CreateEventSourceMapping in the AWS Lambda Developer
	// Guide.
	StartingPosition *StringExpr `json:"StartingPosition,omitempty"`
}

// CfnResourceType returns AWS::Lambda::EventSourceMapping to implement the ResourceProperties interface
func (s LambdaEventSourceMapping) CfnResourceType() string {
	return "AWS::Lambda::EventSourceMapping"
}

// LambdaAlias represents AWS::Lambda::Alias
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html
type LambdaAlias struct {
	// Information about the alias, such as its purpose or the Lambda
	// function that is associated with it.
	Description *StringExpr `json:"Description,omitempty"`

	// The Lambda function that you want to associate with this alias. You
	// can specify the function's name or its Amazon Resource Name (ARN).
	FunctionName *StringExpr `json:"FunctionName,omitempty"`

	// The version of the Lambda function that you want to associate with
	// this alias.
	FunctionVersion *StringExpr `json:"FunctionVersion,omitempty"`

	// A name for the alias.
	Name *StringExpr `json:"Name,omitempty"`

	// Use this parameter to point your alias to two different function
	// versions, allowing you to dictate what percentage of traffic will
	// invoke each version. For more information, see Routing Traffic to
	// Different Function Versions Using Aliases in the AWS Lambda Developer
	// Guide.
	RoutingConfig *LambdaAliasAliasRoutingConfiguration `json:"RoutingConfig,omitempty"`
}

// CfnResourceType returns AWS::Lambda::Alias to implement the ResourceProperties interface
func (s LambdaAlias) CfnResourceType() string {
	return "AWS::Lambda::Alias"
}

// LambdaFunction represents AWS::Lambda::Function
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html
type LambdaFunction struct {
	// The source code of your Lambda function. You can point to a file in an
	// Amazon Simple Storage Service (Amazon S3) bucket or specify your
	// source code as inline text.
	Code *LambdaFunctionCode `json:"Code,omitempty"`

	// Configures how Lambda handles events that it can't process. If you
	// don't specify a Dead Letter Queue (DLQ) configuration, Lambda discards
	// events after the maximum number of retries. For more information, see
	// Dead Letter Queues in the AWS Lambda Developer Guide.
	DeadLetterConfig *LambdaFunctionDeadLetterConfig `json:"DeadLetterConfig,omitempty"`

	// A description of the function.
	Description *StringExpr `json:"Description,omitempty"`

	// Key-value pairs that Lambda caches and makes available for your Lambda
	// functions. Use environment variables to apply configuration changes,
	// such as test and production environment configurations, without
	// changing your Lambda function source code.
	Environment *LambdaFunctionEnvironment `json:"Environment,omitempty"`

	// A name for the function. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// function's name. For more information, see Name Type.
	FunctionName *StringExpr `json:"FunctionName,omitempty"`

	// The name of the function (within your source code) that Lambda calls
	// to start running your code. For more information, see the Handler
	// property in the AWS Lambda Developer Guide.
	Handler *StringExpr `json:"Handler,omitempty"`

	// The Amazon Resource Name (ARN) of an AWS Key Management Service (AWS
	// KMS) key that Lambda uses to encrypt and decrypt environment variable
	// values.
	KmsKeyArn *StringExpr `json:"KmsKeyArn,omitempty"`

	// The amount of memory, in MB, that is allocated to your Lambda
	// function. Lambda uses this value to proportionally allocate the amount
	// of CPU power. For more information, see Resource Model in the AWS
	// Lambda Developer Guide.
	MemorySize *IntegerExpr `json:"MemorySize,omitempty"`

	// The Amazon Resource Name (ARN) of the AWS Identity and Access
	// Management (IAM) execution role that Lambda assumes when it runs your
	// code to access AWS services.
	Role *StringExpr `json:"Role,omitempty"`

	// The runtime environment for the Lambda function that you are
	// uploading. For valid values, see the Runtime property in the AWS
	// Lambda Developer Guide.
	Runtime *StringExpr `json:"Runtime,omitempty"`

	// The function execution time (in seconds) after which Lambda terminates
	// the function. Because the execution time affects cost, set this value
	// based on the function's expected execution time. By default, Timeout
	// is set to 3 seconds. For more information, see the FAQs.
	Timeout *IntegerExpr `json:"Timeout,omitempty"`

	// The parent object that contains your Lambda function's tracing
	// settings. By default, the Mode property is set to PassThrough. For
	// valid values, see the TracingConfig data type in the AWS Lambda
	// Developer Guide.
	TracingConfig *LambdaFunctionTracingConfig `json:"TracingConfig,omitempty"`

	// If the Lambda function requires access to resources in a VPC, specify
	// a VPC configuration that Lambda uses to set up an elastic network
	// interface (ENI). The ENI enables your function to connect to other
	// resources in your VPC, but it doesn't provide public Internet access.
	// If your function requires Internet access (for example, to access AWS
	// services that don't have VPC endpoints), configure a Network Address
	// Translation (NAT) instance inside your VPC or use an Amazon Virtual
	// Private Cloud (Amazon VPC) NAT gateway. For more information, see NAT
	// Gateways in the Amazon VPC User Guide.
	VpcConfig *LambdaFunctionVpcConfig `json:"VpcConfig,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this Lambda function.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::Lambda::Function to implement the ResourceProperties interface
func (s LambdaFunction) CfnResourceType() string {
	return "AWS::Lambda::Function"
}

// LambdaPermission represents AWS::Lambda::Permission
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html
type LambdaPermission struct {
	// The Lambda actions that you want to allow in this statement. For
	// example, you can specify lambda:CreateFunction to specify a certain
	// action, or use a wildcard (lambda:*) to grant permission to all Lambda
	// actions. For a list of actions, see Actions and Condition Context Keys
	// for AWS Lambda in the IAM User Guide.
	Action *StringExpr `json:"Action,omitempty"`

	// A unique token that must be supplied by the principal invoking the
	// function.
	EventSourceToken *StringExpr `json:"EventSourceToken,omitempty"`

	// The name (physical ID), Amazon Resource Name (ARN), or alias ARN of
	// the Lambda function that you want to associate with this statement.
	// Lambda adds this statement to the function's access policy.
	FunctionName *StringExpr `json:"FunctionName,omitempty"`

	// The entity for which you are granting permission to invoke the Lambda
	// function. This entity can be any valid AWS service principal, such as
	// s3.amazonaws.com or sns.amazonaws.com, or, if you are granting
	// cross-account permission, an AWS account ID. For example, you might
	// want to allow a custom application in another AWS account to push
	// events to Lambda by invoking your function.
	Principal *StringExpr `json:"Principal,omitempty"`

	// The AWS account ID (without hyphens) of the source owner. For example,
	// if you specify an S3 bucket in the SourceArn property, this value is
	// the bucket owner's account ID. You can use this property to ensure
	// that all source principals are owned by a specific account.
	SourceAccount *StringExpr `json:"SourceAccount,omitempty"`

	// The ARN of a resource that is invoking your function. When granting
	// Amazon Simple Storage Service (Amazon S3) permission to invoke your
	// function, specify this property with the bucket ARN as its value. This
	// ensures that events generated only from the specified bucket, not just
	// any bucket from any AWS account that creates a mapping to your
	// function, can invoke the function.
	SourceArn *StringExpr `json:"SourceArn,omitempty"`
}

// CfnResourceType returns AWS::Lambda::Permission to implement the ResourceProperties interface
func (s LambdaPermission) CfnResourceType() string {
	return "AWS::Lambda::Permission"
}

// LambdaVersion represents AWS::Lambda::Version
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html
type LambdaVersion struct {
	// The SHA-256 hash of the deployment package that you want to publish.
	// This value must match the SHA-256 hash of the $LATEST version of the
	// function. Specify this property to validate that you are publishing
	// the correct package.
	CodeSha256 *StringExpr `json:"CodeSha256,omitempty"`

	// A description of the version you are publishing. If you don't specify
	// a value, Lambda copies the description from the $LATEST version of the
	// function.
	Description *StringExpr `json:"Description,omitempty"`

	// The Lambda function for which you want to publish a version. You can
	// specify the function's name or its Amazon Resource Name (ARN).
	FunctionName *StringExpr `json:"FunctionName,omitempty"`
}

// CfnResourceType returns AWS::Lambda::Version to implement the ResourceProperties interface
func (s LambdaVersion) CfnResourceType() string {
	return "AWS::Lambda::Version"
}

// LogsDestination represents AWS::Logs::Destination
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html
type LogsDestination struct {
	// The name of the CloudWatch Logs destination.
	DestinationName *StringExpr `json:"DestinationName,omitempty"`

	// An AWS Identity and Access Management (IAM) policy that specifies who
	// can write to your destination.
	DestinationPolicy *StringExpr `json:"DestinationPolicy,omitempty"`

	// The Amazon Resource Name (ARN) of an IAM role that permits CloudWatch
	// Logs to send data to the specified AWS resource (TargetArn).
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// The ARN of the AWS resource that receives log events. Currently, you
	// can specify only an Kinesis stream.
	TargetArn *StringExpr `json:"TargetArn,omitempty"`
}

// CfnResourceType returns AWS::Logs::Destination to implement the ResourceProperties interface
func (s LogsDestination) CfnResourceType() string {
	return "AWS::Logs::Destination"
}

// LogsLogGroup represents AWS::Logs::LogGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
type LogsLogGroup struct {
	// A name for the log group. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// log group. For more information, see Name Type.
	LogGroupName *StringExpr `json:"LogGroupName,omitempty"`

	// The number of days log events are kept in CloudWatch Logs. When a log
	// event expires, CloudWatch Logs automatically deletes it. For valid
	// values, see PutRetentionPolicy in the Amazon CloudWatch Logs API
	// Reference.
	RetentionInDays *IntegerExpr `json:"RetentionInDays,omitempty"`
}

// CfnResourceType returns AWS::Logs::LogGroup to implement the ResourceProperties interface
func (s LogsLogGroup) CfnResourceType() string {
	return "AWS::Logs::LogGroup"
}

// LogsLogStream represents AWS::Logs::LogStream
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-logstream.html
type LogsLogStream struct {
	// The name of the log group where the log stream is created.
	LogGroupName *StringExpr `json:"LogGroupName,omitempty"`

	// The name of the log stream to create. The name must be unique within
	// the log group.
	LogStreamName *StringExpr `json:"LogStreamName,omitempty"`
}

// CfnResourceType returns AWS::Logs::LogStream to implement the ResourceProperties interface
func (s LogsLogStream) CfnResourceType() string {
	return "AWS::Logs::LogStream"
}

// LogsMetricFilter represents AWS::Logs::MetricFilter
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html
type LogsMetricFilter struct {
	// Describes the pattern that CloudWatch Logs follows to interpret each
	// entry in a log. A log entry might contain fields such as timestamps,
	// IP addresses, error codes, bytes transferred, and so on. You use the
	// pattern to specify those fields and to specify what to look for in the
	// log file. For example, if you're interested in error codes that begin
	// with 1234, your filter pattern might be [timestamps, ip_addresses,
	// error_codes = 1234*, size, ...]. For more information, see Filter and
	// Pattern Syntax in the Amazon CloudWatch User Guide.
	FilterPattern *StringExpr `json:"FilterPattern,omitempty"`

	// The name of an existing log group that you want to associate with this
	// metric filter.
	LogGroupName *StringExpr `json:"LogGroupName,omitempty"`

	// Describes how to transform data from a log into a CloudWatch metric.
	MetricTransformations *CloudWatchLogsMetricFilterMetricTransformationPropertyList `json:"MetricTransformations,omitempty"`
}

// CfnResourceType returns AWS::Logs::MetricFilter to implement the ResourceProperties interface
func (s LogsMetricFilter) CfnResourceType() string {
	return "AWS::Logs::MetricFilter"
}

// LogsSubscriptionFilter represents AWS::Logs::SubscriptionFilter
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html
type LogsSubscriptionFilter struct {
	// The Amazon Resource Name (ARN) of the Kinesis stream, Kinesis Firehose
	// delivery stream, or Lambda function that you want to use as the
	// subscription feed destination.
	DestinationArn *StringExpr `json:"DestinationArn,omitempty"`

	// The filtering expressions that restrict what gets delivered to the
	// destination AWS resource. For more information about the filter
	// pattern syntax, see Filter and Pattern Syntax in the Amazon CloudWatch
	// User Guide.
	FilterPattern *StringExpr `json:"FilterPattern,omitempty"`

	// The log group to associate with the subscription filter. All log
	// events that are uploaded to this log group are filtered and delivered
	// to the specified AWS resource if the filter pattern matches the log
	// events.
	LogGroupName *StringExpr `json:"LogGroupName,omitempty"`

	// An IAM role that grants CloudWatch Logs permission to put data into
	// the specified Kinesis stream. For Lambda and CloudWatch Logs
	// destinations, don't specify this property because CloudWatch Logs gets
	// the necessary permissions from the destination resource.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`
}

// CfnResourceType returns AWS::Logs::SubscriptionFilter to implement the ResourceProperties interface
func (s LogsSubscriptionFilter) CfnResourceType() string {
	return "AWS::Logs::SubscriptionFilter"
}

// OpsWorksApp represents AWS::OpsWorks::App
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html
type OpsWorksApp struct {
	// The information required to retrieve an app from a repository.
	AppSource *OpsWorksSource `json:"AppSource,omitempty"`

	// One or more user-defined key-value pairs to be added to the app
	// attributes bag.
	Attributes interface{} `json:"Attributes,omitempty"`

	// A description of the app.
	Description *StringExpr `json:"Description,omitempty"`

	// A list of databases to associate with the AWS OpsWorks app.
	DataSources *OpsWorksAppDataSourceList `json:"DataSources,omitempty"`

	// The app virtual host settings, with multiple domains separated by
	// commas. For example, 'www.example.com, example.com'.
	Domains interface{} `json:"Domains,omitempty"`

	// Whether to enable SSL for this app.
	EnableSsl *BoolExpr `json:"EnableSsl,omitempty"`

	// The environment variables to associate with the AWS OpsWorks app.
	Environment *OpsWorksAppEnvironmentList `json:"Environment,omitempty"`

	// The name of the AWS OpsWorks app.
	Name *StringExpr `json:"Name,omitempty"`

	// The app short name, which is used internally by AWS OpsWorks and by
	// Chef recipes.
	Shortname *StringExpr `json:"Shortname,omitempty"`

	// The SSL configuration
	SslConfiguration *OpsWorksSslConfiguration `json:"SslConfiguration,omitempty"`

	// The ID of the AWS OpsWorks stack to associate this app with.
	StackId *StringExpr `json:"StackId,omitempty"`

	// The app type. Each supported type is associated with a particular
	// layer. For more information, see CreateApp in the AWS OpsWorks Stacks
	// API Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// CfnResourceType returns AWS::OpsWorks::App to implement the ResourceProperties interface
func (s OpsWorksApp) CfnResourceType() string {
	return "AWS::OpsWorks::App"
}

// OpsWorksElasticLoadBalancerAttachment represents AWS::OpsWorks::ElasticLoadBalancerAttachment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-elbattachment.html
type OpsWorksElasticLoadBalancerAttachment struct {
	// Elastic Load Balancing load balancer name.
	ElasticLoadBalancerName *StringExpr `json:"ElasticLoadBalancerName,omitempty"`

	// The AWS OpsWorks layer ID that the Elastic Load Balancing load
	// balancer will be attached to.
	LayerId *StringExpr `json:"LayerId,omitempty"`
}

// CfnResourceType returns AWS::OpsWorks::ElasticLoadBalancerAttachment to implement the ResourceProperties interface
func (s OpsWorksElasticLoadBalancerAttachment) CfnResourceType() string {
	return "AWS::OpsWorks::ElasticLoadBalancerAttachment"
}

// OpsWorksInstance represents AWS::OpsWorks::Instance
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html
type OpsWorksInstance struct {
	// The version of the AWS OpsWorks agent that AWS OpsWorks installs on
	// each instance. AWS OpsWorks sends commands to the agent to performs
	// tasks on your instances, such as starting Chef runs. For valid values,
	// see the AgentVersion parameter for the CreateInstance action in the
	// AWS OpsWorks Stacks API Reference.
	AgentVersion *StringExpr `json:"AgentVersion,omitempty"`

	// The ID of the custom Amazon Machine Image (AMI) to be used to create
	// the instance. For more information about custom AMIs, see Using Custom
	// AMIs in the AWS OpsWorks User Guide.
	AmiId *StringExpr `json:"AmiId,omitempty"`

	// The instance architecture.
	Architecture *StringExpr `json:"Architecture,omitempty"`

	// For scaling instances, the type of scaling. If you specify load-based
	// scaling, do not specify a time-based scaling configuration. For valid
	// values, see CreateInstance in the AWS OpsWorks Stacks API Reference.
	AutoScalingType *StringExpr `json:"AutoScalingType,omitempty"`

	// The instance Availability Zone.
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`

	// A list of block devices that are mapped to the AWS OpsWorks instance.
	// For more information, see the BlockDeviceMappings parameter for the
	// CreateInstance action in the AWS OpsWorks Stacks API Reference.
	BlockDeviceMappings *OpsWorksInstanceBlockDeviceMappingList `json:"BlockDeviceMappings,omitempty"`

	// Whether the instance is optimized for Amazon Elastic Block Store
	// (Amazon EBS) I/O. If you specify an Amazon EBS-optimized instance
	// type, AWS OpsWorks enables EBS optimization by default. For more
	// information, see Amazon EBS–Optimized Instances in the Amazon EC2
	// User Guide for Linux Instances.
	EbsOptimized *BoolExpr `json:"EbsOptimized,omitempty"`

	// A list of Elastic IP addresses to associate with the instance.
	ElasticIps interface{} `json:"ElasticIps,omitempty"`

	// The name of the instance host.
	Hostname *StringExpr `json:"Hostname,omitempty"`

	// Whether to install operating system and package updates when the
	// instance boots.
	InstallUpdatesOnBoot *BoolExpr `json:"InstallUpdatesOnBoot,omitempty"`

	// The instance type, which must be supported by AWS OpsWorks. For more
	// information, see CreateInstance in the AWS OpsWorks Stacks API
	// Reference.
	InstanceType *StringExpr `json:"InstanceType,omitempty"`

	// The IDs of the AWS OpsWorks layers to associate with this instance.
	LayerIds interface{} `json:"LayerIds,omitempty"`

	// The instance operating system. For more information, see
	// CreateInstance in the AWS OpsWorks Stacks API Reference.
	Os *StringExpr `json:"Os,omitempty"`

	// The root device type of the instance.
	RootDeviceType *StringExpr `json:"RootDeviceType,omitempty"`

	// The SSH key name of the instance.
	SshKeyName *StringExpr `json:"SshKeyName,omitempty"`

	// The ID of the AWS OpsWorks stack that this instance will be associated
	// with.
	StackId *StringExpr `json:"StackId,omitempty"`

	// The ID of the instance's subnet. If the stack is running in a VPC, you
	// can use this parameter to override the stack's default subnet ID value
	// and direct AWS OpsWorks to launch the instance in a different subnet.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`

	// The tenancy of the instance. For more information, see the Tenancy
	// parameter for the CreateInstance action in the AWS OpsWorks Stacks API
	// Reference.
	Tenancy *StringExpr `json:"Tenancy,omitempty"`

	// The time-based scaling configuration for the instance.
	TimeBasedAutoScaling *OpsWorksTimeBasedAutoScaling `json:"TimeBasedAutoScaling,omitempty"`

	// The instance's virtualization type, paravirtual or hvm.
	VirtualizationType *StringExpr `json:"VirtualizationType,omitempty"`

	// A list of AWS OpsWorks volume IDs to associate with the instance. For
	// more information, see AWS::OpsWorks::Volume.
	Volumes interface{} `json:"Volumes,omitempty"`
}

// CfnResourceType returns AWS::OpsWorks::Instance to implement the ResourceProperties interface
func (s OpsWorksInstance) CfnResourceType() string {
	return "AWS::OpsWorks::Instance"
}

// OpsWorksLayer represents AWS::OpsWorks::Layer
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html
type OpsWorksLayer struct {
	// One or more user-defined key-value pairs to be added to the stack
	// attributes bag.
	Attributes interface{} `json:"Attributes,omitempty"`

	// Whether to automatically assign an Elastic IP address to Amazon EC2
	// instances in this layer.
	AutoAssignElasticIps *BoolExpr `json:"AutoAssignElasticIps,omitempty"`

	// For AWS OpsWorks stacks that are running in a VPC, whether to
	// automatically assign a public IP address to Amazon EC2 instances in
	// this layer.
	AutoAssignPublicIps *BoolExpr `json:"AutoAssignPublicIps,omitempty"`

	// The Amazon Resource Name (ARN) of an IAM instance profile that is to
	// be used for the Amazon EC2 instances in this layer.
	CustomInstanceProfileArn *StringExpr `json:"CustomInstanceProfileArn,omitempty"`

	// A custom stack configuration and deployment attributes that AWS
	// OpsWorks installs on the layer's instances. For more information, see
	// the CustomJson parameter for the CreateLayer action in the AWS
	// OpsWorks Stacks API Reference.
	CustomJson interface{} `json:"CustomJson,omitempty"`

	// Custom event recipes for this layer.
	CustomRecipes *OpsWorksRecipes `json:"CustomRecipes,omitempty"`

	// Custom security group IDs for this layer.
	CustomSecurityGroupIds interface{} `json:"CustomSecurityGroupIds,omitempty"`

	// Whether to automatically heal Amazon EC2 instances that have become
	// disconnected or timed out.
	EnableAutoHealing *BoolExpr `json:"EnableAutoHealing,omitempty"`

	// Whether to install operating system and package updates when the
	// instance boots.
	InstallUpdatesOnBoot *BoolExpr `json:"InstallUpdatesOnBoot,omitempty"`

	// The lifecycle events for the AWS OpsWorks layer.
	LifecycleEventConfiguration *OpsWorksLayerLifeCycleConfiguration `json:"LifecycleEventConfiguration,omitempty"`

	// The load-based scaling configuration for the AWS OpsWorks layer.
	LoadBasedAutoScaling *OpsWorksLoadBasedAutoScaling `json:"LoadBasedAutoScaling,omitempty"`

	// The AWS OpsWorks layer name.
	Name *StringExpr `json:"Name,omitempty"`

	// The packages for this layer.
	Packages interface{} `json:"Packages,omitempty"`

	// The layer short name, which is used internally by AWS OpsWorks and by
	// Chef recipes. The short name is also used as the name for the
	// directory where your app files are installed.
	Shortname *StringExpr `json:"Shortname,omitempty"`

	// The ID of the AWS OpsWorks stack that this layer will be associated
	// with.
	StackId *StringExpr `json:"StackId,omitempty"`

	// Specifies an arbitrary set of tags (key–value pairs) to associate
	// with this AWS OpsWorks layer. Use tags to manage your resources.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The layer type. A stack cannot have more than one layer of the same
	// type, except for the custom type. You can have any number of custom
	// types. For more information, see CreateLayer in the AWS OpsWorks
	// Stacks API Reference.
	Type *StringExpr `json:"Type,omitempty"`

	// Describes the Amazon EBS volumes for this layer.
	VolumeConfigurations *OpsWorksVolumeConfigurationList `json:"VolumeConfigurations,omitempty"`
}

// CfnResourceType returns AWS::OpsWorks::Layer to implement the ResourceProperties interface
func (s OpsWorksLayer) CfnResourceType() string {
	return "AWS::OpsWorks::Layer"
}

// OpsWorksStack represents AWS::OpsWorks::Stack
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html
type OpsWorksStack struct {
	// The AWS OpsWorks agent version that you want to use. The agent
	// communicates with the service and handles tasks such as initiating
	// Chef runs in response to lifecycle events. For valid values, see the
	// AgentVersion parameter for the CreateStack action in the AWS OpsWorks
	// Stacks API Reference.
	AgentVersion *StringExpr `json:"AgentVersion,omitempty"`

	// One or more user-defined key-value pairs to be added to the stack
	// attributes bag.
	Attributes interface{} `json:"Attributes,omitempty"`

	// Describes the Chef configuration. For more information, see the
	// CreateStack ChefConfiguration parameter in the AWS OpsWorks Stacks API
	// Reference.
	ChefConfiguration *OpsWorksChefConfiguration `json:"ChefConfiguration,omitempty"`

	// If you're cloning an AWS OpsWorks stack, a list of AWS OpsWorks
	// application stack IDs from the source stack to include in the cloned
	// stack.
	CloneAppIds interface{} `json:"CloneAppIds,omitempty"`

	// If you're cloning an AWS OpsWorks stack, indicates whether to clone
	// the source stack's permissions.
	ClonePermissions *BoolExpr `json:"ClonePermissions,omitempty"`

	// Describes the configuration manager. When you create a stack, you use
	// the configuration manager to specify the Chef version. For supported
	// Chef versions, see the CreateStack ConfigurationManager parameter in
	// the AWS OpsWorks Stacks API Reference.
	ConfigurationManager *OpsWorksStackConfigurationManager `json:"ConfigurationManager,omitempty"`

	// Contains the information required to retrieve a cookbook from a
	// repository.
	CustomCookbooksSource *OpsWorksSource `json:"CustomCookbooksSource,omitempty"`

	// A user-defined custom JSON object. The custom JSON is used to override
	// the corresponding default stack configuration JSON values. For more
	// information, see CreateStack in the AWS OpsWorks Stacks API Reference.
	CustomJson interface{} `json:"CustomJson,omitempty"`

	// The stack's default Availability Zone, which must be in the specified
	// region.
	DefaultAvailabilityZone *StringExpr `json:"DefaultAvailabilityZone,omitempty"`

	// The Amazon Resource Name (ARN) of an IAM instance profile that is the
	// default profile for all of the stack's Amazon EC2 instances.
	DefaultInstanceProfileArn *StringExpr `json:"DefaultInstanceProfileArn,omitempty"`

	// The stack's default operating system. For more information, see
	// CreateStack in the AWS OpsWorks Stacks API Reference.
	DefaultOs *StringExpr `json:"DefaultOs,omitempty"`

	// The default root device type. This value is used by default for all
	// instances in the stack, but you can override it when you create an
	// instance. For more information, see CreateStack in the AWS OpsWorks
	// Stacks API Reference.
	DefaultRootDeviceType *StringExpr `json:"DefaultRootDeviceType,omitempty"`

	// A default SSH key for the stack instances. You can override this value
	// when you create or update an instance.
	DefaultSshKeyName *StringExpr `json:"DefaultSshKeyName,omitempty"`

	// The stack's default subnet ID. All instances are launched into this
	// subnet unless you specify another subnet ID when you create the
	// instance.
	DefaultSubnetId *StringExpr `json:"DefaultSubnetId,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon Elastic Container Service
	// (Amazon ECS) cluster to register with the AWS OpsWorks stack.
	EcsClusterArn *StringExpr `json:"EcsClusterArn,omitempty"`

	// A list of Elastic IP addresses to register with the AWS OpsWorks
	// stack.
	ElasticIps *OpsWorksStackElasticIpList `json:"ElasticIps,omitempty"`

	// The stack's host name theme, with spaces replaced by underscores. The
	// theme is used to generate host names for the stack's instances. For
	// more information, see CreateStack in the AWS OpsWorks Stacks API
	// Reference.
	HostnameTheme *StringExpr `json:"HostnameTheme,omitempty"`

	// The name of the AWS OpsWorks stack.
	Name *StringExpr `json:"Name,omitempty"`

	// The Amazon Relational Database Service (Amazon RDS) DB instance to
	// register with the AWS OpsWorks stack.
	RdsDbInstances *OpsWorksStackRdsDbInstanceList `json:"RdsDbInstances,omitempty"`

	// The AWS Identity and Access Management (IAM) role that AWS OpsWorks
	// uses to work with AWS resources on your behalf. You must specify an
	// Amazon Resource Name (ARN) for an existing IAM role.
	ServiceRoleArn *StringExpr `json:"ServiceRoleArn,omitempty"`

	// If you're cloning an AWS OpsWorks stack, the stack ID of the source
	// AWS OpsWorks stack to clone.
	SourceStackId *StringExpr `json:"SourceStackId,omitempty"`

	// Specifies an arbitrary set of tags (key–value pairs) to associate
	// with this AWS OpsWorks stack. Use tags to manage your resources.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// Whether the stack uses custom cookbooks.
	UseCustomCookbooks *BoolExpr `json:"UseCustomCookbooks,omitempty"`

	// Whether to associate the AWS OpsWorks built-in security groups with
	// the stack's layers.
	UseOpsworksSecurityGroups *BoolExpr `json:"UseOpsworksSecurityGroups,omitempty"`

	// The ID of the VPC that the stack is to be launched into, which must be
	// in the specified region. All instances are launched into this VPC. If
	// you specify this property, you must specify the DefaultSubnetId
	// property.
	VpcId *StringExpr `json:"VpcId,omitempty"`
}

// CfnResourceType returns AWS::OpsWorks::Stack to implement the ResourceProperties interface
func (s OpsWorksStack) CfnResourceType() string {
	return "AWS::OpsWorks::Stack"
}

// OpsWorksUserProfile represents AWS::OpsWorks::UserProfile
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-userprofile.html
type OpsWorksUserProfile struct {
	// Indicates whether users can use the AWS OpsWorks My Settings page to
	// specify their own SSH public key. For more information, see Setting an
	// IAM User's Public SSH Key in the AWS OpsWorks User Guide.
	AllowSelfManagement *BoolExpr `json:"AllowSelfManagement,omitempty"`

	// The Amazon Resource Name (ARN) of the AWS Identity and Access
	// Management (IAM) user to associate with this configuration.
	IamUserArn *StringExpr `json:"IamUserArn,omitempty"`

	// The public SSH key that is associated with the IAM user. To access
	// instances, the IAM user must have or be given the corresponding
	// private key.
	SshPublicKey *StringExpr `json:"SshPublicKey,omitempty"`

	// The user's SSH user name.
	SshUsername *StringExpr `json:"SshUsername,omitempty"`
}

// CfnResourceType returns AWS::OpsWorks::UserProfile to implement the ResourceProperties interface
func (s OpsWorksUserProfile) CfnResourceType() string {
	return "AWS::OpsWorks::UserProfile"
}

// OpsWorksVolume represents AWS::OpsWorks::Volume
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-volume.html
type OpsWorksVolume struct {
	// The ID of the Amazon EBS volume to register with the AWS OpsWorks
	// stack.
	Ec2VolumeId *StringExpr `json:"Ec2VolumeId,omitempty"`

	// The mount point for the Amazon EBS volume, such as /mnt/disk1.
	MountPoint *StringExpr `json:"MountPoint,omitempty"`

	// A name for the Amazon EBS volume.
	Name *StringExpr `json:"Name,omitempty"`

	// The ID of the AWS OpsWorks stack that AWS OpsWorks registers the
	// volume to.
	StackId *StringExpr `json:"StackId,omitempty"`
}

// CfnResourceType returns AWS::OpsWorks::Volume to implement the ResourceProperties interface
func (s OpsWorksVolume) CfnResourceType() string {
	return "AWS::OpsWorks::Volume"
}

// RDSDBCluster represents AWS::RDS::DBCluster
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html
type RDSDBCluster struct {
	// A list of Availability Zones (AZs) in which DB instances in the
	// cluster can be created.
	AvailabilityZones *StringListExpr `json:"AvailabilityZones,omitempty"`

	// The number of days for which automatic backups are retained. For more
	// information, see CreateDBCluster in the Amazon Relational Database
	// Service API Reference.
	BackupRetentionPeriod *IntegerExpr `json:"BackupRetentionPeriod,omitempty"`

	// The name of your database. If you don't provide a name, Amazon
	// Relational Database Service (Amazon RDS) won't create a database in
	// this DB cluster. For naming constraints, see Naming Constraints in
	// Amazon RDS in the Amazon Relational Database Service User Guide.
	DatabaseName *StringExpr `json:"DatabaseName,omitempty"`

	// The name of the DB cluster parameter group to associate with this DB
	// cluster. For the default value, see the DBClusterParameterGroupName
	// parameter of the CreateDBCluster action in the Amazon Relational
	// Database Service API Reference.
	DBClusterParameterGroupName *StringExpr `json:"DBClusterParameterGroupName,omitempty"`

	// A DB subnet group that you want to associate with this DB cluster.
	DBSubnetGroupName *StringExpr `json:"DBSubnetGroupName,omitempty"`

	// The name of the database engine that you want to use for this DB
	// cluster.
	Engine *StringExpr `json:"Engine,omitempty"`

	// The version number of the database engine that you want to use.
	EngineVersion *StringExpr `json:"EngineVersion,omitempty"`

	// The Amazon Resource Name (ARN) of the AWS Key Management Service
	// master key that is used to encrypt the database instances in the DB
	// cluster, such as
	// arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef.
	// If you enable the StorageEncrypted property but don't specify this
	// property, the default master key is used. If you specify this
	// property, you must set the StorageEncrypted property to true.
	KmsKeyId *StringExpr `json:"KmsKeyId,omitempty"`

	// The master user name for the DB instance.
	MasterUsername *StringExpr `json:"MasterUsername,omitempty"`

	// The password for the master database user.
	MasterUserPassword *StringExpr `json:"MasterUserPassword,omitempty"`

	// The port number on which the DB instances in the cluster can accept
	// connections.
	Port *IntegerExpr `json:"Port,omitempty"`

	// if automated backups are enabled (see the BackupRetentionPeriod
	// property), the daily time range in UTC during which you want to create
	// automated backups.
	PreferredBackupWindow *StringExpr `json:"PreferredBackupWindow,omitempty"`

	// The weekly time range (in UTC) during which system maintenance can
	// occur.
	PreferredMaintenanceWindow *StringExpr `json:"PreferredMaintenanceWindow,omitempty"`

	// The Amazon Resource Name (ARN) of the source Amazon RDS MySQL DB
	// instance or DB cluster, if this DB cluster is created as a Read
	// Replica.
	ReplicationSourceIdentifier *StringExpr `json:"ReplicationSourceIdentifier,omitempty"`

	// The identifier for the DB cluster snapshot from which you want to
	// restore.
	SnapshotIdentifier *StringExpr `json:"SnapshotIdentifier,omitempty"`

	// Indicates whether the DB instances in the cluster are encrypted.
	StorageEncrypted *BoolExpr `json:"StorageEncrypted,omitempty"`

	// The tags that you want to attach to this DB cluster.
	Tags *ResourceTagList `json:"Tags,omitempty"`

	// A list of VPC security groups to associate with this DB cluster.
	VpcSecurityGroupIds interface{} `json:"VpcSecurityGroupIds,omitempty"`
}

// CfnResourceType returns AWS::RDS::DBCluster to implement the ResourceProperties interface
func (s RDSDBCluster) CfnResourceType() string {
	return "AWS::RDS::DBCluster"
}

// RDSDBClusterParameterGroup represents AWS::RDS::DBClusterParameterGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html
type RDSDBClusterParameterGroup struct {
	// A friendly description for this DB cluster parameter group.
	Description interface{} `json:"Description,omitempty"`

	// The database family of this DB cluster parameter group, such as
	// aurora5.6.
	Family interface{} `json:"Family,omitempty"`

	// The parameters to set for this DB cluster parameter group. For a list
	// of parameter keys, see Appendix: DB Cluster and DB Instance Parameters
	// in the Amazon Relational Database Service User Guide.
	Parameters interface{} `json:"Parameters,omitempty"`

	// The tags that you want to attach to this parameter group.
	Tags *ResourceTagList `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::RDS::DBClusterParameterGroup to implement the ResourceProperties interface
func (s RDSDBClusterParameterGroup) CfnResourceType() string {
	return "AWS::RDS::DBClusterParameterGroup"
}

// RDSDBInstance represents AWS::RDS::DBInstance
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html
type RDSDBInstance struct {
	// The allocated storage size, specified in gigabytes (GB).
	AllocatedStorage *StringExpr `json:"AllocatedStorage,omitempty"`

	// If you update the EngineVersion property to a version that's different
	// from the DB instance's current major version, set this property to
	// true. For more information, see ModifyDBInstance in the Amazon
	// Relational Database Service API Reference.
	AllowMajorVersionUpgrade *BoolExpr `json:"AllowMajorVersionUpgrade,omitempty"`

	// Indicates that minor engine upgrades are applied automatically to the
	// DB instance during the maintenance window. The default value is true.
	AutoMinorVersionUpgrade *BoolExpr `json:"AutoMinorVersionUpgrade,omitempty"`

	// The name of the Availability Zone where the DB instance is located.
	// You can't set the AvailabilityZone parameter if the MultiAZ parameter
	// is set to true.
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`

	// The number of days during which automatic DB snapshots are retained.
	BackupRetentionPeriod *StringExpr `json:"BackupRetentionPeriod,omitempty"`

	// For supported engines, specifies the character set to associate with
	// the DB instance. For more information, see Appendix: Oracle Character
	// Sets Supported in Amazon RDS in the Amazon Relational Database Service
	// User Guide.
	CharacterSetName *StringExpr `json:"CharacterSetName,omitempty"`

	// Indicates whether to copy all of the user-defined tags from the DB
	// instance to snapshots of the DB instance. By default, Amazon RDS
	// doesn't copy tags to snapshots. Amazon RDS doesn't copy tags with the
	// aws:: prefix unless it's the DB instance's final snapshot (the
	// snapshot when you delete the DB instance).
	CopyTagsToSnapshot *BoolExpr `json:"CopyTagsToSnapshot,omitempty"`

	// The name of an existing DB cluster that this instance is associated
	// with. If you specify this property, specify aurora for the Engine
	// property and don't specify any of the following properties:
	// AllocatedStorage, BackupRetentionPeriod, CharacterSetName, DBName,
	// DBSecurityGroups, MasterUsername, MasterUserPassword, OptionGroupName,
	// PreferredBackupWindow, PreferredMaintenanceWindow, Port,
	// SourceDBInstanceIdentifier, StorageType, or VPCSecurityGroups.
	DBClusterIdentifier *StringExpr `json:"DBClusterIdentifier,omitempty"`

	// The name of the compute and memory capacity classes of the DB
	// instance.
	DBInstanceClass *StringExpr `json:"DBInstanceClass,omitempty"`

	// A name for the DB instance. If you specify a name, AWS CloudFormation
	// converts it to lowercase. If you don't specify a name, AWS
	// CloudFormation generates a unique physical ID and uses that ID for the
	// DB instance. For more information, see Name Type.
	DBInstanceIdentifier *StringExpr `json:"DBInstanceIdentifier,omitempty"`

	// The name of the DB instance that was provided at the time of creation,
	// if one was specified. This same name is returned for the life of the
	// DB instance.
	DBName *StringExpr `json:"DBName,omitempty"`

	// The name of an existing DB parameter group or a reference to an
	// AWS::RDS::DBParameterGroup resource created in the template.
	DBParameterGroupName *StringExpr `json:"DBParameterGroupName,omitempty"`

	// A list of the DB security groups to assign to the DB instance. The
	// list can include both the name of existing DB security groups or
	// references to AWS::RDS::DBSecurityGroup resources created in the
	// template.
	DBSecurityGroups interface{} `json:"DBSecurityGroups,omitempty"`

	// The name or Amazon Resource Name (ARN) of the DB snapshot that's used
	// to restore the DB instance. If you're restoring from a shared manual
	// DB snapshot, you must specify the ARN of the snapshot.
	DBSnapshotIdentifier *StringExpr `json:"DBSnapshotIdentifier,omitempty"`

	// A DB subnet group to associate with the DB instance. If you update
	// this value, the new subnet group must be a subnet group in a new VPC.
	DBSubnetGroupName *StringExpr `json:"DBSubnetGroupName,omitempty"`

	// For an Amazon RDS DB instance that's running Microsoft SQL Server, the
	// Active Directory directory ID to create the instance in. Amazon RDS
	// uses Windows Authentication to authenticate users that connect to the
	// DB instance. For more information, see Using Windows Authentication
	// with an Amazon RDS DB Instance Running Microsoft SQL Server in the
	// Amazon Relational Database Service User Guide.
	Domain *StringExpr `json:"Domain,omitempty"`

	// The name of an IAM role that Amazon RDS uses when calling the AWS
	// Directory Service APIs.
	DomainIAMRoleName *StringExpr `json:"DomainIAMRoleName,omitempty"`

	// The database engine that the DB instance uses. This property is
	// optional when you specify the DBSnapshotIdentifier property to create
	// DB instances.
	Engine *StringExpr `json:"Engine,omitempty"`

	// The version number of the database engine that the DB instance uses.
	EngineVersion *StringExpr `json:"EngineVersion,omitempty"`

	// The number of I/O operations per second (IOPS) that the database
	// provisions. The value must be equal to or greater than 1000.
	Iops *IntegerExpr `json:"Iops,omitempty"`

	// The ARN of the AWS Key Management Service (AWS KMS) master key that's
	// used to encrypt the DB instance, such as
	// arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef.
	// If you enable the StorageEncrypted property but don't specify this
	// property, AWS CloudFormation uses the default master key. If you
	// specify this property, you must set the StorageEncrypted property to
	// true.
	KmsKeyId *StringExpr `json:"KmsKeyId,omitempty"`

	// The license model of the DB instance.
	LicenseModel *StringExpr `json:"LicenseModel,omitempty"`

	// The master user name for the DB instance.
	MasterUsername *StringExpr `json:"MasterUsername,omitempty"`

	// The master password for the DB instance.
	MasterUserPassword *StringExpr `json:"MasterUserPassword,omitempty"`

	// The interval, in seconds, between points when Amazon RDS collects
	// enhanced monitoring metrics for the DB instance. To disable metrics
	// collection, specify 0.
	MonitoringInterval *IntegerExpr `json:"MonitoringInterval,omitempty"`

	// The ARN of the AWS Identity and Access Management (IAM) role that
	// permits Amazon RDS to send enhanced monitoring metrics to Amazon
	// CloudWatch, for example, arn:aws:iam::123456789012:role/emaccess. For
	// information on creating a monitoring role, see To create an IAM role
	// for Amazon RDS Enhanced Monitoring in the Amazon Relational Database
	// Service User Guide.
	MonitoringRoleArn *StringExpr `json:"MonitoringRoleArn,omitempty"`

	// Specifies if the database instance is a multiple Availability Zone
	// deployment. You can't set the AvailabilityZone parameter if the
	// MultiAZ parameter is set to true. Amazon Aurora storage is replicated
	// across all the Availability Zones and doesn't require the MultiAZ
	// option to be set.
	MultiAZ *BoolExpr `json:"MultiAZ,omitempty"`

	// The option group that this DB instance is associated with.
	OptionGroupName *StringExpr `json:"OptionGroupName,omitempty"`

	// The port for the instance.
	Port *StringExpr `json:"Port,omitempty"`

	// The daily time range during which automated backups are performed if
	// automated backups are enabled, as determined by the
	// BackupRetentionPeriod property. For valid values, see the
	// PreferredBackupWindow parameter for the CreateDBInstance action in the
	// Amazon Relational Database Service API Reference.
	PreferredBackupWindow *StringExpr `json:"PreferredBackupWindow,omitempty"`

	// The weekly time range (in UTC) during which system maintenance can
	// occur. For valid values, see the PreferredMaintenanceWindow parameter
	// for the CreateDBInstance action in the Amazon Relational Database
	// Service API Reference.
	PreferredMaintenanceWindow *StringExpr `json:"PreferredMaintenanceWindow,omitempty"`

	// Indicates whether the DB instance is an internet-facing instance. If
	// you specify true, AWS CloudFormation creates an instance with a
	// publicly resolvable DNS name, which resolves to a public IP address.
	// If you specify false, AWS CloudFormation creates an internal instance
	// with a DNS name that resolves to a private IP address.
	PubliclyAccessible *BoolExpr `json:"PubliclyAccessible,omitempty"`

	// If you want to create a read replica DB instance, specify the ID of
	// the source DB instance. Each DB instance can have a limited number of
	// read replicas. For more information, see Working with Read Replicas in
	// the Amazon Relational Database Service Developer Guide.
	SourceDBInstanceIdentifier *StringExpr `json:"SourceDBInstanceIdentifier,omitempty"`

	// The ID of the region that contains the source DB instance for the read
	// replica.
	SourceRegion interface{} `json:"SourceRegion,omitempty"`

	// Indicates whether the DB instance is encrypted.
	StorageEncrypted *BoolExpr `json:"StorageEncrypted,omitempty"`

	// The storage type associated with this DB instance.
	StorageType *StringExpr `json:"StorageType,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this DB instance.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// The time zone of the DB instance, which you can specify to match the
	// time zone of your applications. To see which engines support time
	// zones, see the Timezone parameter for the CreateDBInstance action in
	// the Amazon Relational Database Service API Reference.
	Timezone *StringExpr `json:"Timezone,omitempty"`

	// A list of the VPC security group IDs to assign to the DB instance. The
	// list can include both the physical IDs of existing VPC security groups
	// and references to AWS::EC2::SecurityGroup resources created in the
	// template.
	VPCSecurityGroups interface{} `json:"VPCSecurityGroups,omitempty"`
}

// CfnResourceType returns AWS::RDS::DBInstance to implement the ResourceProperties interface
func (s RDSDBInstance) CfnResourceType() string {
	return "AWS::RDS::DBInstance"
}

// RDSDBParameterGroup represents AWS::RDS::DBParameterGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbparametergroup.html
type RDSDBParameterGroup struct {
	// A friendly description of the RDS parameter group. For example, "My
	// Parameter Group".
	Description interface{} `json:"Description,omitempty"`

	// The database family of this RDS parameter group. For example,
	// "MySQL5.1".
	Family interface{} `json:"Family,omitempty"`

	// The parameters to set for this RDS parameter group.
	Parameters interface{} `json:"Parameters,omitempty"`

	// The tags that you want to attach to the RDS parameter group.
	Tags *ResourceTagList `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::RDS::DBParameterGroup to implement the ResourceProperties interface
func (s RDSDBParameterGroup) CfnResourceType() string {
	return "AWS::RDS::DBParameterGroup"
}

// RDSDBSecurityGroup represents AWS::RDS::DBSecurityGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group.html
type RDSDBSecurityGroup struct {
	// The Id of the VPC. Indicates which VPC this DB Security Group should
	// belong to.
	EC2VpcId *StringExpr `json:"EC2VpcId,omitempty"`

	// Network ingress authorization for an Amazon EC2 security group or an
	// IP address range.
	DBSecurityGroupIngress *RDSSecurityGroupRuleList `json:"DBSecurityGroupIngress,omitempty"`

	// Description of the security group.
	GroupDescription *StringExpr `json:"GroupDescription,omitempty"`

	// The tags that you want to attach to the Amazon RDS DB security group.
	Tags *ResourceTagList `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::RDS::DBSecurityGroup to implement the ResourceProperties interface
func (s RDSDBSecurityGroup) CfnResourceType() string {
	return "AWS::RDS::DBSecurityGroup"
}

// RDSDBSecurityGroupIngress represents AWS::RDS::DBSecurityGroupIngress
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html
type RDSDBSecurityGroupIngress struct {
	// The IP range to authorize.
	CIDRIP *StringExpr `json:"CIDRIP,omitempty"`

	// The name (ARN) of the AWS::RDS::DBSecurityGroup to which this ingress
	// will be added.
	DBSecurityGroupName *StringExpr `json:"DBSecurityGroupName,omitempty"`

	// The ID of the VPC or EC2 security group to authorize.
	EC2SecurityGroupId *StringExpr `json:"EC2SecurityGroupId,omitempty"`

	// The name of the EC2 security group to authorize.
	EC2SecurityGroupName *StringExpr `json:"EC2SecurityGroupName,omitempty"`

	// The AWS Account Number of the owner of the EC2 security group
	// specified in the EC2SecurityGroupName parameter. The AWS Access Key ID
	// is not an acceptable value.
	EC2SecurityGroupOwnerId *StringExpr `json:"EC2SecurityGroupOwnerId,omitempty"`
}

// CfnResourceType returns AWS::RDS::DBSecurityGroupIngress to implement the ResourceProperties interface
func (s RDSDBSecurityGroupIngress) CfnResourceType() string {
	return "AWS::RDS::DBSecurityGroupIngress"
}

// RDSDBSubnetGroup represents AWS::RDS::DBSubnetGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnet-group.html
type RDSDBSubnetGroup struct {
	// The description for the DB Subnet Group.
	DBSubnetGroupDescription *StringExpr `json:"DBSubnetGroupDescription,omitempty"`

	// The EC2 Subnet IDs for the DB Subnet Group.
	SubnetIds interface{} `json:"SubnetIds,omitempty"`

	// The tags that you want to attach to the RDS database subnet group.
	Tags *ResourceTagList `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::RDS::DBSubnetGroup to implement the ResourceProperties interface
func (s RDSDBSubnetGroup) CfnResourceType() string {
	return "AWS::RDS::DBSubnetGroup"
}

// RDSEventSubscription represents AWS::RDS::EventSubscription
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html
type RDSEventSubscription struct {
	// Indicates whether to activate the subscription. If you don't specify
	// this property, AWS CloudFormation activates the subscription.
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// A list of event categories that you want to subscribe to for a given
	// source type. If you don't specify this property, you are notified
	// about all event categories. For more information, see Using Amazon RDS
	// Event Notification in the Amazon Relational Database Service User
	// Guide.
	EventCategories interface{} `json:"EventCategories,omitempty"`

	// The Amazon Resource Name (ARN) of an Amazon SNS topic that you want to
	// send event notifications to.
	SnsTopicArn *StringExpr `json:"SnsTopicArn,omitempty"`

	// A list of identifiers for which Amazon RDS provides notification
	// events.
	SourceIds interface{} `json:"SourceIds,omitempty"`

	// The type of source for which Amazon RDS provides notification events.
	// For example, if you want to be notified of events generated by a
	// database instance, set this parameter to db-instance. If you don't
	// specify a value, notifications are provided for all source types. For
	// valid values, see the SourceType parameter for the
	// CreateEventSubscription action in the Amazon Relational Database
	// Service API Reference.
	SourceType *StringExpr `json:"SourceType,omitempty"`
}

// CfnResourceType returns AWS::RDS::EventSubscription to implement the ResourceProperties interface
func (s RDSEventSubscription) CfnResourceType() string {
	return "AWS::RDS::EventSubscription"
}

// RDSOptionGroup represents AWS::RDS::OptionGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html
type RDSOptionGroup struct {
	// The name of the database engine that this option group is associated
	// with.
	EngineName *StringExpr `json:"EngineName,omitempty"`

	// The major version number of the database engine that this option group
	// is associated with.
	MajorEngineVersion *StringExpr `json:"MajorEngineVersion,omitempty"`

	// A description of the option group.
	OptionGroupDescription *StringExpr `json:"OptionGroupDescription,omitempty"`

	// The configurations for this option group.
	OptionConfigurations *RelationalDatabaseServiceOptionGroupOptionConfigurationList `json:"OptionConfigurations,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this option group.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::RDS::OptionGroup to implement the ResourceProperties interface
func (s RDSOptionGroup) CfnResourceType() string {
	return "AWS::RDS::OptionGroup"
}

// RedshiftCluster represents AWS::Redshift::Cluster
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html
type RedshiftCluster struct {
	// When a new version of Amazon Redshift is released, tells whether
	// upgrades can be applied to the engine that is running on the cluster.
	// The upgrades are applied during the maintenance window. The default
	// value is true.
	AllowVersionUpgrade *BoolExpr `json:"AllowVersionUpgrade,omitempty"`

	// The number of days that automated snapshots are retained. The default
	// value is 1. To disable automated snapshots, set the value to 0.
	AutomatedSnapshotRetentionPeriod *IntegerExpr `json:"AutomatedSnapshotRetentionPeriod,omitempty"`

	// The Amazon Elastic Compute Cloud (Amazon EC2) Availability Zone in
	// which you want to provision your Amazon Redshift cluster. For example,
	// if you have several EC2 instances running in a specific Availability
	// Zone, you might want the cluster to be provisioned in the same zone to
	// decrease network latency.
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`

	// The name of the parameter group that you want to associate with this
	// cluster.
	ClusterParameterGroupName *StringExpr `json:"ClusterParameterGroupName,omitempty"`

	// A list of security groups that you want to associate with this
	// cluster. Applies to EC2-Classic.
	ClusterSecurityGroups interface{} `json:"ClusterSecurityGroups,omitempty"`

	// The name of a cluster subnet group that you want to associate with
	// this cluster.
	ClusterSubnetGroupName *StringExpr `json:"ClusterSubnetGroupName,omitempty"`

	// The type of cluster. Specify single-node or multi-node (default).
	ClusterType *StringExpr `json:"ClusterType,omitempty"`

	// The version of the Amazon Redshift engine that you want to deploy on
	// the cluster.
	ClusterVersion *StringExpr `json:"ClusterVersion,omitempty"`

	// The name of the first database that will be created when the cluster
	// is created.
	DBName *StringExpr `json:"DBName,omitempty"`

	// The Elastic IP (EIP) address for the cluster.
	ElasticIp *StringExpr `json:"ElasticIp,omitempty"`

	// Indicates whether the data in the cluster is encrypted at rest. The
	// default value is false.
	Encrypted *BoolExpr `json:"Encrypted,omitempty"`

	// Specifies the name of the hardware security module (HSM) client
	// certificate that the Amazon Redshift cluster uses to retrieve the data
	// encryption keys stored in an HSM.
	HsmClientCertificateIdentifier *StringExpr `json:"HsmClientCertificateIdentifier,omitempty"`

	// The name of the HSM configuration that contains the information that
	// the Amazon Redshift cluster can use to retrieve and store keys in an
	// HSM.
	HsmConfigurationIdentifier *StringExpr `json:"HsmConfigurationIdentifier,omitempty"`

	// A list of AWS Identity and Access Management (IAM) roles that the
	// cluster can use to access other AWS services. Supply the IAM roles by
	// their Amazon Resource Name (ARN). You can provide a maximum of 10 IAM
	// roles in a single request. A cluster can have a maximum of 10 IAM
	// roles associated with it at a time.
	IamRoles *StringListExpr `json:"IamRoles,omitempty"`

	// The ID of the AWS Key Management Service (AWS KMS) key that you want
	// to use to encrypt data in the cluster.
	KmsKeyId *StringExpr `json:"KmsKeyId,omitempty"`

	// Configures Amazon Redshift to create audit log files, containing
	// logging information such as queries and connection attempts, for this
	// cluster.
	LoggingProperties *RedshiftLoggingProperties `json:"LoggingProperties,omitempty"`

	// The user name that is associated with the master user account for this
	// cluster.
	MasterUsername *StringExpr `json:"MasterUsername,omitempty"`

	// The password associated with the master user account for this cluster.
	MasterUserPassword *StringExpr `json:"MasterUserPassword,omitempty"`

	// The node type that is provisioned for this cluster.
	NodeType *StringExpr `json:"NodeType,omitempty"`

	// The number of compute nodes in the cluster. If you specify multi-node
	// for the ClusterType parameter, you must specify a number greater than
	// 1.
	NumberOfNodes *IntegerExpr `json:"NumberOfNodes,omitempty"`

	// When you restore from a snapshot from another AWS account, the
	// 12-digit AWS account ID that contains that snapshot.
	OwnerAccount *StringExpr `json:"OwnerAccount,omitempty"`

	// The port number on which the cluster accepts incoming connections. The
	// default value is 5439.
	Port *IntegerExpr `json:"Port,omitempty"`

	// The weekly time range (in UTC) during which automated cluster
	// maintenance can occur. The format of the time range is
	// ddd:hh24:mi-ddd:hh24:mi.
	PreferredMaintenanceWindow *StringExpr `json:"PreferredMaintenanceWindow,omitempty"`

	// Indicates whether the cluster can be accessed from a public network.
	PubliclyAccessible *BoolExpr `json:"PubliclyAccessible,omitempty"`

	// The name of the cluster that the source snapshot was created from. For
	// more information about restoring from a snapshot, see the
	// RestoreFromClusterSnapshot action in the Amazon Redshift API
	// Reference.
	SnapshotClusterIdentifier interface{} `json:"SnapshotClusterIdentifier,omitempty"`

	// The name of the snapshot from which to create a new cluster.
	SnapshotIdentifier *StringExpr `json:"SnapshotIdentifier,omitempty"`

	// Specifies an arbitrary set of tags (key–value pairs) to associate
	// with this cluster. Use tags to manage your resources.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// A list of VPC security groups that are associated with this cluster.
	VpcSecurityGroupIds interface{} `json:"VpcSecurityGroupIds,omitempty"`
}

// CfnResourceType returns AWS::Redshift::Cluster to implement the ResourceProperties interface
func (s RedshiftCluster) CfnResourceType() string {
	return "AWS::Redshift::Cluster"
}

// RedshiftClusterParameterGroup represents AWS::Redshift::ClusterParameterGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html
type RedshiftClusterParameterGroup struct {
	// A description of the parameter group.
	Description *StringExpr `json:"Description,omitempty"`

	// The Amazon Redshift engine version that applies to this cluster
	// parameter group. The cluster engine version determines the set of
	// parameters that you can specify in the Parameters property.
	ParameterGroupFamily *StringExpr `json:"ParameterGroupFamily,omitempty"`

	// A list of parameter names and values that are allowed by the Amazon
	// Redshift engine version that you specified in the ParameterGroupFamily
	// property. For more information, see Amazon Redshift Parameter Groups
	// in the Amazon Redshift Cluster Management Guide.
	Parameters *RedshiftParameterList `json:"Parameters,omitempty"`

	// Specifies an arbitrary set of tags (key–value pairs) to associate
	// with this parameter group. Use tags to manage your resources.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::Redshift::ClusterParameterGroup to implement the ResourceProperties interface
func (s RedshiftClusterParameterGroup) CfnResourceType() string {
	return "AWS::Redshift::ClusterParameterGroup"
}

// RedshiftClusterSecurityGroup represents AWS::Redshift::ClusterSecurityGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html
type RedshiftClusterSecurityGroup struct {
	// A description of the security group.
	Description *StringExpr `json:"Description,omitempty"`

	// Specifies an arbitrary set of tags (key–value pairs) to associate
	// with this security group. Use tags to manage your resources.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::Redshift::ClusterSecurityGroup to implement the ResourceProperties interface
func (s RedshiftClusterSecurityGroup) CfnResourceType() string {
	return "AWS::Redshift::ClusterSecurityGroup"
}

// RedshiftClusterSecurityGroupIngress represents AWS::Redshift::ClusterSecurityGroupIngress
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html
type RedshiftClusterSecurityGroupIngress struct {
	// The name of the Amazon Redshift security group that will be associated
	// with the ingress rule.
	ClusterSecurityGroupName *StringExpr `json:"ClusterSecurityGroupName,omitempty"`

	// The IP address range that has inbound access to the Amazon Redshift
	// security group.
	CIDRIP *StringExpr `json:"CIDRIP,omitempty"`

	// The Amazon EC2 security group that will be added the Amazon Redshift
	// security group.
	EC2SecurityGroupName *StringExpr `json:"EC2SecurityGroupName,omitempty"`

	// The 12-digit AWS account number of the owner of the Amazon EC2
	// security group that is specified by the EC2SecurityGroupName
	// parameter.
	EC2SecurityGroupOwnerId *StringExpr `json:"EC2SecurityGroupOwnerId,omitempty"`
}

// CfnResourceType returns AWS::Redshift::ClusterSecurityGroupIngress to implement the ResourceProperties interface
func (s RedshiftClusterSecurityGroupIngress) CfnResourceType() string {
	return "AWS::Redshift::ClusterSecurityGroupIngress"
}

// RedshiftClusterSubnetGroup represents AWS::Redshift::ClusterSubnetGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html
type RedshiftClusterSubnetGroup struct {
	// A description of the subnet group.
	Description *StringExpr `json:"Description,omitempty"`

	// A list of VPC subnet IDs. You can modify a maximum of 20 subnets.
	SubnetIds interface{} `json:"SubnetIds,omitempty"`

	// Specifies an arbitrary set of tags (key–value pairs) to associate
	// with this subnet group. Use tags to manage your resources.
	Tags []ResourceTag `json:"Tags,omitempty"`
}

// CfnResourceType returns AWS::Redshift::ClusterSubnetGroup to implement the ResourceProperties interface
func (s RedshiftClusterSubnetGroup) CfnResourceType() string {
	return "AWS::Redshift::ClusterSubnetGroup"
}

// Route53HealthCheck represents AWS::Route53::HealthCheck
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html
type Route53HealthCheck struct {
	// An Amazon Route 53 health check.
	HealthCheckConfig *Route53HealthCheckConfig `json:"HealthCheckConfig,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this health check.
	HealthCheckTags *Route53HealthCheckTagsList `json:"HealthCheckTags,omitempty"`
}

// CfnResourceType returns AWS::Route53::HealthCheck to implement the ResourceProperties interface
func (s Route53HealthCheck) CfnResourceType() string {
	return "AWS::Route53::HealthCheck"
}

// Route53HostedZone represents AWS::Route53::HostedZone
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html
type Route53HostedZone struct {
	// A complex type that contains an optional comment about your hosted
	// zone.
	HostedZoneConfig *Route53HostedZoneConfigProperty `json:"HostedZoneConfig,omitempty"`

	// An arbitrary set of tags (key–value pairs) for this hosted zone.
	HostedZoneTags *Route53HostedZoneTagsList `json:"HostedZoneTags,omitempty"`

	// The name of the domain. For resource record types that include a
	// domain name, specify a fully qualified domain name.
	Name *StringExpr `json:"Name,omitempty"`

	// The configuration for DNS query logging.
	QueryLoggingConfig *Route53QueryLoggingConfig `json:"QueryLoggingConfig,omitempty"`

	// One or more VPCs that you want to associate with this hosted zone.
	// When you specify this property, AWS CloudFormation creates a private
	// hosted zone.
	VPCs *Route53HostedZoneVPCsList `json:"VPCs,omitempty"`
}

// CfnResourceType returns AWS::Route53::HostedZone to implement the ResourceProperties interface
func (s Route53HostedZone) CfnResourceType() string {
	return "AWS::Route53::HostedZone"
}

// Route53RecordSet represents AWS::Route53::RecordSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html
type Route53RecordSet struct {
	// Alias resource record sets only: Information about the domain to which
	// you are redirecting traffic.
	AliasTarget *Route53AliasTargetProperty `json:"AliasTarget,omitempty"`

	// Any comments that you want to include about the hosted zone.
	Comment *StringExpr `json:"Comment,omitempty"`

	// Designates the record set as a PRIMARY or SECONDARY failover record
	// set. When you have more than one resource performing the same
	// function, you can configure Amazon Route 53 to check the health of
	// your resources and use only health resources to respond to DNS
	// queries. You cannot create nonfailover resource record sets that have
	// the same Name and Type property values as failover resource record
	// sets. For more information, see the Failover content in the Amazon
	// Route 53 API Reference.
	Failover *StringExpr `json:"Failover,omitempty"`

	// Describes how Amazon Route 53 responds to DNS queries based on the
	// geographic origin of the query. This property is not compatible with
	// the Region property.
	GeoLocation *Route53RecordSetGeoLocationProperty `json:"GeoLocation,omitempty"`

	// The health check ID that you want to apply to this record set. Amazon
	// Route 53 returns this resource record set in response to a DNS query
	// only while record set is healthy.
	HealthCheckId *StringExpr `json:"HealthCheckId,omitempty"`

	// The ID of the hosted zone.
	HostedZoneId *StringExpr `json:"HostedZoneId,omitempty"`

	// The name of the domain for the hosted zone where you want to add the
	// record set.
	HostedZoneName *StringExpr `json:"HostedZoneName,omitempty"`

	// The name of the domain. You must specify a fully qualified domain name
	// that ends with a period as the last label indication. If you omit the
	// final period, Amazon Route 53 adds it.
	Name *StringExpr `json:"Name,omitempty"`

	// Latency resource record sets only: The Amazon EC2 region where the
	// resource that is specified in this resource record set resides. The
	// resource typically is an AWS resource, for example, Amazon EC2
	// instance or an Elastic Load Balancing load balancer, and is referred
	// to by an IP address or a DNS domain name, depending on the record
	// type.
	Region interface{} `json:"Region,omitempty"`

	// List of resource records to add. Each record should be in the format
	// appropriate for the record type specified by the Type property. For
	// information about different record types and their record formats, see
	// Values for Basic Resource Record Sets and Appendix: Domain Name Format
	// in the Amazon Route 53 Developer Guide.
	ResourceRecords interface{} `json:"ResourceRecords,omitempty"`

	// A unique identifier that differentiates among multiple resource record
	// sets that have the same combination of DNS name and type.
	SetIdentifier *StringExpr `json:"SetIdentifier,omitempty"`

	// The resource record cache time to live (TTL), in seconds. If you
	// specify this property, do not specify the AliasTarget property. For
	// alias target records, the alias uses a TTL value from the target.
	TTL *StringExpr `json:"TTL,omitempty"`

	// The type of records to add. For valid values, see the Type content in
	// the Amazon Route 53 API Reference.
	Type *StringExpr `json:"Type,omitempty"`

	// Weighted resource record sets only: Among resource record sets that
	// have the same combination of DNS name and type, a value that
	// determines what portion of traffic for the current resource record set
	// is routed to the associated location.
	Weight *IntegerExpr `json:"Weight,omitempty"`
}

// CfnResourceType returns AWS::Route53::RecordSet to implement the ResourceProperties interface
func (s Route53RecordSet) CfnResourceType() string {
	return "AWS::Route53::RecordSet"
}

// Route53RecordSetList represents a list of Route53RecordSet
type Route53RecordSetList []Route53RecordSet

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53RecordSetList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53RecordSet{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53RecordSetList{item}
		return nil
	}
	list := []Route53RecordSet{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53RecordSetList(list)
		return nil
	}
	return err
}

// Route53RecordSetGroup represents AWS::Route53::RecordSetGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordsetgroup.html
type Route53RecordSetGroup struct {
	// Any comments you want to include about the hosted zone.
	Comment *StringExpr `json:"Comment,omitempty"`

	// The ID of the hosted zone.
	HostedZoneId *StringExpr `json:"HostedZoneId,omitempty"`

	// The name of the domain for the hosted zone where you want to add the
	// record set.
	HostedZoneName *StringExpr `json:"HostedZoneName,omitempty"`

	// List of resource record sets to add. The maximum number of records is
	// 1,000.
	RecordSets *Route53RecordSetList `json:"RecordSets,omitempty"`
}

// CfnResourceType returns AWS::Route53::RecordSetGroup to implement the ResourceProperties interface
func (s Route53RecordSetGroup) CfnResourceType() string {
	return "AWS::Route53::RecordSetGroup"
}

// S3Bucket represents AWS::S3::Bucket
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html
type S3Bucket struct {
	// A canned access control list (ACL) that grants predefined permissions
	// to the bucket. For more information about canned ACLs, see Canned ACLs
	// in the Amazon S3 documentation in the Amazon Simple Storage Service
	// Developer Guide.
	AccessControl *StringExpr `json:"AccessControl,omitempty"`

	// Configuration for the transfer acceleration state. For more
	// information, see Amazon S3 Transfer Acceleration in the Amazon Simple
	// Storage Service Developer Guide.
	AccelerateConfiguration *S3BucketAccelerateConfiguration `json:"AccelerateConfiguration,omitempty"`

	// The configuration and any analyses for the analytics filter of an
	// Amazon S3 bucket. Duplicates not allowed.
	AnalyticsConfigurations *S3BucketAnalyticsConfigurationList `json:"AnalyticsConfigurations,omitempty"`

	// A name for the bucket. If you don't specify a name, AWS CloudFormation
	// generates a unique physical ID and uses that ID for the bucket name.
	// For more information, see Name Type. The bucket name must contain only
	// lowercase letters, numbers, periods (.), and dashes (-).
	BucketName *StringExpr `json:"BucketName,omitempty"`

	// Rules that define cross-origin resource sharing of objects in this
	// bucket. For more information, see Enabling Cross-Origin Resource
	// Sharing in the Amazon Simple Storage Service Developer Guide.
	CorsConfiguration *S3BucketCorsConfiguration `json:"CorsConfiguration,omitempty"`

	// The inventory configuration for an Amazon S3 bucket. Duplicates not
	// allowed.
	InventoryConfigurations *S3BucketInventoryConfigurationList `json:"InventoryConfigurations,omitempty"`

	// Rules that define how Amazon S3 manages objects during their lifetime.
	// For more information, see Object Lifecycle Management in the Amazon
	// Simple Storage Service Developer Guide.
	LifecycleConfiguration *S3BucketLifecycleConfiguration `json:"LifecycleConfiguration,omitempty"`

	// Settings that define where logs are stored.
	LoggingConfiguration *S3BucketLoggingConfiguration `json:"LoggingConfiguration,omitempty"`

	// Settings that define a metrics configuration for the CloudWatch
	// request metrics from the bucket.
	MetricsConfigurations *S3BucketMetricsConfigurationList `json:"MetricsConfigurations,omitempty"`

	// Configuration that defines how Amazon S3 handles bucket notifications.
	NotificationConfiguration *S3BucketNotificationConfiguration `json:"NotificationConfiguration,omitempty"`

	// Configuration for replicating objects in an S3 bucket. To enable
	// replication, you must also enable versioning by using the
	// VersioningConfiguration property.
	ReplicationConfiguration *S3BucketReplicationConfiguration `json:"ReplicationConfiguration,omitempty"`

	// An arbitrary set of tags (key-value pairs) for this S3 bucket.
	Tags []ResourceTag `json:"Tags,omitempty"`

	// Enables multiple variants of all objects in this bucket. You might
	// enable versioning to prevent objects from being deleted or overwritten
	// by mistake or to archive objects so that you can retrieve previous
	// versions of them.
	VersioningConfiguration *S3BucketVersioningConfiguration `json:"VersioningConfiguration,omitempty"`

	// Information used to configure the bucket as a static website. For more
	// information, see Hosting Websites on Amazon S3.
	WebsiteConfiguration *S3WebsiteConfigurationProperty `json:"WebsiteConfiguration,omitempty"`
}

// CfnResourceType returns AWS::S3::Bucket to implement the ResourceProperties interface
func (s S3Bucket) CfnResourceType() string {
	return "AWS::S3::Bucket"
}

// S3BucketPolicy represents AWS::S3::BucketPolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html
type S3BucketPolicy struct {
	// The Amazon S3 bucket that the policy applies to.
	Bucket *StringExpr `json:"Bucket,omitempty"`

	// A policy document containing permissions to add to the specified
	// bucket. For more information, see Access Policy Language Overview in
	// the Amazon Simple Storage Service Developer Guide.
	PolicyDocument interface{} `json:"PolicyDocument,omitempty"`
}

// CfnResourceType returns AWS::S3::BucketPolicy to implement the ResourceProperties interface
func (s S3BucketPolicy) CfnResourceType() string {
	return "AWS::S3::BucketPolicy"
}

// SDBDomain represents AWS::SDB::Domain
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html
type SDBDomain struct {
	// Information about the Amazon SimpleDB domain.
	Description *StringExpr `json:"Description,omitempty"`
}

// CfnResourceType returns AWS::SDB::Domain to implement the ResourceProperties interface
func (s SDBDomain) CfnResourceType() string {
	return "AWS::SDB::Domain"
}

// ServiceDiscoveryInstance represents AWS::ServiceDiscovery::Instance
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html
type ServiceDiscoveryInstance struct {
	// A string map that contains attribute keys and values. Supported
	// attribute keys include the following:
	InstanceAttributes interface{} `json:"InstanceAttributes,omitempty"`

	// An identifier that you want to associate with the instance. Note the
	// following:
	InstanceId *StringExpr `json:"InstanceId,omitempty"`

	// The ID of the service that you want to use for settings for the
	// resource record sets and health check that Amazon Route 53 will
	// create.
	ServiceId *StringExpr `json:"ServiceId,omitempty"`
}

// CfnResourceType returns AWS::ServiceDiscovery::Instance to implement the ResourceProperties interface
func (s ServiceDiscoveryInstance) CfnResourceType() string {
	return "AWS::ServiceDiscovery::Instance"
}

// ServiceDiscoveryPrivateDnsNamespace represents AWS::ServiceDiscovery::PrivateDnsNamespace
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html
type ServiceDiscoveryPrivateDnsNamespace struct {
	// A description for the namespace.
	Description *StringExpr `json:"Description,omitempty"`

	// The ID of the Amazon VPC that you want to associate the namespace
	// with.
	Vpc *StringExpr `json:"Vpc,omitempty"`

	// The name that you want to assign to this namespace. When you create a
	// namespace, Amazon Route 53 automatically creates a hosted zone that
	// has the same name as the namespace.
	Name *StringExpr `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::ServiceDiscovery::PrivateDnsNamespace to implement the ResourceProperties interface
func (s ServiceDiscoveryPrivateDnsNamespace) CfnResourceType() string {
	return "AWS::ServiceDiscovery::PrivateDnsNamespace"
}

// ServiceDiscoveryPublicDnsNamespace represents AWS::ServiceDiscovery::PublicDnsNamespace
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html
type ServiceDiscoveryPublicDnsNamespace struct {
	// A description for the namespace.
	Description *StringExpr `json:"Description,omitempty"`

	// The name that you want to assign to this namespace. When you create a
	// namespace, Amazon Route 53 automatically creates a hosted zone that
	// has the same name as the namespace.
	Name *StringExpr `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::ServiceDiscovery::PublicDnsNamespace to implement the ResourceProperties interface
func (s ServiceDiscoveryPublicDnsNamespace) CfnResourceType() string {
	return "AWS::ServiceDiscovery::PublicDnsNamespace"
}

// ServiceDiscoveryService represents AWS::ServiceDiscovery::Service
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html
type ServiceDiscoveryService struct {
	// A description for the service.
	Description *StringExpr `json:"Description,omitempty"`

	// A complex type that contains information about the resource record
	// sets that you want Amazon Route 53 to create when you register an
	// instance.
	DnsConfig *Route53ServiceDiscoveryDnsConfig `json:"DnsConfig,omitempty"`

	// A complex type that contains settings for an optional health check. If
	// you specify settings for a health check, Amazon Route 53 associates
	// the health check with all the resource record sets that you specify in
	// DnsConfig.
	HealthCheckConfig *Route53ServiceDiscoveryHealthCheckConfig `json:"HealthCheckConfig,omitempty"`

	// The name that you want to assign to the service.
	Name *StringExpr `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::ServiceDiscovery::Service to implement the ResourceProperties interface
func (s ServiceDiscoveryService) CfnResourceType() string {
	return "AWS::ServiceDiscovery::Service"
}

// SNSSubscription represents AWS::SNS::Subscription
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html
type SNSSubscription struct {
	// The endpoint that receives notifications from the Amazon SNS topic.
	// The endpoint value depends on the protocol that you specify. For more
	// information, see the Subscribe Endpoint parameter in the Amazon Simple
	// Notification Service API Reference.
	Endpoint *StringExpr `json:"Endpoint,omitempty"`

	// The subscription's protocol. For more information, see the Subscribe
	// Protocol parameter in the Amazon Simple Notification Service API
	// Reference.
	Protocol *StringExpr `json:"Protocol,omitempty"`

	// The Amazon Resource Name (ARN) of the topic to subscribe to.
	TopicArn *StringExpr `json:"TopicArn,omitempty"`
}

// CfnResourceType returns AWS::SNS::Subscription to implement the ResourceProperties interface
func (s SNSSubscription) CfnResourceType() string {
	return "AWS::SNS::Subscription"
}

// SNSTopic represents AWS::SNS::Topic
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html
type SNSTopic struct {
	// A developer-defined string that can be used to identify this SNS
	// topic.
	DisplayName *StringExpr `json:"DisplayName,omitempty"`

	// The SNS subscriptions (endpoints) for this topic.
	Subscription *SNSSubscriptionPropertyList `json:"Subscription,omitempty"`

	// A name for the topic. If you don't specify a name, AWS CloudFormation
	// generates a unique physical ID and uses that ID for the topic name.
	// For more information, see Name Type.
	TopicName *StringExpr `json:"TopicName,omitempty"`
}

// CfnResourceType returns AWS::SNS::Topic to implement the ResourceProperties interface
func (s SNSTopic) CfnResourceType() string {
	return "AWS::SNS::Topic"
}

// SNSTopicPolicy represents AWS::SNS::TopicPolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html
type SNSTopicPolicy struct {
	// A policy document that contains permissions to add to the specified
	// SNS topics.
	PolicyDocument interface{} `json:"PolicyDocument,omitempty"`

	// The Amazon Resource Names (ARN) of the topics to which you want to add
	// the policy. You can use the Ref function to specify an AWS::SNS::Topic
	// resource.
	Topics interface{} `json:"Topics,omitempty"`
}

// CfnResourceType returns AWS::SNS::TopicPolicy to implement the ResourceProperties interface
func (s SNSTopicPolicy) CfnResourceType() string {
	return "AWS::SNS::TopicPolicy"
}

// SQSQueue represents AWS::SQS::Queue
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
type SQSQueue struct {
	// For first-in-first-out (FIFO) queues, specifies whether to enable
	// content-based deduplication. During the deduplication interval, Amazon
	// SQS treats messages that are sent with identical content as duplicates
	// and delivers only one copy of the message. For more information, see
	// the ContentBasedDeduplication attribute for the CreateQueue action in
	// the Amazon Simple Queue Service API Reference.
	ContentBasedDeduplication *BoolExpr `json:"ContentBasedDeduplication,omitempty"`

	// The time in seconds that the delivery of all messages in the queue is
	// delayed. You can specify an integer value of 0 to 900 (15 minutes).
	// The default value is 0.
	DelaySeconds *IntegerExpr `json:"DelaySeconds,omitempty"`

	// Indicates whether this queue is a FIFO queue. For more information,
	// see FIFO (First-In-First-Out) Queues in the Amazon Simple Queue
	// Service Developer Guide.
	FifoQueue *BoolExpr `json:"FifoQueue,omitempty"`

	// The ID of an AWS managed customer master key (CMK) for Amazon SQS or a
	// custom CMK. To use the AWS managed CMK for Amazon SQS, specify the
	// alias alias/aws/sqs. For more information, see CreateQueue in the
	// Amazon Simple Queue Service API Reference, Protecting Data Using
	// Server-Side Encryption (SSE) and AWS KMS in the Amazon Simple Queue
	// Service Developer Guide, or Customer Master Keys in the AWS Key
	// Management Service Best Practices whitepaper.
	KmsMasterKeyId *StringExpr `json:"KmsMasterKeyId,omitempty"`

	// The length of time in seconds that Amazon SQS can reuse a data key to
	// encrypt or decrypt messages before calling AWS KMS again. The value
	// must be an integer between 60 (1 minute) and 86,400 (24 hours). The
	// default is 300 (5 minutes).
	KmsDataKeyReusePeriodSeconds *IntegerExpr `json:"KmsDataKeyReusePeriodSeconds,omitempty"`

	// The limit of how many bytes that a message can contain before Amazon
	// SQS rejects it. You can specify an integer value from 1024 bytes (1
	// KiB) to 262144 bytes (256 KiB). The default value is 262144 (256 KiB).
	MaximumMessageSize *IntegerExpr `json:"MaximumMessageSize,omitempty"`

	// The number of seconds that Amazon SQS retains a message. You can
	// specify an integer value from 60 seconds (1 minute) to 1209600 seconds
	// (14 days). The default value is 345600 seconds (4 days).
	MessageRetentionPeriod *IntegerExpr `json:"MessageRetentionPeriod,omitempty"`

	// A name for the queue. To create a FIFO queue, the name of your FIFO
	// queue must end with the .fifo suffix. For more information, see FIFO
	// (First-In-First-Out) Queues in the Amazon Simple Queue Service
	// Developer Guide.
	QueueName *StringExpr `json:"QueueName,omitempty"`

	// Specifies the duration, in seconds, that the ReceiveMessage action
	// call waits until a message is in the queue in order to include it in
	// the response, as opposed to returning an empty response if a message
	// isn't yet available. You can specify an integer from 1 to 20. The
	// short polling is used as the default or when you specify 0 for this
	// property. For more information, see Amazon SQS Long Poll.
	ReceiveMessageWaitTimeSeconds *IntegerExpr `json:"ReceiveMessageWaitTimeSeconds,omitempty"`

	// Specifies an existing dead letter queue to receive messages after the
	// source queue (this queue) fails to process a message a specified
	// number of times.
	RedrivePolicy *SQSRedrivePolicy `json:"RedrivePolicy,omitempty"`

	// The length of time during which a message will be unavailable after a
	// message is delivered from the queue. This blocks other components from
	// receiving the same message and gives the initial component time to
	// process and delete the message from the queue.
	VisibilityTimeout *IntegerExpr `json:"VisibilityTimeout,omitempty"`
}

// CfnResourceType returns AWS::SQS::Queue to implement the ResourceProperties interface
func (s SQSQueue) CfnResourceType() string {
	return "AWS::SQS::Queue"
}

// SQSQueuePolicy represents AWS::SQS::QueuePolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html
type SQSQueuePolicy struct {
	// A policy document that contains the permissions for the specified
	// Amazon SQS queues. For more information about Amazon SQS policies, see
	// Creating Custom Policies Using the Access Policy Language in the
	// Amazon Simple Queue Service Developer Guide.
	PolicyDocument interface{} `json:"PolicyDocument,omitempty"`

	// The URLs of the queues to which you want to add the policy. You can
	// use the Ref function to specify an AWS::SQS::Queue resource.
	Queues interface{} `json:"Queues,omitempty"`
}

// CfnResourceType returns AWS::SQS::QueuePolicy to implement the ResourceProperties interface
func (s SQSQueuePolicy) CfnResourceType() string {
	return "AWS::SQS::QueuePolicy"
}

// SSMAssociation represents AWS::SSM::Association
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html
type SSMAssociation struct {
	// The version of the SSM document to associate with the target.
	DocumentVersion *StringExpr `json:"DocumentVersion,omitempty"`

	// The ID of the instance that the SSM document is associated with.
	InstanceId *StringExpr `json:"InstanceId,omitempty"`

	// The name of the SSM document.
	Name *StringExpr `json:"Name,omitempty"`

	// Parameter values that the SSM document uses at runtime.
	Parameters *StringExpr `json:"Parameters,omitempty"`

	// A Cron expression that specifies when the association is applied to
	// the target. For more on working with Cron expressions, see Working
	// with Cron and Rate Expressions for Systems Manager.
	ScheduleExpression *StringExpr `json:"ScheduleExpression,omitempty"`

	// The targets that the SSM document sends commands to.
	Targets *EC2SystemsManagerAssociationTargetsList `json:"Targets,omitempty"`
}

// CfnResourceType returns AWS::SSM::Association to implement the ResourceProperties interface
func (s SSMAssociation) CfnResourceType() string {
	return "AWS::SSM::Association"
}

// SSMDocument represents AWS::SSM::Document
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html
type SSMDocument struct {
	// A JSON object that describes an instance configuration. For more
	// information, see Creating SSM Documents in the Amazon EC2 User Guide
	// for Linux Instances.
	Content interface{} `json:"Content,omitempty"`

	// The type of document to create that relates to the purpose of your
	// document, such as running commands, bootstrapping software, or
	// automating tasks. For valid values, see the CreateDocument action in
	// the Amazon EC2 Systems Manager API Reference.
	DocumentType *StringExpr `json:"DocumentType,omitempty"`
}

// CfnResourceType returns AWS::SSM::Document to implement the ResourceProperties interface
func (s SSMDocument) CfnResourceType() string {
	return "AWS::SSM::Document"
}

// SSMMaintenanceWindow represents AWS::SSM::MaintenanceWindow
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html
type SSMMaintenanceWindow struct {
	// A description of the Maintenance Window.
	Description interface{} `json:"Description,omitempty"`

	// Enables a Maintenance Window task to execute on managed instances,
	// even if you haven't registered those instances as targets. If this is
	// enabled, then you must specify the unregistered instances (by instance
	// ID) when you register a task with the Maintenance Window.
	AllowUnassociatedTargets interface{} `json:"AllowUnassociatedTargets,omitempty"`

	// The number of hours before the end of the Maintenance Window that
	// Systems Manager stops scheduling new tasks for execution.
	Cutoff interface{} `json:"Cutoff,omitempty"`

	// The schedule of the Maintenance Window in the form of a cron or rate
	// expression.
	Schedule interface{} `json:"Schedule,omitempty"`

	// The duration of the Maintenance Window in hours.
	Duration interface{} `json:"Duration,omitempty"`

	// The name of the Maintenance Window.
	Name interface{} `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::SSM::MaintenanceWindow to implement the ResourceProperties interface
func (s SSMMaintenanceWindow) CfnResourceType() string {
	return "AWS::SSM::MaintenanceWindow"
}

// SSMMaintenanceWindowTarget represents AWS::SSM::MaintenanceWindowTarget
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html
type SSMMaintenanceWindowTarget struct {
	// A user-provided value to include in any events in CloudWatch Events
	// that are raised while running tasks for these targets in this
	// Maintenance Window.
	OwnerInformation interface{} `json:"OwnerInformation,omitempty"`

	// A description for the target.
	Description interface{} `json:"Description,omitempty"`

	// The ID of the Maintenance Window to register the target with.
	WindowId interface{} `json:"WindowId,omitempty"`

	// The type of target that's being registered with the Maintenance
	// Window.
	ResourceType interface{} `json:"ResourceType,omitempty"`

	// The targets, either instances or tags.
	Targets *EC2SystemsManagerMaintenanceWindowTargetTargetsList `json:"Targets,omitempty"`

	// An optional name for the target.
	Name interface{} `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::SSM::MaintenanceWindowTarget to implement the ResourceProperties interface
func (s SSMMaintenanceWindowTarget) CfnResourceType() string {
	return "AWS::SSM::MaintenanceWindowTarget"
}

// SSMMaintenanceWindowTask represents AWS::SSM::MaintenanceWindowTask
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html
type SSMMaintenanceWindowTask struct {
	// The maximum number of errors allowed before this task stops being
	// scheduled.
	MaxErrors interface{} `json:"MaxErrors,omitempty"`

	// A description of the task.
	Description interface{} `json:"Description,omitempty"`

	// The role that's used when the task is executed.
	ServiceRoleArn interface{} `json:"ServiceRoleArn,omitempty"`

	// The priority of the task in the Maintenance Window. The lower the
	// number, the higher the priority. Tasks that have the same priority are
	// scheduled in parallel.
	Priority interface{} `json:"Priority,omitempty"`

	// The maximum number of targets that you can run this task for, in
	// parallel.
	MaxConcurrency interface{} `json:"MaxConcurrency,omitempty"`

	// The targets, either instances or tags.
	Targets *EC2SystemsManagerMaintenanceWindowTaskTargetList `json:"Targets,omitempty"`

	// The task name.
	Name interface{} `json:"Name,omitempty"`

	// The resource that the task uses during execution.
	TaskArn interface{} `json:"TaskArn,omitempty"`

	// The parameters for task execution.
	TaskInvocationParameters *EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParameters `json:"TaskInvocationParameters,omitempty"`

	// The ID of the Maintenance Window where the task is registered.
	WindowId interface{} `json:"WindowId,omitempty"`

	// The parameters to pass to the task when it's executed.
	TaskParameters interface{} `json:"TaskParameters,omitempty"`

	// The type of task. Valid values: RUN_COMMAND, AUTOMATION, LAMBDA,
	// STEP_FUNCTION.
	TaskType interface{} `json:"TaskType,omitempty"`

	// Information about an Amazon S3 bucket to write task-level logs to.
	LoggingInfo *EC2SystemsManagerMaintenanceWindowTaskLoggingInfo `json:"LoggingInfo,omitempty"`
}

// CfnResourceType returns AWS::SSM::MaintenanceWindowTask to implement the ResourceProperties interface
func (s SSMMaintenanceWindowTask) CfnResourceType() string {
	return "AWS::SSM::MaintenanceWindowTask"
}

// SSMParameter represents AWS::SSM::Parameter
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html
type SSMParameter struct {
	// The name of the parameter. Names must not be prefixed with aws or ssm.
	Name *StringExpr `json:"Name,omitempty"`

	// Information about the parameter that you want to add to the system.
	Description *StringExpr `json:"Description,omitempty"`

	// The type of parameter. Valid values include the following: String or
	// StringList.
	Type *StringExpr `json:"Type,omitempty"`

	// The parameter value. Value must not nest another parameter. Do not use
	// {{}} in the value.
	Value *StringExpr `json:"Value,omitempty"`
}

// CfnResourceType returns AWS::SSM::Parameter to implement the ResourceProperties interface
func (s SSMParameter) CfnResourceType() string {
	return "AWS::SSM::Parameter"
}

// SSMPatchBaseline represents AWS::SSM::PatchBaseline
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html
type SSMPatchBaseline struct {
	// Defines the operating system that the patch baseline applies to.
	// Supported operating systems include WINDOWS, AMAZON_LINUX, UBUNTU, and
	// REDHAT_ENTERPRISE_LINUX. The default value is WINDOWS.
	OperatingSystem interface{} `json:"OperatingSystem,omitempty"`

	// A list of explicitly approved patches for the baseline.
	ApprovedPatches interface{} `json:"ApprovedPatches,omitempty"`

	// The names of the patch groups to register with the patch baseline.
	PatchGroups interface{} `json:"PatchGroups,omitempty"`

	// A description of the patch baseline.
	Description interface{} `json:"Description,omitempty"`

	// The compliance level for approved patches. This means that if an
	// approved patch is reported as missing, this is the severity of the
	// compliance violation. Valid compliance severity levels include the
	// following: CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, and
	// UNSPECIFIED. The default value is UNSPECIFIED.
	ApprovedPatchesComplianceLevel interface{} `json:"ApprovedPatchesComplianceLevel,omitempty"`

	// A set of rules that are used to include patches in the baseline.
	ApprovalRules *EC2SystemsManagerPatchBaselineRuleGroup `json:"ApprovalRules,omitempty"`

	// A set of global filters that are used to exclude patches from the
	// baseline.
	GlobalFilters *EC2SystemsManagerPatchBaselinePatchFilterGroup `json:"GlobalFilters,omitempty"`

	// The name of the patch baseline.
	Name interface{} `json:"Name,omitempty"`

	// A list of explicitly rejected patches for the baseline.
	RejectedPatches interface{} `json:"RejectedPatches,omitempty"`
}

// CfnResourceType returns AWS::SSM::PatchBaseline to implement the ResourceProperties interface
func (s SSMPatchBaseline) CfnResourceType() string {
	return "AWS::SSM::PatchBaseline"
}

// StepFunctionsActivity represents AWS::StepFunctions::Activity
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html
type StepFunctionsActivity struct {
	// The name of the activity to create. This name must be unique for your
	// AWS account and region.
	Name *StringExpr `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::StepFunctions::Activity to implement the ResourceProperties interface
func (s StepFunctionsActivity) CfnResourceType() string {
	return "AWS::StepFunctions::Activity"
}

// StepFunctionsStateMachine represents AWS::StepFunctions::StateMachine
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html
type StepFunctionsStateMachine struct {
	// The name of the state machine. If you do not specify a name one will
	// be generated that is similar to MyStateMachine-1234abcdefgh. For more
	// information on creating a valid name see Request Parameters in the AWS
	// Step Functions API Reference.
	StateMachineName *StringExpr `json:"StateMachineName,omitempty"`

	// The Amazon States Language definition of the state machine. For more
	// information, see Amazon States Language in the AWS Step Functions
	// Developer Guide.
	DefinitionString *StringExpr `json:"DefinitionString,omitempty"`

	// The Amazon Resource Name (ARN) of the IAM role to use for this state
	// machine.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`
}

// CfnResourceType returns AWS::StepFunctions::StateMachine to implement the ResourceProperties interface
func (s StepFunctionsStateMachine) CfnResourceType() string {
	return "AWS::StepFunctions::StateMachine"
}

// WAFByteMatchSet represents AWS::WAF::ByteMatchSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-bytematchset.html
type WAFByteMatchSet struct {
	// Settings for the ByteMatchSet, such as the bytes (typically a string
	// that corresponds with ASCII characters) that you want AWS WAF to
	// search for in web requests.
	ByteMatchTuples *WAFByteMatchSetByteMatchTuplesList `json:"ByteMatchTuples,omitempty"`

	// A friendly name or description of the ByteMatchSet.
	Name *StringExpr `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::WAF::ByteMatchSet to implement the ResourceProperties interface
func (s WAFByteMatchSet) CfnResourceType() string {
	return "AWS::WAF::ByteMatchSet"
}

// WAFIPSet represents AWS::WAF::IPSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-ipset.html
type WAFIPSet struct {
	// The IP address type and IP address range (in CIDR notation) from which
	// web requests originate. If you associate the IPSet with a web ACL that
	// is associated with a Amazon CloudFront (CloudFront) distribution, this
	// descriptor is the value of one of the following fields in the
	// CloudFront access logs:
	IPSetDescriptors *WAFIPSetIPSetDescriptorsList `json:"IPSetDescriptors,omitempty"`

	// If the viewer did not use an HTTP proxy or a load balancer to send the
	// request
	CXIp interface{} `json:"c-ip,omitempty"`

	// If the viewer did use an HTTP proxy or a load balancer to send the
	// request
	XXForwardedXFor interface{} `json:"x-forwarded-for,omitempty"`

	// A friendly name or description of the IPSet.
	Name *StringExpr `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::WAF::IPSet to implement the ResourceProperties interface
func (s WAFIPSet) CfnResourceType() string {
	return "AWS::WAF::IPSet"
}

// WAFRule represents AWS::WAF::Rule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-rule.html
type WAFRule struct {
	// A friendly name or description for the metrics of the rule. For valid
	// values, see the MetricName parameter for the CreateRule action in the
	// AWS WAF API Reference.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// A friendly name or description of the rule.
	Name *StringExpr `json:"Name,omitempty"`

	// The ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet, or
	// XssMatchSet objects to include in a rule. If you add more than one
	// predicate to a rule, a request must match all conditions in order to
	// be allowed or blocked.
	Predicates *WAFRulePredicatesList `json:"Predicates,omitempty"`
}

// CfnResourceType returns AWS::WAF::Rule to implement the ResourceProperties interface
func (s WAFRule) CfnResourceType() string {
	return "AWS::WAF::Rule"
}

// WAFSizeConstraintSet represents AWS::WAF::SizeConstraintSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sizeconstraintset.html
type WAFSizeConstraintSet struct {
	// A friendly name or description for the SizeConstraintSet.
	Name *StringExpr `json:"Name,omitempty"`

	// The size constraint and the part of the web request to check.
	SizeConstraints *WAFSizeConstraintSetSizeConstraintList `json:"SizeConstraints,omitempty"`
}

// CfnResourceType returns AWS::WAF::SizeConstraintSet to implement the ResourceProperties interface
func (s WAFSizeConstraintSet) CfnResourceType() string {
	return "AWS::WAF::SizeConstraintSet"
}

// WAFSqlInjectionMatchSet represents AWS::WAF::SqlInjectionMatchSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sqlinjectionmatchset.html
type WAFSqlInjectionMatchSet struct {
	// A friendly name or description of the SqlInjectionMatchSet.
	Name *StringExpr `json:"Name,omitempty"`

	// The parts of web requests that you want AWS WAF to inspect for
	// malicious SQL code and, if you want AWS WAF to inspect a header, the
	// name of the header.
	SqlInjectionMatchTuples *WAFSqlInjectionMatchSetSqlInjectionMatchTuplesList `json:"SqlInjectionMatchTuples,omitempty"`
}

// CfnResourceType returns AWS::WAF::SqlInjectionMatchSet to implement the ResourceProperties interface
func (s WAFSqlInjectionMatchSet) CfnResourceType() string {
	return "AWS::WAF::SqlInjectionMatchSet"
}

// WAFWebACL represents AWS::WAF::WebACL
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-webacl.html
type WAFWebACL struct {
	// The action that you want AWS WAF to take when a request doesn't match
	// the criteria in any of the rules that are associated with the web ACL.
	DefaultAction *WAFWebACLAction `json:"DefaultAction,omitempty"`

	// A friendly name or description for the Amazon CloudWatch metric of
	// this web ACL. For valid values, see the MetricName parameter of the
	// CreateWebACL action in the AWS WAF API Reference.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// A friendly name or description of the web ACL.
	Name *StringExpr `json:"Name,omitempty"`

	// The rules to associate with the web ACL and the settings for each
	// rule.
	Rules *WAFWebACLRulesList `json:"Rules,omitempty"`
}

// CfnResourceType returns AWS::WAF::WebACL to implement the ResourceProperties interface
func (s WAFWebACL) CfnResourceType() string {
	return "AWS::WAF::WebACL"
}

// WAFXssMatchSet represents AWS::WAF::XssMatchSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-xssmatchset.html
type WAFXssMatchSet struct {
	// A friendly name or description for the XssMatchSet.
	Name *StringExpr `json:"Name,omitempty"`

	// The parts of web requests that you want to inspect for cross-site
	// scripting attacks.
	XssMatchTuples *WAFXssMatchSetXssMatchTupleList `json:"XssMatchTuples,omitempty"`
}

// CfnResourceType returns AWS::WAF::XssMatchSet to implement the ResourceProperties interface
func (s WAFXssMatchSet) CfnResourceType() string {
	return "AWS::WAF::XssMatchSet"
}

// WAFRegionalByteMatchSet represents AWS::WAFRegional::ByteMatchSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-bytematchset.html
type WAFRegionalByteMatchSet struct {
	// Settings for the ByteMatchSet, such as the bytes (typically a string
	// that corresponds with ASCII characters) that you want AWS WAF to
	// search for in web requests.
	ByteMatchTuples *WAFRegionalByteMatchSetByteMatchTuplesList `json:"ByteMatchTuples,omitempty"`

	// A friendly name or description of the ByteMatchSet.
	Name *StringExpr `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::WAFRegional::ByteMatchSet to implement the ResourceProperties interface
func (s WAFRegionalByteMatchSet) CfnResourceType() string {
	return "AWS::WAFRegional::ByteMatchSet"
}

// WAFRegionalIPSet represents AWS::WAFRegional::IPSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ipset.html
type WAFRegionalIPSet struct {
	// The IP address type and IP address range (in CIDR notation) from which
	// web requests originate. If you associate the IPSet with a web ACL that
	// is associated with a Amazon CloudFront (CloudFront) distribution, this
	// descriptor is the value of one of the following fields in the
	// CloudFront access logs:
	IPSetDescriptors *WAFRegionalIPSetIPSetDescriptorsList `json:"IPSetDescriptors,omitempty"`

	// If the viewer did not use an HTTP proxy or a load balancer to send the
	// request
	CXIp interface{} `json:"c-ip,omitempty"`

	// If the viewer did use an HTTP proxy or a load balancer to send the
	// request
	XXForwardedXFor interface{} `json:"x-forwarded-for,omitempty"`

	// A friendly name or description of the IPSet.
	Name *StringExpr `json:"Name,omitempty"`
}

// CfnResourceType returns AWS::WAFRegional::IPSet to implement the ResourceProperties interface
func (s WAFRegionalIPSet) CfnResourceType() string {
	return "AWS::WAFRegional::IPSet"
}

// WAFRegionalRule represents AWS::WAFRegional::Rule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-rule.html
type WAFRegionalRule struct {
	// A friendly name or description for the metrics of the rule. For valid
	// values, see the MetricName parameter for the CreateRule action in the
	// AWS WAF Regional API Reference.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// A friendly name or description of the rule.
	Name *StringExpr `json:"Name,omitempty"`

	// The ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet, or
	// XssMatchSet objects to include in a rule. If you add more than one
	// predicate to a rule, a request must match all conditions in order to
	// be allowed or blocked.
	Predicates *WAFRegionalRulePredicatesList `json:"Predicates,omitempty"`
}

// CfnResourceType returns AWS::WAFRegional::Rule to implement the ResourceProperties interface
func (s WAFRegionalRule) CfnResourceType() string {
	return "AWS::WAFRegional::Rule"
}

// WAFRegionalSizeConstraintSet represents AWS::WAFRegional::SizeConstraintSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sizeconstraintset.html
type WAFRegionalSizeConstraintSet struct {
	// A friendly name or description for the SizeConstraintSet.
	Name *StringExpr `json:"Name,omitempty"`

	// The size constraint and the part of the web request to check.
	SizeConstraints *WAFRegionalSizeConstraintSetSizeConstraintList `json:"SizeConstraints,omitempty"`
}

// CfnResourceType returns AWS::WAFRegional::SizeConstraintSet to implement the ResourceProperties interface
func (s WAFRegionalSizeConstraintSet) CfnResourceType() string {
	return "AWS::WAFRegional::SizeConstraintSet"
}

// WAFRegionalSqlInjectionMatchSet represents AWS::WAFRegional::SqlInjectionMatchSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sqlinjectionmatchset.html
type WAFRegionalSqlInjectionMatchSet struct {
	// A friendly name or description of the SqlInjectionMatchSet.
	Name *StringExpr `json:"Name,omitempty"`

	// The parts of web requests that you want AWS WAF to inspect for
	// malicious SQL code and, if you want AWS WAF to inspect a header, the
	// name of the header.
	SqlInjectionMatchTuples *WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesList `json:"SqlInjectionMatchTuples,omitempty"`
}

// CfnResourceType returns AWS::WAFRegional::SqlInjectionMatchSet to implement the ResourceProperties interface
func (s WAFRegionalSqlInjectionMatchSet) CfnResourceType() string {
	return "AWS::WAFRegional::SqlInjectionMatchSet"
}

// WAFRegionalWebACL represents AWS::WAFRegional::WebACL
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html
type WAFRegionalWebACL struct {
	// The action that you want AWS WAF to take when a request doesn't match
	// the criteria in any of the rules that are associated with the web ACL.
	DefaultAction *WAFRegionalWebACLAction `json:"DefaultAction,omitempty"`

	// A friendly name or description for the Amazon CloudWatch metric of
	// this web ACL. For valid values, see the MetricName parameter of the
	// CreateWebACL action in the AWS WAF Regional API Reference.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// A friendly name or description of the web ACL.
	Name *StringExpr `json:"Name,omitempty"`

	// The rules to associate with the web ACL and the settings for each
	// rule.
	Rules *WAFRegionalWebACLRulesList `json:"Rules,omitempty"`
}

// CfnResourceType returns AWS::WAFRegional::WebACL to implement the ResourceProperties interface
func (s WAFRegionalWebACL) CfnResourceType() string {
	return "AWS::WAFRegional::WebACL"
}

// WAFRegionalWebACLAssociation represents AWS::WAFRegional::WebACLAssociation
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webaclassociation.html
type WAFRegionalWebACLAssociation struct {
	// The Amazon Resource Name (ARN) of the resource to protect with the web
	// ACL.
	ResourceArn *StringExpr `json:"ResourceArn,omitempty"`

	// A unique identifier (ID) for the web ACL.
	WebACLId *StringExpr `json:"WebACLId,omitempty"`
}

// CfnResourceType returns AWS::WAFRegional::WebACLAssociation to implement the ResourceProperties interface
func (s WAFRegionalWebACLAssociation) CfnResourceType() string {
	return "AWS::WAFRegional::WebACLAssociation"
}

// WAFRegionalXssMatchSet represents AWS::WAFRegional::XssMatchSet
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-xssmatchset.html
type WAFRegionalXssMatchSet struct {
	// A friendly name or description for the XssMatchSet.
	Name *StringExpr `json:"Name,omitempty"`

	// The parts of web requests that you want to inspect for cross-site
	// scripting attacks.
	XssMatchTuples *WAFRegionalXssMatchSetXssMatchTupleList `json:"XssMatchTuples,omitempty"`
}

// CfnResourceType returns AWS::WAFRegional::XssMatchSet to implement the ResourceProperties interface
func (s WAFRegionalXssMatchSet) CfnResourceType() string {
	return "AWS::WAFRegional::XssMatchSet"
}

// WorkSpacesWorkspace represents AWS::WorkSpaces::Workspace
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html
type WorkSpacesWorkspace struct {
	// The identifier of the bundle from which you want to create the
	// workspace. A bundle specifies the details of the workspace, such as
	// the installed applications and the size of CPU, memory, and storage.
	// Use the DescribeWorkspaceBundles action to list the bundles that AWS
	// offers.
	BundleId *StringExpr `json:"BundleId,omitempty"`

	// The identifier of the AWS Directory Service directory in which you
	// want to create the workspace. The directory must already be registered
	// with Amazon WorkSpaces. Use the DescribeWorkspaceDirectories action to
	// list the directories that are available.
	DirectoryId *StringExpr `json:"DirectoryId,omitempty"`

	// The name of the user to which the workspace is assigned. This user
	// name must exist in the specified AWS Directory Service directory.
	UserName *StringExpr `json:"UserName,omitempty"`

	// Indicates whether Amazon WorkSpaces encrypts data stored on the root
	// volume (C: drive).
	RootVolumeEncryptionEnabled *BoolExpr `json:"RootVolumeEncryptionEnabled,omitempty"`

	// Indicates whether Amazon WorkSpaces encrypts data stored on the user
	// volume (D: drive).
	UserVolumeEncryptionEnabled *BoolExpr `json:"UserVolumeEncryptionEnabled,omitempty"`

	// The AWS Key Management Service (AWS KMS) key ID that Amazon WorkSpaces
	// uses to encrypt data stored on your workspace.
	VolumeEncryptionKey *StringExpr `json:"VolumeEncryptionKey,omitempty"`
}

// CfnResourceType returns AWS::WorkSpaces::Workspace to implement the ResourceProperties interface
func (s WorkSpacesWorkspace) CfnResourceType() string {
	return "AWS::WorkSpaces::Workspace"
}

// APIGatewayApiKeyStageKey represents Amazon API Gateway ApiKey StageKey
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-apikey-stagekey.html
type APIGatewayApiKeyStageKey struct {
	// The ID of a RestApi resource that includes the stage with which you
	// want to associate the API key.
	RestApiId *StringExpr `json:"RestApiId,omitempty"`

	// The name of the stage with which to associate the API key. The stage
	// must be included in the RestApi resource that you specified in the
	// RestApiId property.
	StageName *StringExpr `json:"StageName,omitempty"`
}

// APIGatewayApiKeyStageKeyList represents a list of APIGatewayApiKeyStageKey
type APIGatewayApiKeyStageKeyList []APIGatewayApiKeyStageKey

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayApiKeyStageKeyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayApiKeyStageKey{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayApiKeyStageKeyList{item}
		return nil
	}
	list := []APIGatewayApiKeyStageKey{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayApiKeyStageKeyList(list)
		return nil
	}
	return err
}

// APIGatewayDeploymentStageDescription represents Amazon API Gateway Deployment StageDescription
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html
type APIGatewayDeploymentStageDescription struct {
	// Indicates whether cache clustering is enabled for the stage.
	CacheClusterEnabled *BoolExpr `json:"CacheClusterEnabled,omitempty"`

	// The size of the stage's cache cluster.
	CacheClusterSize *StringExpr `json:"CacheClusterSize,omitempty"`

	// Indicates whether the cached responses are encrypted.
	CacheDataEncrypted *BoolExpr `json:"CacheDataEncrypted,omitempty"`

	// The time-to-live (TTL) period, in seconds, that specifies how long API
	// Gateway caches responses.
	CacheTtlInSeconds *IntegerExpr `json:"CacheTtlInSeconds,omitempty"`

	// Indicates whether responses are cached and returned for requests. You
	// must enable a cache cluster on the stage to cache responses. For more
	// information, see Enable API Gateway Caching in a Stage to Enhance API
	// Performance in the API Gateway Developer Guide.
	CachingEnabled *BoolExpr `json:"CachingEnabled,omitempty"`

	// The identifier of the client certificate that API Gateway uses to call
	// your integration endpoints in the stage.
	ClientCertificateId *StringExpr `json:"ClientCertificateId,omitempty"`

	// Indicates whether data trace logging is enabled for methods in the
	// stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
	DataTraceEnabled *BoolExpr `json:"DataTraceEnabled,omitempty"`

	// A description of the purpose of the stage.
	Description *StringExpr `json:"Description,omitempty"`

	// The version identifier of the API documentation snapshot.
	DocumentationVersion *StringExpr `json:"DocumentationVersion,omitempty"`

	// The logging level for this method. For valid values, see the
	// loggingLevel property of the Stage resource in the Amazon API Gateway
	// API Reference.
	LoggingLevel *StringExpr `json:"LoggingLevel,omitempty"`

	// Configures settings for all of the stage's methods.
	MethodSettings *APIGatewayDeploymentMethodSettingList `json:"MethodSettings,omitempty"`

	// Indicates whether Amazon CloudWatch metrics are enabled for methods in
	// the stage.
	MetricsEnabled *BoolExpr `json:"MetricsEnabled,omitempty"`

	// The number of burst requests per second that API Gateway permits
	// across all APIs, stages, and methods in your AWS account. For more
	// information, see Manage API Request Throttling in the API Gateway
	// Developer Guide.
	ThrottlingBurstLimit *IntegerExpr `json:"ThrottlingBurstLimit,omitempty"`

	// The number of steady-state requests per second that API Gateway
	// permits across all APIs, stages, and methods in your AWS account. For
	// more information, see Manage API Request Throttling in the API Gateway
	// Developer Guide.
	ThrottlingRateLimit *IntegerExpr `json:"ThrottlingRateLimit,omitempty"`

	// A map that defines the stage variables. Variable names must consist of
	// alphanumeric characters, and the values must match the following
	// regular expression: [A-Za-z0-9-._~:/?#&amp;=,]+.
	Variables interface{} `json:"Variables,omitempty"`
}

// APIGatewayDeploymentStageDescriptionList represents a list of APIGatewayDeploymentStageDescription
type APIGatewayDeploymentStageDescriptionList []APIGatewayDeploymentStageDescription

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayDeploymentStageDescriptionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayDeploymentStageDescription{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayDeploymentStageDescriptionList{item}
		return nil
	}
	list := []APIGatewayDeploymentStageDescription{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayDeploymentStageDescriptionList(list)
		return nil
	}
	return err
}

// APIGatewayDeploymentMethodSetting represents Amazon API Gateway Deployment MethodSetting
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html
type APIGatewayDeploymentMethodSetting struct {
	// Indicates whether the cached responses are encrypted.
	CacheDataEncrypted *BoolExpr `json:"CacheDataEncrypted,omitempty"`

	// The time-to-live (TTL) period, in seconds, that specifies how long API
	// Gateway caches responses.
	CacheTtlInSeconds *IntegerExpr `json:"CacheTtlInSeconds,omitempty"`

	// Indicates whether responses are cached and returned for requests. You
	// must enable a cache cluster on the stage to cache responses. For more
	// information, see Enable API Gateway Caching in a Stage to Enhance API
	// Performance in the API Gateway Developer Guide.
	CachingEnabled *BoolExpr `json:"CachingEnabled,omitempty"`

	// Indicates whether data trace logging is enabled for methods in the
	// stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
	DataTraceEnabled *BoolExpr `json:"DataTraceEnabled,omitempty"`

	// The HTTP method.
	HttpMethod *StringExpr `json:"HttpMethod,omitempty"`

	// The logging level for this method. For valid values, see the
	// loggingLevel property of the Stage resource in the Amazon API Gateway
	// API Reference.
	LoggingLevel *StringExpr `json:"LoggingLevel,omitempty"`

	// Indicates whether Amazon CloudWatch metrics are enabled for methods in
	// the stage.
	MetricsEnabled *BoolExpr `json:"MetricsEnabled,omitempty"`

	// The resource path for this method. Forward slashes (/) are encoded as
	// ~1 and the initial slash must include a forward slash. For example,
	// the path value /resource/subresource must be encoded as
	// /~1resource~1subresource. To specify the root path, use only a slash
	// (/).
	ResourcePath *StringExpr `json:"ResourcePath,omitempty"`

	// The number of burst requests per second that API Gateway permits
	// across all APIs, stages, and methods in your AWS account. For more
	// information, see Manage API Request Throttling in the API Gateway
	// Developer Guide.
	ThrottlingBurstLimit *IntegerExpr `json:"ThrottlingBurstLimit,omitempty"`

	// The number of steady-state requests per second that API Gateway
	// permits across all APIs, stages, and methods in your AWS account. For
	// more information, see Manage API Request Throttling in the API Gateway
	// Developer Guide.
	ThrottlingRateLimit *IntegerExpr `json:"ThrottlingRateLimit,omitempty"`
}

// APIGatewayDeploymentMethodSettingList represents a list of APIGatewayDeploymentMethodSetting
type APIGatewayDeploymentMethodSettingList []APIGatewayDeploymentMethodSetting

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayDeploymentMethodSettingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayDeploymentMethodSetting{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayDeploymentMethodSettingList{item}
		return nil
	}
	list := []APIGatewayDeploymentMethodSetting{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayDeploymentMethodSettingList(list)
		return nil
	}
	return err
}

// APIGatewayDocumentationPartLocation represents Amazon API Gateway DocumentationPart Location
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-documentationpart-location.html
type APIGatewayDocumentationPartLocation struct {
	// The HTTP verb of a method.
	Method *StringExpr `json:"Method,omitempty"`

	// The name of the targeted API entity.
	Name *StringExpr `json:"Name,omitempty"`

	// The URL path of the target.
	Path *StringExpr `json:"Path,omitempty"`

	// The HTTP status code of a response.
	StatusCode *StringExpr `json:"StatusCode,omitempty"`

	// The type of API entity that the documentation content applies to.
	Type *StringExpr `json:"Type,omitempty"`
}

// APIGatewayDocumentationPartLocationList represents a list of APIGatewayDocumentationPartLocation
type APIGatewayDocumentationPartLocationList []APIGatewayDocumentationPartLocation

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayDocumentationPartLocationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayDocumentationPartLocation{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayDocumentationPartLocationList{item}
		return nil
	}
	list := []APIGatewayDocumentationPartLocation{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayDocumentationPartLocationList(list)
		return nil
	}
	return err
}

// APIGatewayDomainNameEndpointConfiguration represents Amazon API Gateway DomainName EndpointConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-domainname-endpointconfiguration.html
type APIGatewayDomainNameEndpointConfiguration struct {
	// A list of endpoint types of an API or its custom domain name. For an
	// edge-optimized API and its custom domain name, the endpoint type is
	// EDGE. For a regional API and its custom domain name, the endpoint type
	// is REGIONAL.
	Types interface{} `json:"Types,omitempty"`
}

// APIGatewayDomainNameEndpointConfigurationList represents a list of APIGatewayDomainNameEndpointConfiguration
type APIGatewayDomainNameEndpointConfigurationList []APIGatewayDomainNameEndpointConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayDomainNameEndpointConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayDomainNameEndpointConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayDomainNameEndpointConfigurationList{item}
		return nil
	}
	list := []APIGatewayDomainNameEndpointConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayDomainNameEndpointConfigurationList(list)
		return nil
	}
	return err
}

// APIGatewayMethodIntegration represents Amazon API Gateway Method Integration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html
type APIGatewayMethodIntegration struct {
	// A list of request parameters whose values API Gateway caches.
	CacheKeyParameters interface{} `json:"CacheKeyParameters,omitempty"`

	// An API-specific tag group of related cached parameters.
	CacheNamespace *StringExpr `json:"CacheNamespace,omitempty"`

	// Specifies how to handle request payload content type conversions.
	// Valid values are:
	ContentHandling *StringExpr `json:"ContentHandling,omitempty"`

	// The credentials that are required for the integration. To specify an
	// AWS Identity and Access Management (IAM) role that API Gateway
	// assumes, specify the role's Amazon Resource Name (ARN). To require
	// that the caller's identity be passed through from the request, specify
	// arn:aws:iam::*:user/*.
	Credentials *StringExpr `json:"Credentials,omitempty"`

	// The integration's HTTP method type.
	IntegrationHttpMethod *StringExpr `json:"IntegrationHttpMethod,omitempty"`

	// The response that API Gateway provides after a method's backend
	// completes processing a request. API Gateway intercepts the response
	// from the backend so that you can control how API Gateway surfaces
	// backend responses. For example, you can map the backend status codes
	// to codes that you define.
	IntegrationResponses *APIGatewayMethodIntegrationIntegrationResponseList `json:"IntegrationResponses,omitempty"`

	// Indicates when API Gateway passes requests to the targeted backend.
	// This behavior depends on the request's Content-Type header and whether
	// you defined a mapping template for it.
	PassthroughBehavior *StringExpr `json:"PassthroughBehavior,omitempty"`

	// The request parameters that API Gateway sends with the backend
	// request. Specify request parameters as key-value pairs
	// (string-to-string mappings), with a destination as the key and a
	// source as the value.
	RequestParameters interface{} `json:"RequestParameters,omitempty"`

	// A map of Apache Velocity templates that are applied on the request
	// payload. The template that API Gateway uses is based on the value of
	// the Content-Type header that's sent by the client. The content type
	// value is the key, and the template is the value (specified as a
	// string), such as the following snippet:
	RequestTemplates interface{} `json:"RequestTemplates,omitempty"`

	// The type of backend that your method is running, such as HTTP or MOCK.
	// For all of the valid values, see the type property for the Integration
	// resource in the Amazon API Gateway REST API Reference.
	Type *StringExpr `json:"Type,omitempty"`

	// The Uniform Resource Identifier (URI) for the integration.
	Uri *StringExpr `json:"Uri,omitempty"`
}

// APIGatewayMethodIntegrationList represents a list of APIGatewayMethodIntegration
type APIGatewayMethodIntegrationList []APIGatewayMethodIntegration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayMethodIntegrationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayMethodIntegration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayMethodIntegrationList{item}
		return nil
	}
	list := []APIGatewayMethodIntegration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayMethodIntegrationList(list)
		return nil
	}
	return err
}

// APIGatewayMethodIntegrationIntegrationResponse represents Amazon API Gateway Method Integration IntegrationResponse
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration-integrationresponse.html
type APIGatewayMethodIntegrationIntegrationResponse struct {
	// Specifies how to handle request payload content type conversions.
	// Valid values are:
	ContentHandling *StringExpr `json:"ContentHandling,omitempty"`

	// The response parameters from the backend response that API Gateway
	// sends to the method response. Specify response parameters as key-value
	// pairs (string-to-string mappings).
	ResponseParameters interface{} `json:"ResponseParameters,omitempty"`

	// The templates that are used to transform the integration response
	// body. Specify templates as key-value pairs (string-to-string
	// mappings), with a content type as the key and a template as the value.
	// For more information, see API Gateway API Request and Response
	// Payload-Mapping Template Reference in the API Gateway Developer Guide.
	ResponseTemplates interface{} `json:"ResponseTemplates,omitempty"`

	// A regular expression that specifies which error strings or status
	// codes from the backend map to the integration response.
	SelectionPattern *StringExpr `json:"SelectionPattern,omitempty"`

	// The status code that API Gateway uses to map the integration response
	// to a MethodResponse status code.
	StatusCode *StringExpr `json:"StatusCode,omitempty"`
}

// APIGatewayMethodIntegrationIntegrationResponseList represents a list of APIGatewayMethodIntegrationIntegrationResponse
type APIGatewayMethodIntegrationIntegrationResponseList []APIGatewayMethodIntegrationIntegrationResponse

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayMethodIntegrationIntegrationResponseList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayMethodIntegrationIntegrationResponse{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayMethodIntegrationIntegrationResponseList{item}
		return nil
	}
	list := []APIGatewayMethodIntegrationIntegrationResponse{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayMethodIntegrationIntegrationResponseList(list)
		return nil
	}
	return err
}

// APIGatewayMethodMethodResponse represents Amazon API Gateway Method MethodResponse
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-methodresponse.html
type APIGatewayMethodMethodResponse struct {
	// The resources used for the response's content type. Specify response
	// models as key-value pairs (string-to-string maps), with a content type
	// as the key and a Model resource name as the value.
	ResponseModels interface{} `json:"ResponseModels,omitempty"`

	// Response parameters that API Gateway sends to the client that called a
	// method. Specify response parameters as key-value pairs
	// (string-to-Boolean maps), with a destination as the key and a Boolean
	// as the value. Specify the destination using the following pattern:
	// method.response.header.name, where the name is a valid, unique header
	// name. The Boolean specifies whether a parameter is required.
	ResponseParameters interface{} `json:"ResponseParameters,omitempty"`

	// The method response's status code, which you map to an
	// IntegrationResponse.
	StatusCode *StringExpr `json:"StatusCode,omitempty"`
}

// APIGatewayMethodMethodResponseList represents a list of APIGatewayMethodMethodResponse
type APIGatewayMethodMethodResponseList []APIGatewayMethodMethodResponse

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayMethodMethodResponseList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayMethodMethodResponse{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayMethodMethodResponseList{item}
		return nil
	}
	list := []APIGatewayMethodMethodResponse{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayMethodMethodResponseList(list)
		return nil
	}
	return err
}

// APIGatewayRestApiS3Location represents Amazon API Gateway RestApi S3Location
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-restapi-bodys3location.html
type APIGatewayRestApiS3Location struct {
	// The name of the S3 bucket where the OpenAPI file is stored.
	Bucket *StringExpr `json:"Bucket,omitempty"`

	// The Amazon S3 ETag (a file checksum) of the OpenAPI file. If you don't
	// specify a value, API Gateway skips ETag validation of your OpenAPI
	// file.
	ETag *StringExpr `json:"ETag,omitempty"`

	// The file name of the OpenAPI file (Amazon S3 object name).
	Key *StringExpr `json:"Key,omitempty"`

	// For versioning-enabled buckets, a specific version of the OpenAPI
	// file.
	Version *StringExpr `json:"Version,omitempty"`
}

// APIGatewayRestApiS3LocationList represents a list of APIGatewayRestApiS3Location
type APIGatewayRestApiS3LocationList []APIGatewayRestApiS3Location

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayRestApiS3LocationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayRestApiS3Location{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayRestApiS3LocationList{item}
		return nil
	}
	list := []APIGatewayRestApiS3Location{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayRestApiS3LocationList(list)
		return nil
	}
	return err
}

// APIGatewayRestApiEndpointConfiguration represents Amazon API Gateway RestApi EndpointConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html
type APIGatewayRestApiEndpointConfiguration struct {
	// A list of endpoint types of an API or its custom domain name. For an
	// edge-optimized API and its custom domain name, the endpoint type is
	// EDGE. For a regional API and its custom domain name, the endpoint type
	// is REGIONAL.
	Types interface{} `json:"Types,omitempty"`
}

// APIGatewayRestApiEndpointConfigurationList represents a list of APIGatewayRestApiEndpointConfiguration
type APIGatewayRestApiEndpointConfigurationList []APIGatewayRestApiEndpointConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayRestApiEndpointConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayRestApiEndpointConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayRestApiEndpointConfigurationList{item}
		return nil
	}
	list := []APIGatewayRestApiEndpointConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayRestApiEndpointConfigurationList(list)
		return nil
	}
	return err
}

// APIGatewayStageMethodSetting represents Amazon API Gateway Stage MethodSetting
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-methodsetting.html
type APIGatewayStageMethodSetting struct {
	// Indicates whether the cached responses are encrypted.
	CacheDataEncrypted *BoolExpr `json:"CacheDataEncrypted,omitempty"`

	// The time-to-live (TTL) period, in seconds, that specifies how long API
	// Gateway caches responses.
	CacheTtlInSeconds *IntegerExpr `json:"CacheTtlInSeconds,omitempty"`

	// Indicates whether responses are cached and returned for requests. You
	// must enable a cache cluster on the stage to cache responses.
	CachingEnabled *BoolExpr `json:"CachingEnabled,omitempty"`

	// Indicates whether data trace logging is enabled for methods in the
	// stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
	DataTraceEnabled *BoolExpr `json:"DataTraceEnabled,omitempty"`

	// The HTTP method.
	HttpMethod *StringExpr `json:"HttpMethod,omitempty"`

	// The logging level for this method. For valid values, see the
	// loggingLevel property of the Stage resource in the Amazon API Gateway
	// API Reference.
	LoggingLevel *StringExpr `json:"LoggingLevel,omitempty"`

	// Indicates whether Amazon CloudWatch metrics are enabled for methods in
	// the stage.
	MetricsEnabled *BoolExpr `json:"MetricsEnabled,omitempty"`

	// The resource path for this method. Forward slashes (/) are encoded as
	// ~1 and the initial slash must include a forward slash. For example,
	// the path value /resource/subresource must be encoded as
	// /~1resource~1subresource. To specify the root path, use only a slash
	// (/).
	ResourcePath *StringExpr `json:"ResourcePath,omitempty"`

	// The number of burst requests per second that API Gateway permits
	// across all APIs, stages, and methods in your AWS account. For more
	// information, see Manage API Request Throttling in the API Gateway
	// Developer Guide.
	ThrottlingBurstLimit *IntegerExpr `json:"ThrottlingBurstLimit,omitempty"`

	// The number of steady-state requests per second that API Gateway
	// permits across all APIs, stages, and methods in your AWS account. For
	// more information, see Manage API Request Throttling in the API Gateway
	// Developer Guide.
	ThrottlingRateLimit *IntegerExpr `json:"ThrottlingRateLimit,omitempty"`
}

// APIGatewayStageMethodSettingList represents a list of APIGatewayStageMethodSetting
type APIGatewayStageMethodSettingList []APIGatewayStageMethodSetting

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayStageMethodSettingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayStageMethodSetting{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayStageMethodSettingList{item}
		return nil
	}
	list := []APIGatewayStageMethodSetting{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayStageMethodSettingList(list)
		return nil
	}
	return err
}

// APIGatewayUsagePlanApiStage represents Amazon API Gateway UsagePlan ApiStage
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html
type APIGatewayUsagePlanApiStage struct {
	// The ID of an API that is in the specified Stage property that you want
	// to associate with the usage plan.
	ApiId *StringExpr `json:"ApiId,omitempty"`

	// The name of an API Gateway stage to associate with the usage plan.
	Stage *StringExpr `json:"Stage,omitempty"`
}

// APIGatewayUsagePlanApiStageList represents a list of APIGatewayUsagePlanApiStage
type APIGatewayUsagePlanApiStageList []APIGatewayUsagePlanApiStage

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayUsagePlanApiStageList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayUsagePlanApiStage{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayUsagePlanApiStageList{item}
		return nil
	}
	list := []APIGatewayUsagePlanApiStage{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayUsagePlanApiStageList(list)
		return nil
	}
	return err
}

// APIGatewayUsagePlanQuotaSettings represents Amazon API Gateway UsagePlan QuotaSettings
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-quotasettings.html
type APIGatewayUsagePlanQuotaSettings struct {
	// The maximum number of requests that users can make within the
	// specified time period.
	Limit *IntegerExpr `json:"Limit,omitempty"`

	// For the initial time period, the number of requests to subtract from
	// the specified limit. When you first implement a usage plan, the plan
	// might start in the middle of the week or month. With this property,
	// you can decrease the limit for this initial time period.
	Offset *IntegerExpr `json:"Offset,omitempty"`

	// The time period for which the maximum limit of requests applies, such
	// as DAY or WEEK. For valid values, see the period property for the
	// UsagePlan resource in the Amazon API Gateway REST API Reference.
	Period *StringExpr `json:"Period,omitempty"`
}

// APIGatewayUsagePlanQuotaSettingsList represents a list of APIGatewayUsagePlanQuotaSettings
type APIGatewayUsagePlanQuotaSettingsList []APIGatewayUsagePlanQuotaSettings

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayUsagePlanQuotaSettingsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayUsagePlanQuotaSettings{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayUsagePlanQuotaSettingsList{item}
		return nil
	}
	list := []APIGatewayUsagePlanQuotaSettings{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayUsagePlanQuotaSettingsList(list)
		return nil
	}
	return err
}

// APIGatewayUsagePlanThrottleSettings represents Amazon API Gateway UsagePlan ThrottleSettings
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-throttlesettings.html
type APIGatewayUsagePlanThrottleSettings struct {
	// The maximum API request rate limit over a time ranging from one to a
	// few seconds. The maximum API request rate limit depends on whether the
	// underlying token bucket is at its full capacity. For more information
	// about request throttling, see Manage API Request Throttling in the API
	// Gateway Developer Guide.
	BurstLimit *IntegerExpr `json:"BurstLimit,omitempty"`

	// The API request steady-state rate limit (average requests per second
	// over an extended period of time). For more information about request
	// throttling, see Manage API Request Throttling in the API Gateway
	// Developer Guide.
	RateLimit *IntegerExpr `json:"RateLimit,omitempty"`
}

// APIGatewayUsagePlanThrottleSettingsList represents a list of APIGatewayUsagePlanThrottleSettings
type APIGatewayUsagePlanThrottleSettingsList []APIGatewayUsagePlanThrottleSettings

// UnmarshalJSON sets the object from the provided JSON representation
func (l *APIGatewayUsagePlanThrottleSettingsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := APIGatewayUsagePlanThrottleSettings{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = APIGatewayUsagePlanThrottleSettingsList{item}
		return nil
	}
	list := []APIGatewayUsagePlanThrottleSettings{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = APIGatewayUsagePlanThrottleSettingsList(list)
		return nil
	}
	return err
}

// ApplicationAutoScalingScalingPolicyCustomizedMetricSpecification represents Application Auto Scaling ScalingPolicy CustomizedMetricSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html
type ApplicationAutoScalingScalingPolicyCustomizedMetricSpecification struct {
	// The dimensions of the metric. Duplicates not allowed.
	Dimensions *ApplicationAutoScalingScalingPolicyMetricDimensionList `json:"Dimensions,omitempty"`

	// The name of the metric.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// The namespace of the metric.
	Namespace *StringExpr `json:"Namespace,omitempty"`

	// The statistic of the metric.
	Statistic *StringExpr `json:"Statistic,omitempty"`

	// The unit of the metric.
	Unit *StringExpr `json:"Unit,omitempty"`
}

// ApplicationAutoScalingScalingPolicyCustomizedMetricSpecificationList represents a list of ApplicationAutoScalingScalingPolicyCustomizedMetricSpecification
type ApplicationAutoScalingScalingPolicyCustomizedMetricSpecificationList []ApplicationAutoScalingScalingPolicyCustomizedMetricSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ApplicationAutoScalingScalingPolicyCustomizedMetricSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ApplicationAutoScalingScalingPolicyCustomizedMetricSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ApplicationAutoScalingScalingPolicyCustomizedMetricSpecificationList{item}
		return nil
	}
	list := []ApplicationAutoScalingScalingPolicyCustomizedMetricSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ApplicationAutoScalingScalingPolicyCustomizedMetricSpecificationList(list)
		return nil
	}
	return err
}

// ApplicationAutoScalingScalingPolicyMetricDimension represents Application Auto Scaling ScalingPolicy MetricDimension
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-metricdimension.html
type ApplicationAutoScalingScalingPolicyMetricDimension struct {
	// The name of the dimension.
	Name *StringExpr `json:"Name,omitempty"`

	// The value of the dimension.
	Value *StringExpr `json:"Value,omitempty"`
}

// ApplicationAutoScalingScalingPolicyMetricDimensionList represents a list of ApplicationAutoScalingScalingPolicyMetricDimension
type ApplicationAutoScalingScalingPolicyMetricDimensionList []ApplicationAutoScalingScalingPolicyMetricDimension

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ApplicationAutoScalingScalingPolicyMetricDimensionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ApplicationAutoScalingScalingPolicyMetricDimension{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ApplicationAutoScalingScalingPolicyMetricDimensionList{item}
		return nil
	}
	list := []ApplicationAutoScalingScalingPolicyMetricDimension{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ApplicationAutoScalingScalingPolicyMetricDimensionList(list)
		return nil
	}
	return err
}

// ApplicationAutoScalingScalingPolicyPredefinedMetricSpecification represents Application Auto Scaling ScalingPolicy PredefinedMetricSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-predefinedmetricspecification.html
type ApplicationAutoScalingScalingPolicyPredefinedMetricSpecification struct {
	// The metric type.
	PredefinedMetricType *StringExpr `json:"PredefinedMetricType,omitempty"`

	// This property is reserved for future use.
	ResourceLabel *StringExpr `json:"ResourceLabel,omitempty"`
}

// ApplicationAutoScalingScalingPolicyPredefinedMetricSpecificationList represents a list of ApplicationAutoScalingScalingPolicyPredefinedMetricSpecification
type ApplicationAutoScalingScalingPolicyPredefinedMetricSpecificationList []ApplicationAutoScalingScalingPolicyPredefinedMetricSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ApplicationAutoScalingScalingPolicyPredefinedMetricSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ApplicationAutoScalingScalingPolicyPredefinedMetricSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ApplicationAutoScalingScalingPolicyPredefinedMetricSpecificationList{item}
		return nil
	}
	list := []ApplicationAutoScalingScalingPolicyPredefinedMetricSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ApplicationAutoScalingScalingPolicyPredefinedMetricSpecificationList(list)
		return nil
	}
	return err
}

// ApplicationAutoScalingScalingPolicyStepScalingPolicyConfiguration represents Application Auto Scaling ScalingPolicy StepScalingPolicyConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html
type ApplicationAutoScalingScalingPolicyStepScalingPolicyConfiguration struct {
	// Specifies whether the ScalingAdjustment value in the StepAdjustment
	// property is an absolute number or a percentage of the current
	// capacity. For valid values, see the AdjustmentType content for the
	// StepScalingPolicyConfiguration data type in the Application Auto
	// Scaling API Reference.
	AdjustmentType *StringExpr `json:"AdjustmentType,omitempty"`

	// The amount of time, in seconds, after a scaling activity completes
	// before any further trigger-related scaling activities can start. For
	// more information, see the Cooldown content for the
	// StepScalingPolicyConfiguration data type in the Application Auto
	// Scaling API Reference.
	Cooldown *IntegerExpr `json:"Cooldown,omitempty"`

	// The aggregation type for the CloudWatch metrics. You can specify
	// Minimum, Maximum, or Average. By default, AWS CloudFormation specifies
	// Average. For more information, see Aggregation in the Amazon
	// CloudWatch User Guide.
	MetricAggregationType *StringExpr `json:"MetricAggregationType,omitempty"`

	// The minimum number of resources to adjust when a scaling activity is
	// triggered. If you specify PercentChangeInCapacity for the adjustment
	// type, the scaling policy scales the target by this amount.
	MinAdjustmentMagnitude *IntegerExpr `json:"MinAdjustmentMagnitude,omitempty"`

	// A set of adjustments that enable you to scale based on the size of the
	// alarm breach.
	StepAdjustments *ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustmentList `json:"StepAdjustments,omitempty"`
}

// ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationList represents a list of ApplicationAutoScalingScalingPolicyStepScalingPolicyConfiguration
type ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationList []ApplicationAutoScalingScalingPolicyStepScalingPolicyConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ApplicationAutoScalingScalingPolicyStepScalingPolicyConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationList{item}
		return nil
	}
	list := []ApplicationAutoScalingScalingPolicyStepScalingPolicyConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationList(list)
		return nil
	}
	return err
}

// ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustment represents Application Auto Scaling ScalingPolicy StepScalingPolicyConfiguration StepAdjustment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html
type ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustment struct {
	// The lower bound of the breach size. The lower bound is the difference
	// between the breach threshold and the aggregated CloudWatch metric
	// value. If the metric value is within the lower and upper bounds,
	// Application Auto Scaling triggers this step adjustment.
	MetricIntervalLowerBound *IntegerExpr `json:"MetricIntervalLowerBound,omitempty"`

	// The upper bound of the breach size. The upper bound is the difference
	// between the breach threshold and the CloudWatch metric value. If the
	// metric value is within the lower and upper bounds, Application Auto
	// Scaling triggers this step adjustment.
	MetricIntervalUpperBound *IntegerExpr `json:"MetricIntervalUpperBound,omitempty"`

	// The amount by which to scale. The adjustment is based on the value
	// that you specified in the AdjustmentType property (either an absolute
	// number or a percentage). A positive value adds to the current capacity
	// and a negative number subtracts from the current capacity.
	ScalingAdjustment *IntegerExpr `json:"ScalingAdjustment,omitempty"`
}

// ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustmentList represents a list of ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustment
type ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustmentList []ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustment

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustmentList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustment{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustmentList{item}
		return nil
	}
	list := []ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustment{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ApplicationAutoScalingScalingPolicyStepScalingPolicyConfigurationStepAdjustmentList(list)
		return nil
	}
	return err
}

// ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfiguration represents Application Auto Scaling ScalingPolicy TargetTrackingScalingPolicyConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html
type ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfiguration struct {
	// This property is reserved for future use.
	CustomizedMetricSpecification *ApplicationAutoScalingScalingPolicyCustomizedMetricSpecification `json:"CustomizedMetricSpecification,omitempty"`

	// A predefined metric.
	PredefinedMetricSpecification *ApplicationAutoScalingScalingPolicyPredefinedMetricSpecification `json:"PredefinedMetricSpecification,omitempty"`

	// The amount of time, in seconds, after a scale in activity completes
	// before another scale in activity can start.
	ScaleInCooldown *IntegerExpr `json:"ScaleInCooldown,omitempty"`

	// The amount of time, in seconds, after a scale out activity completes
	// before another scale out activity can start.
	ScaleOutCooldown *IntegerExpr `json:"ScaleOutCooldown,omitempty"`

	// The target value for the metric.
	TargetValue interface{} `json:"TargetValue,omitempty"`
}

// ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfigurationList represents a list of ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfiguration
type ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfigurationList []ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfigurationList{item}
		return nil
	}
	list := []ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ApplicationAutoScalingScalingPolicyTargetTrackingScalingPolicyConfigurationList(list)
		return nil
	}
	return err
}

// ApplicationAutoScalingScalableTargetScalableTargetAction represents Application Auto Scaling ScalableTarget ScalableTargetAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scalabletargetaction.html
type ApplicationAutoScalingScalableTargetScalableTargetAction struct {
	// The maximum capacity.
	MaxCapacity interface{} `json:"MaxCapacity,omitempty"`

	// The minimum capacity.
	MinCapacity interface{} `json:"MinCapacity,omitempty"`
}

// ApplicationAutoScalingScalableTargetScalableTargetActionList represents a list of ApplicationAutoScalingScalableTargetScalableTargetAction
type ApplicationAutoScalingScalableTargetScalableTargetActionList []ApplicationAutoScalingScalableTargetScalableTargetAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ApplicationAutoScalingScalableTargetScalableTargetActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ApplicationAutoScalingScalableTargetScalableTargetAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ApplicationAutoScalingScalableTargetScalableTargetActionList{item}
		return nil
	}
	list := []ApplicationAutoScalingScalableTargetScalableTargetAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ApplicationAutoScalingScalableTargetScalableTargetActionList(list)
		return nil
	}
	return err
}

// ApplicationAutoScalingScalableTargetScheduledAction represents Application Auto Scaling ScalableTarget ScheduledAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html
type ApplicationAutoScalingScalableTargetScheduledAction struct {
	// The date and time that the action is scheduled to end.
	EndTime interface{} `json:"EndTime,omitempty"`

	// The new minimum and maximum capacity. You can set both values or just
	// one. During the scheduled time, if the current capacity is below the
	// minimum capacity, Application Auto Scaling scales out to the minimum
	// capacity. If the current capacity is above the maximum capacity,
	// Application Auto Scaling scales in to the maximum capacity.
	ScalableTargetAction *ApplicationAutoScalingScalableTargetScalableTargetAction `json:"ScalableTargetAction,omitempty"`

	// The schedule for this action. The following formats are supported:
	Schedule interface{} `json:"Schedule,omitempty"`

	// The name of the scheduled action. For constraints, see the
	// ScheduledAction data type in the Application Auto Scaling API
	// Reference.
	ScheduledActionName interface{} `json:"ScheduledActionName,omitempty"`

	// The date and time that the action is scheduled to begin.
	StartTime interface{} `json:"StartTime,omitempty"`
}

// ApplicationAutoScalingScalableTargetScheduledActionList represents a list of ApplicationAutoScalingScalableTargetScheduledAction
type ApplicationAutoScalingScalableTargetScheduledActionList []ApplicationAutoScalingScalableTargetScheduledAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ApplicationAutoScalingScalableTargetScheduledActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ApplicationAutoScalingScalableTargetScheduledAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ApplicationAutoScalingScalableTargetScheduledActionList{item}
		return nil
	}
	list := []ApplicationAutoScalingScalableTargetScheduledAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ApplicationAutoScalingScalableTargetScheduledActionList(list)
		return nil
	}
	return err
}

// AutoScalingBlockDeviceMapping represents AWS CloudFormation AutoScaling Block Device Mapping Property Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html
type AutoScalingBlockDeviceMapping struct {
	// The name of the device within Amazon EC2.
	DeviceName *StringExpr `json:"DeviceName,omitempty"`

	// The Amazon Elastic Block Store volume information.
	Ebs *AutoScalingEBSBlockDevice `json:"Ebs,omitempty"`

	// Suppresses the device mapping. If NoDevice is set to true for the root
	// device, the instance might fail the Amazon EC2 health check. Auto
	// Scaling launches a replacement instance if the instance fails the
	// health check.
	NoDevice *BoolExpr `json:"NoDevice,omitempty"`

	// The name of the virtual device. The name must be in the form
	// ephemeralX where X is a number starting from zero (0), for example,
	// ephemeral0.
	VirtualName *StringExpr `json:"VirtualName,omitempty"`
}

// AutoScalingBlockDeviceMappingList represents a list of AutoScalingBlockDeviceMapping
type AutoScalingBlockDeviceMappingList []AutoScalingBlockDeviceMapping

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingBlockDeviceMappingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingBlockDeviceMapping{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingBlockDeviceMappingList{item}
		return nil
	}
	list := []AutoScalingBlockDeviceMapping{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingBlockDeviceMappingList(list)
		return nil
	}
	return err
}

// AutoScalingEBSBlockDevice represents AWS CloudFormation AutoScaling EBS Block Device Property Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html
type AutoScalingEBSBlockDevice struct {
	// Indicates whether to delete the volume when the instance is
	// terminated. By default, Auto Scaling uses true.
	DeleteOnTermination *BoolExpr `json:"DeleteOnTermination,omitempty"`

	// Indicates whether the volume is encrypted. Encrypted EBS volumes must
	// be attached to instances that support Amazon EBS encryption. Volumes
	// that you create from encrypted snapshots are automatically encrypted.
	// You cannot create an encrypted volume from an unencrypted snapshot or
	// an unencrypted volume from an encrypted snapshot.
	Encrypted *BoolExpr `json:"Encrypted,omitempty"`

	// The number of I/O operations per second (IOPS) that the volume
	// supports. The maximum ratio of IOPS to volume size is 30.
	Iops *IntegerExpr `json:"Iops,omitempty"`

	// The snapshot ID of the volume to use.
	SnapshotId *StringExpr `json:"SnapshotId,omitempty"`

	// The volume size, in Gibibytes (GiB). This can be a number from 1 –
	// 1024. If the volume type is EBS optimized, the minimum value is 10.
	// For more information about specifying the volume type, see
	// EbsOptimized in AWS::AutoScaling::LaunchConfiguration.
	VolumeSize *IntegerExpr `json:"VolumeSize,omitempty"`

	// The volume type. By default, Auto Scaling uses the standard volume
	// type. For more information, see Ebs in the Auto Scaling API Reference.
	VolumeType *StringExpr `json:"VolumeType,omitempty"`
}

// AutoScalingEBSBlockDeviceList represents a list of AutoScalingEBSBlockDevice
type AutoScalingEBSBlockDeviceList []AutoScalingEBSBlockDevice

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingEBSBlockDeviceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingEBSBlockDevice{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingEBSBlockDeviceList{item}
		return nil
	}
	list := []AutoScalingEBSBlockDevice{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingEBSBlockDeviceList(list)
		return nil
	}
	return err
}

// AutoScalingAutoScalingGroupLifecycleHookSpecification represents Auto Scaling AutoScalingGroup LifecycleHookSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html
type AutoScalingAutoScalingGroupLifecycleHookSpecification struct {
	// The action that the Auto Scaling group should take when the lifecycle
	// hook timeout elapses or if an unexpected failure occurs.
	DefaultResult interface{} `json:"DefaultResult,omitempty"`

	// The maximum time, in seconds, that can elapse before the lifecycle
	// hook times out. If the lifecycle hook times out, Auto Scaling performs
	// the default action.
	HeartbeatTimeout interface{} `json:"HeartbeatTimeout,omitempty"`

	// The name of the lifecycle hook. For constraints, see PutLifecycleHook
	// in the Auto Scaling API Reference.
	LifecycleHookName interface{} `json:"LifecycleHookName,omitempty"`

	// The state of the EC2 instance to attach the lifecycle hook to. For a
	// list of lifecycle hook types, see DescribeLifecycleHookTypes in the
	// Auto Scaling API Reference.
	LifecycleTransition interface{} `json:"LifecycleTransition,omitempty"`

	// Additional information to include when Auto Scaling sends a message to
	// the notification target. For constraints, see PutLifecycleHook in the
	// Auto Scaling API Reference.
	NotificationMetadata interface{} `json:"NotificationMetadata,omitempty"`

	// The Amazon Resource Name (ARN) of the target that Auto Scaling sends
	// notifications to when an instance is in the transition state for the
	// lifecycle hook. The notification target can be either an Amazon SQS
	// queue or an Amazon SNS topic.
	NotificationTargetARN interface{} `json:"NotificationTargetARN,omitempty"`

	// The ARN of the IAM role that allows the Auto Scaling group to publish
	// to the specified notification target.
	RoleARN interface{} `json:"RoleARN,omitempty"`
}

// AutoScalingAutoScalingGroupLifecycleHookSpecificationList represents a list of AutoScalingAutoScalingGroupLifecycleHookSpecification
type AutoScalingAutoScalingGroupLifecycleHookSpecificationList []AutoScalingAutoScalingGroupLifecycleHookSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingAutoScalingGroupLifecycleHookSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingAutoScalingGroupLifecycleHookSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingAutoScalingGroupLifecycleHookSpecificationList{item}
		return nil
	}
	list := []AutoScalingAutoScalingGroupLifecycleHookSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingAutoScalingGroupLifecycleHookSpecificationList(list)
		return nil
	}
	return err
}

// AutoScalingAutoScalingGroupMetricsCollection represents Auto Scaling AutoScalingGroup MetricsCollection
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html
type AutoScalingAutoScalingGroupMetricsCollection struct {
	// The frequency at which Auto Scaling sends aggregated data to
	// CloudWatch. For example, you can specify 1Minute to send aggregated
	// data to CloudWatch every minute.
	Granularity *StringExpr `json:"Granularity,omitempty"`

	// The list of metrics to collect. If you don't specify any metrics, all
	// metrics are enabled.
	Metrics interface{} `json:"Metrics,omitempty"`
}

// AutoScalingAutoScalingGroupMetricsCollectionList represents a list of AutoScalingAutoScalingGroupMetricsCollection
type AutoScalingAutoScalingGroupMetricsCollectionList []AutoScalingAutoScalingGroupMetricsCollection

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingAutoScalingGroupMetricsCollectionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingAutoScalingGroupMetricsCollection{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingAutoScalingGroupMetricsCollectionList{item}
		return nil
	}
	list := []AutoScalingAutoScalingGroupMetricsCollection{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingAutoScalingGroupMetricsCollectionList(list)
		return nil
	}
	return err
}

// AutoScalingAutoScalingGroupNotificationConfiguration represents Auto Scaling AutoScalingGroup NotificationConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html
type AutoScalingAutoScalingGroupNotificationConfiguration struct {
	// A list of event types that trigger a notification. Event types can
	// include any of the following types: autoscaling:EC2_INSTANCE_LAUNCH,
	// autoscaling:EC2_INSTANCE_LAUNCH_ERROR,
	// autoscaling:EC2_INSTANCE_TERMINATE,
	// autoscaling:EC2_INSTANCE_TERMINATE_ERROR, and
	// autoscaling:TEST_NOTIFICATION. For more information about event types,
	// see DescribeAutoScalingNotificationTypes in the Auto Scaling API
	// Reference.
	NotificationTypes interface{} `json:"NotificationTypes,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon Simple Notification
	// Service (SNS) topic.
	TopicARN *StringExpr `json:"TopicARN,omitempty"`
}

// AutoScalingAutoScalingGroupNotificationConfigurationList represents a list of AutoScalingAutoScalingGroupNotificationConfiguration
type AutoScalingAutoScalingGroupNotificationConfigurationList []AutoScalingAutoScalingGroupNotificationConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingAutoScalingGroupNotificationConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingAutoScalingGroupNotificationConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingAutoScalingGroupNotificationConfigurationList{item}
		return nil
	}
	list := []AutoScalingAutoScalingGroupNotificationConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingAutoScalingGroupNotificationConfigurationList(list)
		return nil
	}
	return err
}

// AutoScalingAutoScalingGroupTagProperty represents Auto Scaling AutoScalingGroup TagProperty
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html
type AutoScalingAutoScalingGroupTagProperty struct {
	// The key name of the tag.
	Key *StringExpr `json:"Key,omitempty"`

	// The value for the tag.
	Value *StringExpr `json:"Value,omitempty"`

	// Set to true if you want AWS CloudFormation to copy the tag to EC2
	// instances that are launched as part of the auto scaling group. Set to
	// false if you want the tag attached only to the auto scaling group and
	// not copied to any instances launched as part of the auto scaling
	// group.
	PropagateAtLaunch *BoolExpr `json:"PropagateAtLaunch,omitempty"`
}

// AutoScalingAutoScalingGroupTagPropertyList represents a list of AutoScalingAutoScalingGroupTagProperty
type AutoScalingAutoScalingGroupTagPropertyList []AutoScalingAutoScalingGroupTagProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingAutoScalingGroupTagPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingAutoScalingGroupTagProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingAutoScalingGroupTagPropertyList{item}
		return nil
	}
	list := []AutoScalingAutoScalingGroupTagProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingAutoScalingGroupTagPropertyList(list)
		return nil
	}
	return err
}

// AutoScalingScalingPolicyCustomizedMetricSpecification represents Auto Scaling ScalingPolicy CustomizedMetricSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html
type AutoScalingScalingPolicyCustomizedMetricSpecification struct {
	// The dimensions of the metric. Duplicates not allowed.
	Dimensions *AutoScalingScalingPolicyMetricDimensionList `json:"Dimensions,omitempty"`

	// The name of the metric.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// The namespace of the metric.
	Namespace *StringExpr `json:"Namespace,omitempty"`

	// The statistic of the metric.
	Statistic *StringExpr `json:"Statistic,omitempty"`

	// The unit of the metric.
	Unit *StringExpr `json:"Unit,omitempty"`
}

// AutoScalingScalingPolicyCustomizedMetricSpecificationList represents a list of AutoScalingScalingPolicyCustomizedMetricSpecification
type AutoScalingScalingPolicyCustomizedMetricSpecificationList []AutoScalingScalingPolicyCustomizedMetricSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingScalingPolicyCustomizedMetricSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingScalingPolicyCustomizedMetricSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingScalingPolicyCustomizedMetricSpecificationList{item}
		return nil
	}
	list := []AutoScalingScalingPolicyCustomizedMetricSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingScalingPolicyCustomizedMetricSpecificationList(list)
		return nil
	}
	return err
}

// AutoScalingScalingPolicyMetricDimension represents Auto Scaling ScalingPolicy MetricDimension
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html
type AutoScalingScalingPolicyMetricDimension struct {
	// The name of the dimension.
	Name *StringExpr `json:"Name,omitempty"`

	// The value of the dimension.
	Value *StringExpr `json:"Value,omitempty"`
}

// AutoScalingScalingPolicyMetricDimensionList represents a list of AutoScalingScalingPolicyMetricDimension
type AutoScalingScalingPolicyMetricDimensionList []AutoScalingScalingPolicyMetricDimension

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingScalingPolicyMetricDimensionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingScalingPolicyMetricDimension{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingScalingPolicyMetricDimensionList{item}
		return nil
	}
	list := []AutoScalingScalingPolicyMetricDimension{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingScalingPolicyMetricDimensionList(list)
		return nil
	}
	return err
}

// AutoScalingScalingPolicyPredefinedMetricSpecification represents Auto Scaling ScalingPolicy PredefinedMetricSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html
type AutoScalingScalingPolicyPredefinedMetricSpecification struct {
	// The metric type.
	PredefinedMetricType *StringExpr `json:"PredefinedMetricType,omitempty"`

	// Identifies the resource associated with the metric type.
	ResourceLabel *StringExpr `json:"ResourceLabel,omitempty"`
}

// AutoScalingScalingPolicyPredefinedMetricSpecificationList represents a list of AutoScalingScalingPolicyPredefinedMetricSpecification
type AutoScalingScalingPolicyPredefinedMetricSpecificationList []AutoScalingScalingPolicyPredefinedMetricSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingScalingPolicyPredefinedMetricSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingScalingPolicyPredefinedMetricSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingScalingPolicyPredefinedMetricSpecificationList{item}
		return nil
	}
	list := []AutoScalingScalingPolicyPredefinedMetricSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingScalingPolicyPredefinedMetricSpecificationList(list)
		return nil
	}
	return err
}

// AutoScalingScalingPolicyStepAdjustments represents Auto Scaling ScalingPolicy StepAdjustments
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html
type AutoScalingScalingPolicyStepAdjustments struct {
	// The lower bound of the breach size. The lower bound is the difference
	// between the breach threshold and the aggregated CloudWatch metric
	// value. If the metric value is within the lower and upper bounds, Auto
	// Scaling triggers this step adjustment.
	MetricIntervalLowerBound *IntegerExpr `json:"MetricIntervalLowerBound,omitempty"`

	// The upper bound of the breach size. The upper bound is the difference
	// between the breach threshold and the CloudWatch metric value. If the
	// metric value is within the lower and upper bounds, Auto Scaling
	// triggers this step adjustment.
	MetricIntervalUpperBound *IntegerExpr `json:"MetricIntervalUpperBound,omitempty"`

	// The amount by which to scale. The adjustment is based on the value
	// that you specified in the AdjustmentType property (either an absolute
	// number or a percentage). A positive value adds to the current capacity
	// and a negative number subtracts from the current capacity.
	ScalingAdjustment *IntegerExpr `json:"ScalingAdjustment,omitempty"`
}

// AutoScalingScalingPolicyStepAdjustmentsList represents a list of AutoScalingScalingPolicyStepAdjustments
type AutoScalingScalingPolicyStepAdjustmentsList []AutoScalingScalingPolicyStepAdjustments

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingScalingPolicyStepAdjustmentsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingScalingPolicyStepAdjustments{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingScalingPolicyStepAdjustmentsList{item}
		return nil
	}
	list := []AutoScalingScalingPolicyStepAdjustments{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingScalingPolicyStepAdjustmentsList(list)
		return nil
	}
	return err
}

// AutoScalingScalingPolicyTargetTrackingConfiguration represents Auto Scaling ScalingPolicy TargetTrackingConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html
type AutoScalingScalingPolicyTargetTrackingConfiguration struct {
	// A customized metric.
	CustomizedMetricSpecification *AutoScalingScalingPolicyCustomizedMetricSpecification `json:"CustomizedMetricSpecification,omitempty"`

	// Indicates whether to disable scale-in for the target tracking policy.
	// If true, the target tracking policy will not scale in the Auto Scaling
	// group. The default value is false.
	DisableScaleIn *BoolExpr `json:"DisableScaleIn,omitempty"`

	// A predefined metric.
	PredefinedMetricSpecification *AutoScalingScalingPolicyPredefinedMetricSpecification `json:"PredefinedMetricSpecification,omitempty"`

	// The target value for the metric.
	TargetValue interface{} `json:"TargetValue,omitempty"`
}

// AutoScalingScalingPolicyTargetTrackingConfigurationList represents a list of AutoScalingScalingPolicyTargetTrackingConfiguration
type AutoScalingScalingPolicyTargetTrackingConfigurationList []AutoScalingScalingPolicyTargetTrackingConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *AutoScalingScalingPolicyTargetTrackingConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := AutoScalingScalingPolicyTargetTrackingConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = AutoScalingScalingPolicyTargetTrackingConfigurationList{item}
		return nil
	}
	list := []AutoScalingScalingPolicyTargetTrackingConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = AutoScalingScalingPolicyTargetTrackingConfigurationList(list)
		return nil
	}
	return err
}

// BatchComputeEnvironmentComputeResources represents AWS Batch ComputeEnvironment ComputeResources
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html
type BatchComputeEnvironmentComputeResources struct {
	// The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role
	// applied to a SPOT compute environment.
	SpotIamFleetRole *StringExpr `json:"SpotIamFleetRole,omitempty"`

	// The maximum number of EC2 vCPUs that an environment can reach.
	MaxvCpus *IntegerExpr `json:"MaxvCpus,omitempty"`

	// The EC2 security group that is associated with instances launched in
	// the compute environment.
	SecurityGroupIds interface{} `json:"SecurityGroupIds,omitempty"`

	// The minimum percentage that a Spot Instance price must be when
	// compared with the On-Demand price for that instance type before
	// instances are launched. For example, if your bid percentage is 20%,
	// then the Spot price must be below 20% of the current On-Demand price
	// for that EC2 instance.
	BidPercentage *IntegerExpr `json:"BidPercentage,omitempty"`

	// The type of compute environment: EC2 or SPOT.
	Type *StringExpr `json:"Type,omitempty"`

	// The VPC subnets into which the compute resources are launched.
	Subnets interface{} `json:"Subnets,omitempty"`

	// The minimum number of EC2 vCPUs that an environment should maintain.
	MinvCpus *IntegerExpr `json:"MinvCpus,omitempty"`

	// The Amazon Machine Image (AMI) ID used for instances launched in the
	// compute environment.
	ImageId *StringExpr `json:"ImageId,omitempty"`

	// The Amazon ECS instance profile applied to Amazon EC2 instances in a
	// compute environment.
	InstanceRole *StringExpr `json:"InstanceRole,omitempty"`

	// The instances types that may launched.
	InstanceTypes interface{} `json:"InstanceTypes,omitempty"`

	// The EC2 key pair that is used for instances launched in the compute
	// environment.
	Ec2KeyPair *StringExpr `json:"Ec2KeyPair,omitempty"`

	// Key-value pair tags to be applied to instances that are launched in
	// the compute environment. For AWS Batch, these take the form of
	// "String1": "String2", where String1 is the tag key and String2 is the
	// tag value—for example, { "Name": "AWS Batch Instance - C4OnDemand"
	// }.
	Tags interface{} `json:"Tags,omitempty"`

	// The desired number of EC2 vCPUS in the compute environment.
	DesiredvCpus *IntegerExpr `json:"DesiredvCpus,omitempty"`
}

// BatchComputeEnvironmentComputeResourcesList represents a list of BatchComputeEnvironmentComputeResources
type BatchComputeEnvironmentComputeResourcesList []BatchComputeEnvironmentComputeResources

// UnmarshalJSON sets the object from the provided JSON representation
func (l *BatchComputeEnvironmentComputeResourcesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := BatchComputeEnvironmentComputeResources{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = BatchComputeEnvironmentComputeResourcesList{item}
		return nil
	}
	list := []BatchComputeEnvironmentComputeResources{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = BatchComputeEnvironmentComputeResourcesList(list)
		return nil
	}
	return err
}

// BatchJobDefinitionContainerProperties represents AWS Batch JobDefinition ContainerProperties
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-jobdefinition-containerproperties.html
type BatchJobDefinitionContainerProperties struct {
	// The mount points for data volumes in your container. This parameter
	// maps to Volumes in the Create a container section of the Docker Remote
	// API and the --volume option to docker run.
	MountPoints *BatchJobDefinitionMountPointsList `json:"MountPoints,omitempty"`

	// The user name to use inside the container. This parameter maps to User
	// in the Create a container section of the Docker Remote API and the
	// --user option to docker run.
	User *StringExpr `json:"User,omitempty"`

	// A list of data volumes used in a job.
	Volumes *BatchJobDefinitionVolumesList `json:"Volumes,omitempty"`

	// The command that is passed to the container. This parameter maps to
	// Cmd in the Create a container section of the Docker Remote API and the
	// COMMAND parameter to docker run.
	Command interface{} `json:"Command,omitempty"`

	// The hard limit (in MiB) of memory to present to the container. If your
	// container attempts to exceed the memory specified here, the container
	// is killed. This parameter maps to Memory in the Create a container
	// section of the Docker Remote API and the --memory option to docker
	// run.
	Memory *IntegerExpr `json:"Memory,omitempty"`

	// When this parameter is true, the container is given elevated
	// privileges on the host container instance (similar to the root user).
	// This parameter maps to Privileged in the Create a container section of
	// the Docker Remote API and the --privileged option to docker run.
	Privileged *BoolExpr `json:"Privileged,omitempty"`

	// The Amazon Resource Name (ARN) of the IAM role that the container can
	// assume for AWS permissions.
	JobRoleArn *StringExpr `json:"JobRoleArn,omitempty"`

	// The environment variables to pass to a container. This parameter maps
	// to Env in the Create a container section of the Docker Remote API and
	// the --env option to docker run.
	Environment *BatchJobDefinitionEnvironmentList `json:"Environment,omitempty"`

	// When this parameter is true, the container is given read-only access
	// to its root file system. This parameter maps to ReadonlyRootfs in the
	// Create a container section of the Docker Remote API and the
	// --read-only option to docker run.
	ReadonlyRootFilesystem *BoolExpr `json:"ReadonlyRootFilesystem,omitempty"`

	// A list of ulimits to set in the container. This parameter maps to
	// Ulimits in the Create a container section of the Docker Remote API and
	// the --ulimit option to docker run.
	Ulimits *BatchJobDefinitionUlimitList `json:"Ulimits,omitempty"`

	// The number of vCPUs reserved for the container. This parameter maps to
	// CpuShares in the Create a container section of the Docker Remote API
	// and the --cpu-shares option to docker run. Each vCPU is equivalent to
	// 1,024 CPU shares.
	Vcpus *IntegerExpr `json:"Vcpus,omitempty"`

	// The image used to start a container. This string is passed directly to
	// the Docker daemon. Images in the Docker Hub registry are available by
	// default. Other repositories are specified with
	// repository-url/image:tag . Up to 255 letters (uppercase and
	// lowercase), numbers, hyphens, underscores, colons, periods, forward
	// slashes, and number signs are allowed. This parameter maps to Image in
	// the Create a container section of the Docker Remote API and the IMAGE
	// parameter of docker run.
	Image *StringExpr `json:"Image,omitempty"`
}

// BatchJobDefinitionContainerPropertiesList represents a list of BatchJobDefinitionContainerProperties
type BatchJobDefinitionContainerPropertiesList []BatchJobDefinitionContainerProperties

// UnmarshalJSON sets the object from the provided JSON representation
func (l *BatchJobDefinitionContainerPropertiesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := BatchJobDefinitionContainerProperties{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = BatchJobDefinitionContainerPropertiesList{item}
		return nil
	}
	list := []BatchJobDefinitionContainerProperties{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = BatchJobDefinitionContainerPropertiesList(list)
		return nil
	}
	return err
}

// BatchJobDefinitionEnvironment represents AWS Batch JobDefinition Environment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-jobdefinition-environment.html
type BatchJobDefinitionEnvironment struct {
	// The value of the environment variable.
	Value *StringExpr `json:"Value,omitempty"`

	// The name of the environment variable.
	Name *StringExpr `json:"Name,omitempty"`
}

// BatchJobDefinitionEnvironmentList represents a list of BatchJobDefinitionEnvironment
type BatchJobDefinitionEnvironmentList []BatchJobDefinitionEnvironment

// UnmarshalJSON sets the object from the provided JSON representation
func (l *BatchJobDefinitionEnvironmentList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := BatchJobDefinitionEnvironment{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = BatchJobDefinitionEnvironmentList{item}
		return nil
	}
	list := []BatchJobDefinitionEnvironment{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = BatchJobDefinitionEnvironmentList(list)
		return nil
	}
	return err
}

// BatchJobDefinitionMountPoints represents AWS Batch JobDefinition MountPoints
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-jobdefinition-mountpoints.html
type BatchJobDefinitionMountPoints struct {
	// If this value is true, the container has read-only access to the
	// volume; otherwise, the container can write to the volume. The default
	// value is false.
	ReadOnly *BoolExpr `json:"ReadOnly,omitempty"`

	// The name of the volume to mount.
	SourceVolume *StringExpr `json:"SourceVolume,omitempty"`

	// The path on the container at which to mount the host volume.
	ContainerPath *StringExpr `json:"ContainerPath,omitempty"`
}

// BatchJobDefinitionMountPointsList represents a list of BatchJobDefinitionMountPoints
type BatchJobDefinitionMountPointsList []BatchJobDefinitionMountPoints

// UnmarshalJSON sets the object from the provided JSON representation
func (l *BatchJobDefinitionMountPointsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := BatchJobDefinitionMountPoints{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = BatchJobDefinitionMountPointsList{item}
		return nil
	}
	list := []BatchJobDefinitionMountPoints{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = BatchJobDefinitionMountPointsList(list)
		return nil
	}
	return err
}

// BatchJobDefinitionRetryStrategy represents AWS Batch JobDefinition RetryStrategy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-jobdefinition-retrystrategy.html
type BatchJobDefinitionRetryStrategy struct {
	// The number of times to move a job to the RUNNABLE status. You may
	// specify between 1 and 10 attempts. If attempts is greater than one,
	// the job is retried if it fails until it has moved to RUNNABLE that
	// many times.
	Attempts *IntegerExpr `json:"Attempts,omitempty"`
}

// BatchJobDefinitionRetryStrategyList represents a list of BatchJobDefinitionRetryStrategy
type BatchJobDefinitionRetryStrategyList []BatchJobDefinitionRetryStrategy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *BatchJobDefinitionRetryStrategyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := BatchJobDefinitionRetryStrategy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = BatchJobDefinitionRetryStrategyList{item}
		return nil
	}
	list := []BatchJobDefinitionRetryStrategy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = BatchJobDefinitionRetryStrategyList(list)
		return nil
	}
	return err
}

// BatchJobDefinitionUlimit represents AWS Batch JobDefinition Ulimit
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-jobdefinition-ulimit.html
type BatchJobDefinitionUlimit struct {
	// The soft limit for the ulimit type.
	SoftLimit *IntegerExpr `json:"SoftLimit,omitempty"`

	// The hard limit for the ulimit type.
	HardLimit *IntegerExpr `json:"HardLimit,omitempty"`

	// The type of the ulimit.
	Name *StringExpr `json:"Name,omitempty"`
}

// BatchJobDefinitionUlimitList represents a list of BatchJobDefinitionUlimit
type BatchJobDefinitionUlimitList []BatchJobDefinitionUlimit

// UnmarshalJSON sets the object from the provided JSON representation
func (l *BatchJobDefinitionUlimitList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := BatchJobDefinitionUlimit{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = BatchJobDefinitionUlimitList{item}
		return nil
	}
	list := []BatchJobDefinitionUlimit{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = BatchJobDefinitionUlimitList(list)
		return nil
	}
	return err
}

// BatchJobDefinitionVolumes represents AWS Batch JobDefinition Volumes
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-jobdefinition-volumes.html
type BatchJobDefinitionVolumes struct {
	// The contents of the Host parameter determine whether your data volume
	// persists on the host container instance and where it is stored. If the
	// host parameter is empty, then the Docker daemon assigns a host path
	// for your data volume, but the data is not guaranteed to persist after
	// the containers associated with it stop running.
	Host *BatchJobDefinitionVolumesHost `json:"Host,omitempty"`

	// The name of the volume. Up to 255 letters (uppercase and lowercase),
	// numbers, hyphens, and underscores are allowed. This name is referenced
	// in the SourceVolume parameter of container definition MountPoints.
	Name *StringExpr `json:"Name,omitempty"`
}

// BatchJobDefinitionVolumesList represents a list of BatchJobDefinitionVolumes
type BatchJobDefinitionVolumesList []BatchJobDefinitionVolumes

// UnmarshalJSON sets the object from the provided JSON representation
func (l *BatchJobDefinitionVolumesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := BatchJobDefinitionVolumes{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = BatchJobDefinitionVolumesList{item}
		return nil
	}
	list := []BatchJobDefinitionVolumes{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = BatchJobDefinitionVolumesList(list)
		return nil
	}
	return err
}

// BatchJobDefinitionVolumesHost represents AWS Batch JobDefinition VolumesHost
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-jobdefinition-volumeshost.html
type BatchJobDefinitionVolumesHost struct {
	// The path on the host container instance that is presented to the
	// container. If this parameter is empty, then the Docker daemon has
	// assigned a host path for you. If the VolumesHost parameter contains a
	// SourcePath file location, then the data volume persists at the
	// specified location on the host container instance until you delete it
	// manually. If the SourcePath value does not exist on the host container
	// instance, the Docker daemon creates it. If the location does exist,
	// the contents of the source path folder are exported.
	SourcePath *StringExpr `json:"SourcePath,omitempty"`
}

// BatchJobDefinitionVolumesHostList represents a list of BatchJobDefinitionVolumesHost
type BatchJobDefinitionVolumesHostList []BatchJobDefinitionVolumesHost

// UnmarshalJSON sets the object from the provided JSON representation
func (l *BatchJobDefinitionVolumesHostList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := BatchJobDefinitionVolumesHost{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = BatchJobDefinitionVolumesHostList{item}
		return nil
	}
	list := []BatchJobDefinitionVolumesHost{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = BatchJobDefinitionVolumesHostList(list)
		return nil
	}
	return err
}

// BatchJobQueueComputeEnvironmentOrder represents AWS Batch JobQueue ComputeEnvironmentOrder
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-jobqueue-computeenvironmentorder.html
type BatchJobQueueComputeEnvironmentOrder struct {
	// The Amazon Resource Name (ARN) of the compute environment.
	ComputeEnvironment *StringExpr `json:"ComputeEnvironment,omitempty"`

	// The order of the compute environment.
	Order *IntegerExpr `json:"Order,omitempty"`
}

// BatchJobQueueComputeEnvironmentOrderList represents a list of BatchJobQueueComputeEnvironmentOrder
type BatchJobQueueComputeEnvironmentOrderList []BatchJobQueueComputeEnvironmentOrder

// UnmarshalJSON sets the object from the provided JSON representation
func (l *BatchJobQueueComputeEnvironmentOrderList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := BatchJobQueueComputeEnvironmentOrder{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = BatchJobQueueComputeEnvironmentOrderList{item}
		return nil
	}
	list := []BatchJobQueueComputeEnvironmentOrder{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = BatchJobQueueComputeEnvironmentOrderList(list)
		return nil
	}
	return err
}

// Cloud9EnvironmentEC2Repository represents AWS Cloud9 EnvironmentEC2 Repository
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloud9-environmentec2-repository.html
type Cloud9EnvironmentEC2Repository struct {
	// The path within the development environment's default filesystem
	// location to clone the AWS CodeCommit repository into. For example,
	// /repository-name would clone the repository into the
	// /home/ec2-user/environment/repository-name directory in the
	// environment.
	PathComponent interface{} `json:"PathComponent,omitempty"`

	// The clone URL of the AWS CodeCommit repository to be cloned. For
	// example, for an AWS CodeCommit repository this might be
	// https://git-codecommit.us-east-2.amazonaws.com/v1/repos/repository-name.
	RepositoryUrl interface{} `json:"RepositoryUrl,omitempty"`
}

// Cloud9EnvironmentEC2RepositoryList represents a list of Cloud9EnvironmentEC2Repository
type Cloud9EnvironmentEC2RepositoryList []Cloud9EnvironmentEC2Repository

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Cloud9EnvironmentEC2RepositoryList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Cloud9EnvironmentEC2Repository{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Cloud9EnvironmentEC2RepositoryList{item}
		return nil
	}
	list := []Cloud9EnvironmentEC2Repository{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Cloud9EnvironmentEC2RepositoryList(list)
		return nil
	}
	return err
}

// CertificateManagerCertificateDomainValidationOption represents AWS Certificate Manager Certificate DomainValidationOption
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html
type CertificateManagerCertificateDomainValidationOption struct {
	// Fully Qualified Domain Name (FQDN) of the Certificate that you are
	// requesting.
	DomainName *StringExpr `json:"DomainName,omitempty"`

	// The domain that domain name registrars use to send validation emails.
	// Registrars use this value as the email address suffix when sending
	// emails to verify your identity. This value must be the same as the
	// domain name or a superdomain of the domain name. For more information,
	// see the ValidationDomain content for the DomainValidationOption data
	// type in the AWS Certificate Manager API Reference.
	ValidationDomain *StringExpr `json:"ValidationDomain,omitempty"`
}

// CertificateManagerCertificateDomainValidationOptionList represents a list of CertificateManagerCertificateDomainValidationOption
type CertificateManagerCertificateDomainValidationOptionList []CertificateManagerCertificateDomainValidationOption

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CertificateManagerCertificateDomainValidationOptionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CertificateManagerCertificateDomainValidationOption{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CertificateManagerCertificateDomainValidationOptionList{item}
		return nil
	}
	list := []CertificateManagerCertificateDomainValidationOption{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CertificateManagerCertificateDomainValidationOptionList(list)
		return nil
	}
	return err
}

// StackParameters represents AWS CloudFormation Stack Parameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack-parameters.html
type StackParameters struct {
}

// StackParametersList represents a list of StackParameters
type StackParametersList []StackParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *StackParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := StackParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = StackParametersList{item}
		return nil
	}
	list := []StackParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = StackParametersList(list)
		return nil
	}
	return err
}

// InterfaceLabel represents AWS CloudFormation Interface Label
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-label.html
type InterfaceLabel struct {
	// The default label that the AWS CloudFormation console uses to name a
	// parameter group or parameter.
	Default *StringExpr `json:"default,omitempty"`
}

// InterfaceLabelList represents a list of InterfaceLabel
type InterfaceLabelList []InterfaceLabel

// UnmarshalJSON sets the object from the provided JSON representation
func (l *InterfaceLabelList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := InterfaceLabel{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = InterfaceLabelList{item}
		return nil
	}
	list := []InterfaceLabel{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = InterfaceLabelList(list)
		return nil
	}
	return err
}

// InterfaceParameterGroup represents AWS CloudFormation Interface ParameterGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-parametergroup.html
type InterfaceParameterGroup struct {
	// A name for the parameter group.
	Label *InterfaceLabel `json:"Label,omitempty"`

	// A list of case-sensitive parameter logical IDs to include in the
	// group. Parameters must already be defined in the Parameters section of
	// the template. A parameter can be included in only one parameter group.
	Parameters interface{} `json:"Parameters,omitempty"`
}

// InterfaceParameterGroupList represents a list of InterfaceParameterGroup
type InterfaceParameterGroupList []InterfaceParameterGroup

// UnmarshalJSON sets the object from the provided JSON representation
func (l *InterfaceParameterGroupList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := InterfaceParameterGroup{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = InterfaceParameterGroupList{item}
		return nil
	}
	list := []InterfaceParameterGroup{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = InterfaceParameterGroupList(list)
		return nil
	}
	return err
}

// InterfaceParameterLabel represents AWS CloudFormation Interface ParameterLabel
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-parameterlabel.html
type InterfaceParameterLabel struct {
	// A label for a parameter. The label defines a friendly name or
	// description that the AWS CloudFormation console shows on the Specify
	// Parameters page when a stack is created or updated. The
	// ParameterLogicalID key must be the case-sensitive logical ID of a
	// valid parameter that has been declared in the Parameters section of
	// the template.
	ParameterLogicalID *InterfaceLabel `json:"ParameterLogicalID,omitempty"`
}

// InterfaceParameterLabelList represents a list of InterfaceParameterLabel
type InterfaceParameterLabelList []InterfaceParameterLabel

// UnmarshalJSON sets the object from the provided JSON representation
func (l *InterfaceParameterLabelList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := InterfaceParameterLabel{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = InterfaceParameterLabelList{item}
		return nil
	}
	list := []InterfaceParameterLabel{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = InterfaceParameterLabelList(list)
		return nil
	}
	return err
}

// CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig represents Amazon CloudFront CloudFrontOriginAccessIdentity CloudFrontOriginAccessIdentityConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig.html
type CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig struct {
	// A comment to associate with this CloudFront origin access identity.
	Comment interface{} `json:"Comment,omitempty"`
}

// CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigList represents a list of CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig
type CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigList []CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigList{item}
		return nil
	}
	list := []CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionConfig represents CloudFront DistributionConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig.html
type CloudFrontDistributionConfig struct {
	// CNAMEs (alternate domain names), if any, for the distribution.
	Aliases interface{} `json:"Aliases,omitempty"`

	// A list of CacheBehavior types for the distribution.
	CacheBehaviors *CloudFrontDistributionConfigCacheBehaviorList `json:"CacheBehaviors,omitempty"`

	// Any comments that you want to include about the distribution.
	// Optional.
	Comment *StringExpr `json:"Comment,omitempty"`

	// Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range
	// with custom error messages before returning the response to the
	// viewer.
	CustomErrorResponses *CloudFrontDistributionConfigCustomErrorResponseList `json:"CustomErrorResponses,omitempty"`

	// The default cache behavior that is triggered if you do not specify the
	// CacheBehavior property or if files don't match any of the values of
	// PathPattern in the CacheBehavior property.
	DefaultCacheBehavior *CloudFrontDefaultCacheBehavior `json:"DefaultCacheBehavior,omitempty"`

	// The object (such as index.html) that you want CloudFront to request
	// from your origin when the root URL for your distribution (such as
	// http://example.com/) is requested.
	DefaultRootObject *StringExpr `json:"DefaultRootObject,omitempty"`

	// Controls whether the distribution is enabled to accept end user
	// requests for content.
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// The latest HTTP version that viewers can use to communicate with
	// CloudFront. Viewers that don't support the latest version
	// automatically use an earlier HTTP version. By default, AWS
	// CloudFormation specifies http1.1.
	HttpVersion *StringExpr `json:"HttpVersion,omitempty"`

	// If you want CloudFront to respond to IPv6 DNS requests with an IPv6
	// address for your distribution, specify true. If you specify false,
	// CloudFront responds to IPv6 DNS requests with the DNS response code
	// NOERROR and with no IP addresses. This allows viewers to submit a
	// second request, for an IPv4 address for your distribution. For more
	// information and usage guidance, see CreateDistribution in the Amazon
	// CloudFront API Reference.
	IPV6Enabled interface{} `json:"IPV6Enabled,omitempty"`

	// Controls whether access logs are written for the distribution. To turn
	// on access logs, specify this property.
	Logging *CloudFrontLogging `json:"Logging,omitempty"`

	// A list of origins for this CloudFront distribution. For each origin,
	// you can specify whether it is an Amazon S3 or custom origin.
	Origins *CloudFrontDistributionConfigOriginList `json:"Origins,omitempty"`

	// The price class that corresponds with the maximum price that you want
	// to pay for the CloudFront service. For more information, see Choosing
	// the Price Class in the Amazon CloudFront Developer Guide.
	PriceClass *StringExpr `json:"PriceClass,omitempty"`

	// Specifies restrictions on who or how viewers can access your content.
	Restrictions *CloudFrontDistributionConfigurationRestrictions `json:"Restrictions,omitempty"`

	// The certificate to use when viewers use HTTPS to request objects.
	ViewerCertificate *CloudFrontDistributionConfigurationViewerCertificate `json:"ViewerCertificate,omitempty"`

	// The AWS WAF web ACL to associate with this distribution. AWS WAF is a
	// web application firewall that enables you to monitor the HTTP and
	// HTTPS requests that are forwarded to CloudFront and to control who can
	// access your content. CloudFront permits or forbids requests based on
	// conditions that you specify, such as the IP addresses from which
	// requests originate or the values of query strings.
	WebACLId *StringExpr `json:"WebACLId,omitempty"`
}

// CloudFrontDistributionConfigList represents a list of CloudFrontDistributionConfig
type CloudFrontDistributionConfigList []CloudFrontDistributionConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionConfigList{item}
		return nil
	}
	list := []CloudFrontDistributionConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionConfigList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionConfigCacheBehavior represents CloudFront DistributionConfig CacheBehavior
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachebehavior.html
type CloudFrontDistributionConfigCacheBehavior struct {
	// HTTP methods that CloudFront processes and forwards to your Amazon S3
	// bucket or your custom origin. You can specify ["HEAD", "GET"], ["GET",
	// "HEAD", "OPTIONS"], or ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH",
	// "POST", "PUT"]. If you don't specify a value, AWS CloudFormation
	// specifies ["HEAD", "GET"].
	AllowedMethods interface{} `json:"AllowedMethods,omitempty"`

	// HTTP methods for which CloudFront caches responses. You can specify
	// ["HEAD", "GET"] or ["GET", "HEAD", "OPTIONS"]. If you don't specify a
	// value, AWS CloudFormation specifies ["HEAD", "GET"].
	CachedMethods interface{} `json:"CachedMethods,omitempty"`

	// Indicates whether CloudFront automatically compresses certain files
	// for this cache behavior. For more information, see Serving Compressed
	// Files in the Amazon CloudFront Developer Guide.
	Compress *BoolExpr `json:"Compress,omitempty"`

	// The default time in seconds that objects stay in CloudFront caches
	// before CloudFront forwards another request to your custom origin to
	// determine whether the object has been updated. This value applies only
	// when your custom origin does not add HTTP headers, such as
	// Cache-Control max-age, Cache-Control s-maxage, and Expires to objects.
	DefaultTTL *IntegerExpr `json:"DefaultTTL,omitempty"`

	// Specifies how CloudFront handles query strings or cookies.
	ForwardedValues *CloudFrontForwardedValues `json:"ForwardedValues,omitempty"`

	// Lambda function associations for the Amazon CloudFront distribution.
	LambdaFunctionAssociations *CloudFrontDistributionLambdaFunctionAssociationList `json:"LambdaFunctionAssociations,omitempty"`

	// The maximum time in seconds that objects stay in CloudFront caches
	// before CloudFront forwards another request to your custom origin to
	// determine whether the object has been updated. This value applies only
	// when your custom origin does not add HTTP headers, such as
	// Cache-Control max-age, Cache-Control s-maxage, and Expires to objects.
	MaxTTL *IntegerExpr `json:"MaxTTL,omitempty"`

	// The minimum amount of time that you want objects to stay in the cache
	// before CloudFront queries your origin to see whether the object has
	// been updated.
	MinTTL *IntegerExpr `json:"MinTTL,omitempty"`

	// The pattern to which this cache behavior applies. For example, you can
	// specify images/*.jpg.
	PathPattern *StringExpr `json:"PathPattern,omitempty"`

	// Indicates whether to use the origin that is associated with this cache
	// behavior to distribute media files in the Microsoft Smooth Streaming
	// format. If you specify true, you can still use this cache behavior to
	// distribute other content if the content matches the PathPattern value.
	SmoothStreaming *BoolExpr `json:"SmoothStreaming,omitempty"`

	// The ID value of the origin to which you want CloudFront to route
	// requests when a request matches the value of the PathPattern property.
	TargetOriginId *StringExpr `json:"TargetOriginId,omitempty"`

	// A list of AWS accounts that can create signed URLs in order to access
	// private content.
	TrustedSigners interface{} `json:"TrustedSigners,omitempty"`

	// The protocol that users can use to access the files in the origin that
	// you specified in the TargetOriginId property when a request matches
	// the value of the PathPattern property. For more information about the
	// valid values, see the ViewerProtocolPolicy content for the
	// CacheBehavior data type in the Amazon CloudFront API Reference.
	ViewerProtocolPolicy *StringExpr `json:"ViewerProtocolPolicy,omitempty"`
}

// CloudFrontDistributionConfigCacheBehaviorList represents a list of CloudFrontDistributionConfigCacheBehavior
type CloudFrontDistributionConfigCacheBehaviorList []CloudFrontDistributionConfigCacheBehavior

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionConfigCacheBehaviorList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionConfigCacheBehavior{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionConfigCacheBehaviorList{item}
		return nil
	}
	list := []CloudFrontDistributionConfigCacheBehavior{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionConfigCacheBehaviorList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionConfigCustomErrorResponse represents CloudFront DistributionConfig CustomErrorResponse
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-customerrorresponse.html
type CloudFrontDistributionConfigCustomErrorResponse struct {
	// The minimum amount of time, in seconds, that Amazon CloudFront caches
	// the HTTP status code that you specified in the ErrorCode property. The
	// default value is 300.
	ErrorCachingMinTTL *IntegerExpr `json:"ErrorCachingMinTTL,omitempty"`

	// An HTTP status code for which you want to specify a custom error page.
	// You can specify 400, 403, 404, 405, 414, 500, 501, 502, 503, or 504.
	ErrorCode *IntegerExpr `json:"ErrorCode,omitempty"`

	// The HTTP status code that CloudFront returns to viewer along with the
	// custom error page. You can specify 200, 400, 403, 404, 405, 414, 500,
	// 501, 502, 503, or 504.
	ResponseCode *IntegerExpr `json:"ResponseCode,omitempty"`

	// The path to the custom error page that CloudFront returns to a viewer
	// when your origin returns the HTTP status code that you specified in
	// the ErrorCode property. For example, you can specify
	// /404-errors/403-forbidden.html.
	ResponsePagePath *StringExpr `json:"ResponsePagePath,omitempty"`
}

// CloudFrontDistributionConfigCustomErrorResponseList represents a list of CloudFrontDistributionConfigCustomErrorResponse
type CloudFrontDistributionConfigCustomErrorResponseList []CloudFrontDistributionConfigCustomErrorResponse

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionConfigCustomErrorResponseList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionConfigCustomErrorResponse{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionConfigCustomErrorResponseList{item}
		return nil
	}
	list := []CloudFrontDistributionConfigCustomErrorResponse{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionConfigCustomErrorResponseList(list)
		return nil
	}
	return err
}

// CloudFrontDefaultCacheBehavior represents CloudFront DefaultCacheBehavior
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-defaultcachebehavior.html
type CloudFrontDefaultCacheBehavior struct {
	// HTTP methods that CloudFront processes and forwards to your Amazon S3
	// bucket or your custom origin. In AWS CloudFormation templates, you can
	// specify ["HEAD", "GET"], ["GET", "HEAD", "OPTIONS"], or ["DELETE",
	// "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]. If you don't
	// specify a value, AWS CloudFormation specifies ["HEAD", "GET"].
	AllowedMethods interface{} `json:"AllowedMethods,omitempty"`

	// HTTP methods for which CloudFront caches responses. In AWS
	// CloudFormation templates, you can specify ["HEAD", "GET"] or ["GET",
	// "HEAD", "OPTIONS"]. If you don't specify a value, AWS CloudFormation
	// specifies ["HEAD", "GET"].
	CachedMethods interface{} `json:"CachedMethods,omitempty"`

	// Indicates whether CloudFront automatically compresses certain files
	// for this cache behavior. For more information, see Serving Compressed
	// Files in the Amazon CloudFront Developer Guide.
	Compress *BoolExpr `json:"Compress,omitempty"`

	// The default time in seconds that objects stay in CloudFront caches
	// before CloudFront forwards another request to your custom origin to
	// determine whether the object has been updated. This value applies only
	// when your custom origin does not add HTTP headers, such as
	// Cache-Control max-age, Cache-Control s-maxage, and Expires to objects.
	DefaultTTL *IntegerExpr `json:"DefaultTTL,omitempty"`

	// Specifies how CloudFront handles query strings or cookies.
	ForwardedValues *CloudFrontForwardedValues `json:"ForwardedValues,omitempty"`

	// Lambda function associations for the Amazon CloudFront distribution.
	LambdaFunctionAssociations *CloudFrontDistributionLambdaFunctionAssociationList `json:"LambdaFunctionAssociations,omitempty"`

	// The maximum time in seconds that objects stay in CloudFront caches
	// before CloudFront forwards another request to your custom origin to
	// determine whether the object has been updated. This value applies only
	// when your custom origin adds HTTP headers, such as Cache-Control
	// max-age, Cache-Control s-maxage, and Expires to objects.
	MaxTTL *IntegerExpr `json:"MaxTTL,omitempty"`

	// The minimum amount of time that you want objects to stay in the cache
	// before CloudFront queries your origin to see whether the object has
	// been updated.
	MinTTL *IntegerExpr `json:"MinTTL,omitempty"`

	// Indicates whether to use the origin that is associated with this cache
	// behavior to distribute media files in the Microsoft Smooth Streaming
	// format.
	SmoothStreaming *BoolExpr `json:"SmoothStreaming,omitempty"`

	// The value of ID for the origin that CloudFront routes requests to when
	// the default cache behavior is applied to a request.
	TargetOriginId *StringExpr `json:"TargetOriginId,omitempty"`

	// A list of AWS accounts that can create signed URLs in order to access
	// private content.
	TrustedSigners interface{} `json:"TrustedSigners,omitempty"`

	// The protocol that users can use to access the files in the origin that
	// you specified in the TargetOriginId property when the default cache
	// behavior is applied to a request. For more information about the valid
	// values, see the ViewerProtocolPolicy content for the
	// DefaultCacheBehavior data type in the Amazon CloudFront API Reference.
	ViewerProtocolPolicy *StringExpr `json:"ViewerProtocolPolicy,omitempty"`
}

// CloudFrontDefaultCacheBehaviorList represents a list of CloudFrontDefaultCacheBehavior
type CloudFrontDefaultCacheBehaviorList []CloudFrontDefaultCacheBehavior

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDefaultCacheBehaviorList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDefaultCacheBehavior{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDefaultCacheBehaviorList{item}
		return nil
	}
	list := []CloudFrontDefaultCacheBehavior{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDefaultCacheBehaviorList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionLambdaFunctionAssociation represents Amazon CloudFront Distribution LambdaFunctionAssociation
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-lambdafunctionassociation.html
type CloudFrontDistributionLambdaFunctionAssociation struct {
	// Specifies the event type that triggers a Lambda function invocation.
	// For valid values and definitions, see LambdaFunctionAssociation in the
	// Amazon CloudFront API Reference.
	EventType interface{} `json:"EventType,omitempty"`

	// The ARN of the Lambda function. You must specify the ARN of a function
	// version; you can't specify a Lambda alias or $LATEST.
	LambdaFunctionARN interface{} `json:"LambdaFunctionARN,omitempty"`
}

// CloudFrontDistributionLambdaFunctionAssociationList represents a list of CloudFrontDistributionLambdaFunctionAssociation
type CloudFrontDistributionLambdaFunctionAssociationList []CloudFrontDistributionLambdaFunctionAssociation

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionLambdaFunctionAssociationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionLambdaFunctionAssociation{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionLambdaFunctionAssociationList{item}
		return nil
	}
	list := []CloudFrontDistributionLambdaFunctionAssociation{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionLambdaFunctionAssociationList(list)
		return nil
	}
	return err
}

// CloudFrontLogging represents CloudFront Logging
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-logging.html
type CloudFrontLogging struct {
	// The Amazon S3 bucket address where access logs are stored, for
	// example, mybucket.s3.amazonaws.com.
	Bucket *StringExpr `json:"Bucket,omitempty"`

	// Indicates whether CloudFront includes cookies in access logs.
	IncludeCookies *BoolExpr `json:"IncludeCookies,omitempty"`

	// A prefix for the access log file names for this distribution.
	Prefix *StringExpr `json:"Prefix,omitempty"`
}

// CloudFrontLoggingList represents a list of CloudFrontLogging
type CloudFrontLoggingList []CloudFrontLogging

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontLoggingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontLogging{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontLoggingList{item}
		return nil
	}
	list := []CloudFrontLogging{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontLoggingList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionConfigOrigin represents CloudFront DistributionConfig Origin
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-origin.html
type CloudFrontDistributionConfigOrigin struct {
	// Origin information to specify a custom origin.
	CustomOriginConfig *CloudFrontDistributionConfigOriginCustomOriginConfig `json:"CustomOriginConfig,omitempty"`

	// The DNS name of the Amazon Simple Storage Service (S3) bucket or the
	// HTTP server from which you want CloudFront to get objects for this
	// origin.
	DomainName *StringExpr `json:"DomainName,omitempty"`

	// An identifier for the origin. The value of Id must be unique within
	// the distribution.
	Id *StringExpr `json:"Id,omitempty"`

	// Custom headers that CloudFront includes when it forwards a request to
	// your origin.
	OriginCustomHeaders *CloudFrontDistributionConfigOriginOriginCustomHeaderList `json:"OriginCustomHeaders,omitempty"`

	// The path that CloudFront uses to request content from an S3 bucket or
	// custom origin. The combination of the DomainName and OriginPath
	// properties must resolve to a valid path. The value must start with a
	// slash mark (/) and cannot end with a slash mark.
	OriginPath *StringExpr `json:"OriginPath,omitempty"`

	// Origin information to specify an S3 origin.
	S3OriginConfig *CloudFrontDistributionConfigOriginS3Origin `json:"S3OriginConfig,omitempty"`
}

// CloudFrontDistributionConfigOriginList represents a list of CloudFrontDistributionConfigOrigin
type CloudFrontDistributionConfigOriginList []CloudFrontDistributionConfigOrigin

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionConfigOriginList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionConfigOrigin{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionConfigOriginList{item}
		return nil
	}
	list := []CloudFrontDistributionConfigOrigin{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionConfigOriginList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionConfigOriginCustomOriginConfig represents CloudFront DistributionConfig Origin CustomOriginConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-customorigin.html
type CloudFrontDistributionConfigOriginCustomOriginConfig struct {
	// The HTTP port the custom origin listens on.
	HTTPPort *IntegerExpr `json:"HTTPPort,omitempty"`

	// The HTTPS port the custom origin listens on.
	HTTPSPort *IntegerExpr `json:"HTTPSPort,omitempty"`

	// You can create a custom keep-alive timeout. All timeout units are in
	// seconds. The default keep-alive timeout is 5 seconds, but you can
	// configure custom timeout lengths. The minimum timeout length is 1
	// second; the maximum is 60 seconds.
	OriginKeepaliveTimeout interface{} `json:"OriginKeepaliveTimeout,omitempty"`

	// The origin protocol policy to apply to your origin.
	OriginProtocolPolicy *StringExpr `json:"OriginProtocolPolicy,omitempty"`

	// You can create a custom origin read timeout. All timeout units are in
	// seconds. The default origin read timeout is 30 seconds, but you can
	// configure custom timeout lengths. The minimum timeout length is 4
	// seconds; the maximum is 60 seconds.
	OriginReadTimeout interface{} `json:"OriginReadTimeout,omitempty"`

	// The SSL protocols that CloudFront can use when establishing an HTTPS
	// connection with your origin. By default, AWS CloudFormation specifies
	// the TLSv1 and SSLv3 protocols.
	OriginSSLProtocols interface{} `json:"OriginSSLProtocols,omitempty"`
}

// CloudFrontDistributionConfigOriginCustomOriginConfigList represents a list of CloudFrontDistributionConfigOriginCustomOriginConfig
type CloudFrontDistributionConfigOriginCustomOriginConfigList []CloudFrontDistributionConfigOriginCustomOriginConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionConfigOriginCustomOriginConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionConfigOriginCustomOriginConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionConfigOriginCustomOriginConfigList{item}
		return nil
	}
	list := []CloudFrontDistributionConfigOriginCustomOriginConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionConfigOriginCustomOriginConfigList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionConfigOriginOriginCustomHeader represents CloudFront DistributionConfig Origin OriginCustomHeader
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-origin-origincustomheader.html
type CloudFrontDistributionConfigOriginOriginCustomHeader struct {
	// The name of a header that CloudFront forwards to your origin. For more
	// information, see Forwarding Custom Headers to Your Origin (Web
	// Distributions Only) in the Amazon CloudFront Developer Guide.
	HeaderName *StringExpr `json:"HeaderName,omitempty"`

	// The value for the header that you specified in the HeaderName
	// property.
	HeaderValue *StringExpr `json:"HeaderValue,omitempty"`
}

// CloudFrontDistributionConfigOriginOriginCustomHeaderList represents a list of CloudFrontDistributionConfigOriginOriginCustomHeader
type CloudFrontDistributionConfigOriginOriginCustomHeaderList []CloudFrontDistributionConfigOriginOriginCustomHeader

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionConfigOriginOriginCustomHeaderList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionConfigOriginOriginCustomHeader{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionConfigOriginOriginCustomHeaderList{item}
		return nil
	}
	list := []CloudFrontDistributionConfigOriginOriginCustomHeader{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionConfigOriginOriginCustomHeaderList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionConfigOriginS3Origin represents CloudFront DistributionConfig Origin S3Origin
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-s3origin.html
type CloudFrontDistributionConfigOriginS3Origin struct {
	// The CloudFront origin access identity to associate with the origin.
	// You must specify the full origin ID—for example:
	OriginAccessIdentity *StringExpr `json:"OriginAccessIdentity,omitempty"`
}

// CloudFrontDistributionConfigOriginS3OriginList represents a list of CloudFrontDistributionConfigOriginS3Origin
type CloudFrontDistributionConfigOriginS3OriginList []CloudFrontDistributionConfigOriginS3Origin

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionConfigOriginS3OriginList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionConfigOriginS3Origin{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionConfigOriginS3OriginList{item}
		return nil
	}
	list := []CloudFrontDistributionConfigOriginS3Origin{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionConfigOriginS3OriginList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionConfigurationRestrictions represents CloudFront DistributionConfiguration Restrictions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-restrictions.html
type CloudFrontDistributionConfigurationRestrictions struct {
	// The countries in which viewers are able to access your content.
	GeoRestriction *CloudFrontDistributionConfigRestrictionsGeoRestriction `json:"GeoRestriction,omitempty"`
}

// CloudFrontDistributionConfigurationRestrictionsList represents a list of CloudFrontDistributionConfigurationRestrictions
type CloudFrontDistributionConfigurationRestrictionsList []CloudFrontDistributionConfigurationRestrictions

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionConfigurationRestrictionsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionConfigurationRestrictions{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionConfigurationRestrictionsList{item}
		return nil
	}
	list := []CloudFrontDistributionConfigurationRestrictions{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionConfigurationRestrictionsList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionConfigRestrictionsGeoRestriction represents CloudFront DistributionConfig Restrictions GeoRestriction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-restrictions-georestriction.html
type CloudFrontDistributionConfigRestrictionsGeoRestriction struct {
	// The two-letter, uppercase country code for a country that you want to
	// include in your blacklist or whitelist.
	Locations interface{} `json:"Locations,omitempty"`

	// The method to restrict distribution of your content:
	RestrictionType *StringExpr `json:"RestrictionType,omitempty"`

	// Prevents viewers in the countries that you specified from accessing
	// your content.
	Blacklist interface{} `json:"blacklist,omitempty"`

	// Allows viewers in the countries that you specified to access your
	// content.
	Whitelist interface{} `json:"whitelist,omitempty"`

	// No distribution restrictions by country.
	None interface{} `json:"none,omitempty"`
}

// CloudFrontDistributionConfigRestrictionsGeoRestrictionList represents a list of CloudFrontDistributionConfigRestrictionsGeoRestriction
type CloudFrontDistributionConfigRestrictionsGeoRestrictionList []CloudFrontDistributionConfigRestrictionsGeoRestriction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionConfigRestrictionsGeoRestrictionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionConfigRestrictionsGeoRestriction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionConfigRestrictionsGeoRestrictionList{item}
		return nil
	}
	list := []CloudFrontDistributionConfigRestrictionsGeoRestriction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionConfigRestrictionsGeoRestrictionList(list)
		return nil
	}
	return err
}

// CloudFrontDistributionConfigurationViewerCertificate represents CloudFront DistributionConfiguration ViewerCertificate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-viewercertificate.html
type CloudFrontDistributionConfigurationViewerCertificate struct {
	// If you're using an alternate domain name, the Amazon Resource Name
	// (ARN) of an AWS Certificate Manager (ACM) certificate. Use the ACM
	// service to provision and manage your certificates. For more
	// information, see the AWS Certificate Manager User Guide.
	AcmCertificateArn *StringExpr `json:"AcmCertificateArn,omitempty"`

	// Indicates whether to use the default certificate for your CloudFront
	// domain name when viewers use HTTPS to request your content.
	CloudFrontDefaultCertificate *BoolExpr `json:"CloudFrontDefaultCertificate,omitempty"`

	// If you're using an alternate domain name, the ID of a server
	// certificate that was purchased from a certificate authority. This ID
	// is the ServerCertificateId value, which AWS Identity and Access
	// Management (IAM) returns when the certificate is added to the IAM
	// certificate store, such as ASCACKCEVSQ6CEXAMPLE1.
	IamCertificateId *StringExpr `json:"IamCertificateId,omitempty"`

	// The minimum version of the SSL protocol that you want CloudFront to
	// use for HTTPS connections. CloudFront serves your objects only to
	// browsers or devices that support at least the SSL version that you
	// specify. For valid values, see the MinimumProtocolVersion content for
	// the ViewerCertificate data type in the Amazon CloudFront API
	// Reference.
	MinimumProtocolVersion *StringExpr `json:"MinimumProtocolVersion,omitempty"`

	// Specifies how CloudFront serves HTTPS requests. For valid values, see
	// the SslSupportMethod content for the ViewerCertificate data type in
	// the Amazon CloudFront API Reference.
	SslSupportMethod *StringExpr `json:"SslSupportMethod,omitempty"`
}

// CloudFrontDistributionConfigurationViewerCertificateList represents a list of CloudFrontDistributionConfigurationViewerCertificate
type CloudFrontDistributionConfigurationViewerCertificateList []CloudFrontDistributionConfigurationViewerCertificate

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontDistributionConfigurationViewerCertificateList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontDistributionConfigurationViewerCertificate{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontDistributionConfigurationViewerCertificateList{item}
		return nil
	}
	list := []CloudFrontDistributionConfigurationViewerCertificate{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontDistributionConfigurationViewerCertificateList(list)
		return nil
	}
	return err
}

// CloudFrontForwardedValues represents CloudFront ForwardedValues
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-forwardedvalues.html
type CloudFrontForwardedValues struct {
	// Forwards specified cookies to the origin of the cache behavior. For
	// more information, see Configuring CloudFront to Cache Based on Cookies
	// in the Amazon CloudFront Developer Guide.
	Cookies *CloudFrontForwardedValuesCookies `json:"Cookies,omitempty"`

	// Specifies the headers that you want Amazon CloudFront to forward to
	// the origin for this cache behavior (whitelisted headers). For the
	// headers that you specify, Amazon CloudFront also caches separate
	// versions of a specified object that is based on the header values in
	// viewer requests.
	Headers interface{} `json:"Headers,omitempty"`

	// Indicates whether you want CloudFront to forward query strings to the
	// origin that is associated with this cache behavior. If so, specify
	// true; if not, specify false. For more information about forwarding
	// query strings, see the QueryString parameter for the ForwardedValues
	// type in the Amazon CloudFront API Reference.
	QueryString *BoolExpr `json:"QueryString,omitempty"`

	// If you forward query strings to the origin, specifies the query string
	// parameters that CloudFront uses to determine which content to cache.
	// For more information, see Configuring CloudFront to Cache Based on
	// Query String Parameters in the Amazon CloudFront Developer Guide.
	QueryStringCacheKeys interface{} `json:"QueryStringCacheKeys,omitempty"`
}

// CloudFrontForwardedValuesList represents a list of CloudFrontForwardedValues
type CloudFrontForwardedValuesList []CloudFrontForwardedValues

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontForwardedValuesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontForwardedValues{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontForwardedValuesList{item}
		return nil
	}
	list := []CloudFrontForwardedValues{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontForwardedValuesList(list)
		return nil
	}
	return err
}

// CloudFrontForwardedValuesCookies represents CloudFront ForwardedValues Cookies
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-forwardedvalues-cookies.html
type CloudFrontForwardedValuesCookies struct {
	// The cookies to forward to the origin of the cache behavior. You can
	// specify none, all, or whitelist.
	Forward *StringExpr `json:"Forward,omitempty"`

	// The names of cookies to forward to the origin for the cache behavior.
	WhitelistedNames interface{} `json:"WhitelistedNames,omitempty"`
}

// CloudFrontForwardedValuesCookiesList represents a list of CloudFrontForwardedValuesCookies
type CloudFrontForwardedValuesCookiesList []CloudFrontForwardedValuesCookies

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontForwardedValuesCookiesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontForwardedValuesCookies{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontForwardedValuesCookiesList{item}
		return nil
	}
	list := []CloudFrontForwardedValuesCookies{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontForwardedValuesCookiesList(list)
		return nil
	}
	return err
}

// CloudFrontStreamingDistributionLogging represents Amazon CloudFront StreamingDistribution Logging
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-logging.html
type CloudFrontStreamingDistributionLogging struct {
	// The Amazon S3 bucket to store the access logs in, for example,
	// myawslogbucket.s3.amazonaws.com.
	Bucket interface{} `json:"Bucket,omitempty"`

	// Specifies whether you want CloudFront to save access logs to an Amazon
	// S3 bucket. If you don't want to enable logging when you create a
	// streaming distribution or if you want to disable logging for an
	// existing streaming distribution, specify false for Enabled, and
	// specify empty Bucket and Prefix elements. If you specify false for
	// Enabled but you specify values for Bucket and Prefix, the values are
	// automatically deleted.
	Enabled interface{} `json:"Enabled,omitempty"`

	// An optional string that you want CloudFront to prefix to the access
	// log filenames for this streaming distribution, for example, myprefix/.
	// If you want to enable logging, but you don't want to specify a prefix,
	// you still must include an empty Prefix property in the Logging
	// property.
	Prefix interface{} `json:"Prefix,omitempty"`
}

// CloudFrontStreamingDistributionLoggingList represents a list of CloudFrontStreamingDistributionLogging
type CloudFrontStreamingDistributionLoggingList []CloudFrontStreamingDistributionLogging

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontStreamingDistributionLoggingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontStreamingDistributionLogging{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontStreamingDistributionLoggingList{item}
		return nil
	}
	list := []CloudFrontStreamingDistributionLogging{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontStreamingDistributionLoggingList(list)
		return nil
	}
	return err
}

// CloudFrontStreamingDistributionS3Origin represents Amazon CloudFront StreamingDistribution S3Origin
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-s3origin.html
type CloudFrontStreamingDistributionS3Origin struct {
	// The DNS name of the Amazon S3 origin.
	DomainName interface{} `json:"DomainName,omitempty"`

	// The CloudFront origin access identity to associate with the RTMP
	// distribution. Use an origin access identity to configure the
	// distribution so that end users can only access objects in an Amazon S3
	// bucket through CloudFront. For more information, see the
	// OriginAccessIdentity property for S3Origin in Amazon CloudFront API
	// Reference.
	OriginAccessIdentity interface{} `json:"OriginAccessIdentity,omitempty"`
}

// CloudFrontStreamingDistributionS3OriginList represents a list of CloudFrontStreamingDistributionS3Origin
type CloudFrontStreamingDistributionS3OriginList []CloudFrontStreamingDistributionS3Origin

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontStreamingDistributionS3OriginList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontStreamingDistributionS3Origin{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontStreamingDistributionS3OriginList{item}
		return nil
	}
	list := []CloudFrontStreamingDistributionS3Origin{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontStreamingDistributionS3OriginList(list)
		return nil
	}
	return err
}

// CloudFrontStreamingDistributionStreamingDistributionConfig represents Amazon CloudFront StreamingDistribution StreamingDistributionConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html
type CloudFrontStreamingDistributionStreamingDistributionConfig struct {
	// Lists the CNAMEs (alternate domain names), if any, for this streaming
	// distribution.
	Aliases interface{} `json:"Aliases,omitempty"`

	// Any comments you want to include about the streaming distribution.
	Comment interface{} `json:"Comment,omitempty"`

	// Whether the streaming distribution is enabled to accept user requests
	// for content.
	Enabled interface{} `json:"Enabled,omitempty"`

	// Whether access logs are written for the streaming distribution.
	Logging *CloudFrontStreamingDistributionLogging `json:"Logging,omitempty"`

	// The price class for this streaming distribution.
	PriceClass interface{} `json:"PriceClass,omitempty"`

	// Information about the Amazon S3 bucket from which you want CloudFront
	// to get your media files for distribution.
	S3Origin *CloudFrontStreamingDistributionS3Origin `json:"S3Origin,omitempty"`

	// Specifies any AWS accounts that you want to permit to create signed
	// URLs for private content. If you want the distribution to use signed
	// URLs, include this element; if you want the distribution to use public
	// URLs, remove this property. For more information, see Serving Private
	// Content through CloudFront in the Amazon CloudFront Developer Guide.
	TrustedSigners *CloudFrontStreamingDistributionTrustedSigners `json:"TrustedSigners,omitempty"`
}

// CloudFrontStreamingDistributionStreamingDistributionConfigList represents a list of CloudFrontStreamingDistributionStreamingDistributionConfig
type CloudFrontStreamingDistributionStreamingDistributionConfigList []CloudFrontStreamingDistributionStreamingDistributionConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontStreamingDistributionStreamingDistributionConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontStreamingDistributionStreamingDistributionConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontStreamingDistributionStreamingDistributionConfigList{item}
		return nil
	}
	list := []CloudFrontStreamingDistributionStreamingDistributionConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontStreamingDistributionStreamingDistributionConfigList(list)
		return nil
	}
	return err
}

// CloudFrontStreamingDistributionTag represents Amazon CloudFront StreamingDistribution Tag
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-tag.html
type CloudFrontStreamingDistributionTag struct {
	// A string that contains Tag key.
	Key interface{} `json:"Key,omitempty"`

	// A string that contains an optional Tag value.
	Value interface{} `json:"Value,omitempty"`
}

// CloudFrontStreamingDistributionTagList represents a list of CloudFrontStreamingDistributionTag
type CloudFrontStreamingDistributionTagList []CloudFrontStreamingDistributionTag

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontStreamingDistributionTagList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontStreamingDistributionTag{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontStreamingDistributionTagList{item}
		return nil
	}
	list := []CloudFrontStreamingDistributionTag{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontStreamingDistributionTagList(list)
		return nil
	}
	return err
}

// CloudFrontStreamingDistributionTrustedSigners represents Amazon CloudFront StreamingDistribution TrustedSigners
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-trustedsigners.html
type CloudFrontStreamingDistributionTrustedSigners struct {
	// The trusted signers for this cache behavior.
	AwsAccountNumbers interface{} `json:"AwsAccountNumbers,omitempty"`

	// Specifies whether you want to require viewers to use signed URLs to
	// access the files specified by PathPattern and TargetOriginId.
	Enabled interface{} `json:"Enabled,omitempty"`
}

// CloudFrontStreamingDistributionTrustedSignersList represents a list of CloudFrontStreamingDistributionTrustedSigners
type CloudFrontStreamingDistributionTrustedSignersList []CloudFrontStreamingDistributionTrustedSigners

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudFrontStreamingDistributionTrustedSignersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudFrontStreamingDistributionTrustedSigners{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudFrontStreamingDistributionTrustedSignersList{item}
		return nil
	}
	list := []CloudFrontStreamingDistributionTrustedSigners{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudFrontStreamingDistributionTrustedSignersList(list)
		return nil
	}
	return err
}

// CloudTrailTrailEventSelector represents AWS CloudTrail Trail EventSelector
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudtrail-trail-eventselector.html
type CloudTrailTrailEventSelector struct {
	// The resources for data events. CloudTrail supports logging data events
	// for Amazon S3 objects only. For more information, see Data Events in
	// the AWS CloudTrail User Guide.
	DataResources *CloudTrailTrailDataResourceList `json:"DataResources,omitempty"`

	// Specifies whether the event selector includes management events for
	// the trail. The default value is true. For more information, see
	// Management Events in the AWS CloudTrail User Guide.
	IncludeManagementEvents interface{} `json:"IncludeManagementEvents,omitempty"`

	// Specifies whether to log read-only events, write-only events, or all
	// events. The default value is All.
	ReadWriteType interface{} `json:"ReadWriteType,omitempty"`
}

// CloudTrailTrailEventSelectorList represents a list of CloudTrailTrailEventSelector
type CloudTrailTrailEventSelectorList []CloudTrailTrailEventSelector

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudTrailTrailEventSelectorList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudTrailTrailEventSelector{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudTrailTrailEventSelectorList{item}
		return nil
	}
	list := []CloudTrailTrailEventSelector{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudTrailTrailEventSelectorList(list)
		return nil
	}
	return err
}

// CloudTrailTrailDataResource represents AWS CloudTrail Trail DataResource
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudtrail-trail-dataresource.html
type CloudTrailTrailDataResource struct {
	// The resource type to log data events for. You can specify only the
	// following value: AWS::S3::Object.
	Type interface{} `json:"Type,omitempty"`

	// A list of ARN-like strings for the specified Amazon S3 objects.
	Values interface{} `json:"Values,omitempty"`
}

// CloudTrailTrailDataResourceList represents a list of CloudTrailTrailDataResource
type CloudTrailTrailDataResourceList []CloudTrailTrailDataResource

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudTrailTrailDataResourceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudTrailTrailDataResource{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudTrailTrailDataResourceList{item}
		return nil
	}
	list := []CloudTrailTrailDataResource{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudTrailTrailDataResourceList(list)
		return nil
	}
	return err
}

// CloudWatchMetricDimension represents CloudWatch Metric Dimension Property Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html
type CloudWatchMetricDimension struct {
	// The name of the dimension, from 1–255 characters in length.
	Name *StringExpr `json:"Name,omitempty"`

	// The value representing the dimension measurement, from 1–255
	// characters in length.
	Value *StringExpr `json:"Value,omitempty"`
}

// CloudWatchMetricDimensionList represents a list of CloudWatchMetricDimension
type CloudWatchMetricDimensionList []CloudWatchMetricDimension

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudWatchMetricDimensionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudWatchMetricDimension{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudWatchMetricDimensionList{item}
		return nil
	}
	list := []CloudWatchMetricDimension{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudWatchMetricDimensionList(list)
		return nil
	}
	return err
}

// CloudWatchEventsRuleEcsParameters represents Amazon CloudWatch Events Rule EcsParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-ecsparameters.html
type CloudWatchEventsRuleEcsParameters struct {
	// The number of tasks to create based on the task definition. The
	// default is 1.
	TaskCount interface{} `json:"TaskCount,omitempty"`

	// The Amazon Resource Name (ARN) of the task definition to use.
	TaskDefinitionArn interface{} `json:"TaskDefinitionArn,omitempty"`
}

// CloudWatchEventsRuleEcsParametersList represents a list of CloudWatchEventsRuleEcsParameters
type CloudWatchEventsRuleEcsParametersList []CloudWatchEventsRuleEcsParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudWatchEventsRuleEcsParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudWatchEventsRuleEcsParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudWatchEventsRuleEcsParametersList{item}
		return nil
	}
	list := []CloudWatchEventsRuleEcsParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudWatchEventsRuleEcsParametersList(list)
		return nil
	}
	return err
}

// CloudWatchEventsRuleInputTransformer represents Amazon CloudWatch Events Rule InputTransformer
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-inputtransformer.html
type CloudWatchEventsRuleInputTransformer struct {
	// The map of JSON paths to extract from the event, as key-value pairs
	// where each value is a JSON path. You must use JSON dot notation, not
	// bracket notation. Duplicates aren't allowed.
	InputPathsMap interface{} `json:"InputPathsMap,omitempty"`

	// The input template where you can use the values of the keys from
	// InputPathsMap to customize the data that's sent to the target.
	InputTemplate interface{} `json:"InputTemplate,omitempty"`
}

// CloudWatchEventsRuleInputTransformerList represents a list of CloudWatchEventsRuleInputTransformer
type CloudWatchEventsRuleInputTransformerList []CloudWatchEventsRuleInputTransformer

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudWatchEventsRuleInputTransformerList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudWatchEventsRuleInputTransformer{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudWatchEventsRuleInputTransformerList{item}
		return nil
	}
	list := []CloudWatchEventsRuleInputTransformer{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudWatchEventsRuleInputTransformerList(list)
		return nil
	}
	return err
}

// CloudWatchEventsRuleKinesisParameters represents Amazon CloudWatch Events Rule KinesisParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-kinesisparameters.html
type CloudWatchEventsRuleKinesisParameters struct {
	// The JSON path to extract from the event and use as the partition key.
	// The default is to use the eventId as the partition key. For more
	// information, see Amazon Kinesis Streams Key Concepts in the Kinesis
	// Streams Developer Guide.
	PartitionKeyPath interface{} `json:"PartitionKeyPath,omitempty"`
}

// CloudWatchEventsRuleKinesisParametersList represents a list of CloudWatchEventsRuleKinesisParameters
type CloudWatchEventsRuleKinesisParametersList []CloudWatchEventsRuleKinesisParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudWatchEventsRuleKinesisParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudWatchEventsRuleKinesisParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudWatchEventsRuleKinesisParametersList{item}
		return nil
	}
	list := []CloudWatchEventsRuleKinesisParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudWatchEventsRuleKinesisParametersList(list)
		return nil
	}
	return err
}

// CloudWatchEventsRuleRunCommandParameters represents Amazon CloudWatch Events Rule RunCommandParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-runcommandparameters.html
type CloudWatchEventsRuleRunCommandParameters struct {
	// The criteria (either InstanceIds or a tag) that specifies which EC2
	// instances that the command is sent to.
	RunCommandTargets *CloudWatchEventsRuleRunCommandTargetList `json:"RunCommandTargets,omitempty"`
}

// CloudWatchEventsRuleRunCommandParametersList represents a list of CloudWatchEventsRuleRunCommandParameters
type CloudWatchEventsRuleRunCommandParametersList []CloudWatchEventsRuleRunCommandParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudWatchEventsRuleRunCommandParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudWatchEventsRuleRunCommandParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudWatchEventsRuleRunCommandParametersList{item}
		return nil
	}
	list := []CloudWatchEventsRuleRunCommandParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudWatchEventsRuleRunCommandParametersList(list)
		return nil
	}
	return err
}

// CloudWatchEventsRuleRunCommandTarget represents Amazon CloudWatch Events Rule RunCommandTarget
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-runcommandtarget.html
type CloudWatchEventsRuleRunCommandTarget struct {
	// The key, either tag: tag-key or InstanceIds.
	Key interface{} `json:"Key,omitempty"`

	// A list of tag values or EC2 instance IDs.
	Values interface{} `json:"Values,omitempty"`
}

// CloudWatchEventsRuleRunCommandTargetList represents a list of CloudWatchEventsRuleRunCommandTarget
type CloudWatchEventsRuleRunCommandTargetList []CloudWatchEventsRuleRunCommandTarget

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudWatchEventsRuleRunCommandTargetList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudWatchEventsRuleRunCommandTarget{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudWatchEventsRuleRunCommandTargetList{item}
		return nil
	}
	list := []CloudWatchEventsRuleRunCommandTarget{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudWatchEventsRuleRunCommandTargetList(list)
		return nil
	}
	return err
}

// CloudWatchEventsRuleTarget represents Amazon CloudWatch Events Rule Target
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html
type CloudWatchEventsRuleTarget struct {
	// The Amazon Resource Name (ARN) of the target.
	Arn *StringExpr `json:"Arn,omitempty"`

	// The Amazon ECS task definition and task count to use, if the event
	// target is an Amazon ECS task.
	EcsParameters *CloudWatchEventsRuleEcsParameters `json:"EcsParameters,omitempty"`

	// A unique, user-defined identifier for the target. Acceptable values
	// include alphanumeric characters, periods (.), hyphens (-), and
	// underscores (_).
	Id *StringExpr `json:"Id,omitempty"`

	// A JSON-formatted text string that is passed to the target. This value
	// overrides the matched event.
	Input *StringExpr `json:"Input,omitempty"`

	// When you don't want to pass the entire matched event, the JSONPath
	// that describes which part of the event to pass to the target.
	InputPath *StringExpr `json:"InputPath,omitempty"`

	// Settings that provide custom input to a target based on certain event
	// data. You can extract one or more key-value pairs from the event, and
	// then use that data to send customized input to the target.
	InputTransformer *CloudWatchEventsRuleInputTransformer `json:"InputTransformer,omitempty"`

	// Settings that control shard assignment, when the target is a Kinesis
	// stream. If you don't include this parameter, eventId is used as the
	// partition key.
	KinesisParameters *CloudWatchEventsRuleKinesisParameters `json:"KinesisParameters,omitempty"`

	// The Amazon Resource Name (ARN) of the AWS Identity and Access
	// Management (IAM) role to use for this target when the rule is
	// triggered. If one rule triggers multiple targets, you can use a
	// different IAM role for each target.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// Parameters used when the rule invokes Amazon EC2 Systems Manager Run
	// Command.
	RunCommandParameters *CloudWatchEventsRuleRunCommandParameters `json:"RunCommandParameters,omitempty"`
}

// CloudWatchEventsRuleTargetList represents a list of CloudWatchEventsRuleTarget
type CloudWatchEventsRuleTargetList []CloudWatchEventsRuleTarget

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudWatchEventsRuleTargetList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudWatchEventsRuleTarget{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudWatchEventsRuleTargetList{item}
		return nil
	}
	list := []CloudWatchEventsRuleTarget{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudWatchEventsRuleTargetList(list)
		return nil
	}
	return err
}

// CloudWatchLogsMetricFilterMetricTransformationProperty represents CloudWatch Logs MetricFilter MetricTransformation Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-logs-metricfilter-metrictransformation.html
type CloudWatchLogsMetricFilterMetricTransformationProperty struct {
	// The name of the CloudWatch metric to which the log information will be
	// published.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// The destination namespace of the CloudWatch metric. Namespaces are
	// containers for metrics. For example, you can add related metrics in
	// the same namespace.
	MetricNamespace *StringExpr `json:"MetricNamespace,omitempty"`

	// The value that is published to the CloudWatch metric. For example, if
	// you're counting the occurrences of a particular term like Error,
	// specify 1 for the metric value. If you're counting the number of bytes
	// transferred, reference the value that is in the log event by using $
	// followed by the name of the field that you specified in the filter
	// pattern, such as $size.
	MetricValue *StringExpr `json:"MetricValue,omitempty"`
}

// CloudWatchLogsMetricFilterMetricTransformationPropertyList represents a list of CloudWatchLogsMetricFilterMetricTransformationProperty
type CloudWatchLogsMetricFilterMetricTransformationPropertyList []CloudWatchLogsMetricFilterMetricTransformationProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CloudWatchLogsMetricFilterMetricTransformationPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CloudWatchLogsMetricFilterMetricTransformationProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CloudWatchLogsMetricFilterMetricTransformationPropertyList{item}
		return nil
	}
	list := []CloudWatchLogsMetricFilterMetricTransformationProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CloudWatchLogsMetricFilterMetricTransformationPropertyList(list)
		return nil
	}
	return err
}

// CodeBuildProjectArtifacts represents AWS CodeBuild Project Artifacts
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html
type CodeBuildProjectArtifacts struct {
	// The location where AWS CodeBuild saves the build output artifacts. For
	// valid values, see the artifacts-location field in the AWS CodeBuild
	// User Guide.
	Location *StringExpr `json:"Location,omitempty"`

	// The name of the build output folder where AWS CodeBuild saves the
	// build output artifacts. For .zip packages, the name of the build
	// output .zip file that contains the build output artifacts.
	Name *StringExpr `json:"Name,omitempty"`

	// The information AWS CodeBuild adds to the build output path, such as a
	// build ID. For more information, see the namespaceType field in the AWS
	// CodeBuild User Guide.
	NamespaceType *StringExpr `json:"NamespaceType,omitempty"`

	// Indicates how AWS CodeBuild packages the build output artifacts. For
	// valid values, see the packaging field in the AWS CodeBuild User Guide.
	Packaging *StringExpr `json:"Packaging,omitempty"`

	// The path to the build output folder where AWS CodeBuild saves the
	// build output artifacts.
	Path *StringExpr `json:"Path,omitempty"`

	// The type of build output artifact. For valid values, see the
	// artifacts-type field in the AWS CodeBuild User Guide.
	Type *StringExpr `json:"Type,omitempty"`
}

// CodeBuildProjectArtifactsList represents a list of CodeBuildProjectArtifacts
type CodeBuildProjectArtifactsList []CodeBuildProjectArtifacts

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeBuildProjectArtifactsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeBuildProjectArtifacts{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeBuildProjectArtifactsList{item}
		return nil
	}
	list := []CodeBuildProjectArtifacts{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeBuildProjectArtifactsList(list)
		return nil
	}
	return err
}

// CodeBuildProjectEnvironment represents AWS CodeBuild Project Environment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html
type CodeBuildProjectEnvironment struct {
	// The type of compute environment, such as BUILD_GENERAL1_SMALL. The
	// compute type determines the number of CPU cores and memory the build
	// environment uses. For valid values, see the computeType field in the
	// AWS CodeBuild User Guide.
	ComputeType *StringExpr `json:"ComputeType,omitempty"`

	// The environment variables that your builds can use. For more
	// information, see the environmentVariables field in the AWS CodeBuild
	// User Guide.
	EnvironmentVariables *CodeBuildProjectEnvironmentVariableList `json:"EnvironmentVariables,omitempty"`

	// The Docker image identifier that the build environment uses. For more
	// information, see the image field in the AWS CodeBuild User Guide.
	Image *StringExpr `json:"Image,omitempty"`

	// Indicates how the project builds Docker images. Specify true to enable
	// running the Docker daemon inside a Docker container.
	PrivilegedMode *BoolExpr `json:"PrivilegedMode,omitempty"`

	// The type of build environment. For valid values, see the
	// environment-type field in the AWS CodeBuild User Guide.
	Type *StringExpr `json:"Type,omitempty"`
}

// CodeBuildProjectEnvironmentList represents a list of CodeBuildProjectEnvironment
type CodeBuildProjectEnvironmentList []CodeBuildProjectEnvironment

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeBuildProjectEnvironmentList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeBuildProjectEnvironment{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeBuildProjectEnvironmentList{item}
		return nil
	}
	list := []CodeBuildProjectEnvironment{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeBuildProjectEnvironmentList(list)
		return nil
	}
	return err
}

// CodeBuildProjectEnvironmentVariable represents AWS CodeBuild Project EnvironmentVariable
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environmentvariable.html
type CodeBuildProjectEnvironmentVariable struct {
	// The name of an environment variable.
	Name *StringExpr `json:"Name,omitempty"`

	// The type of environment variable. Valid values are:
	Type *StringExpr `json:"Type,omitempty"`

	// The value of the environment variable.
	Value *StringExpr `json:"Value,omitempty"`
}

// CodeBuildProjectEnvironmentVariableList represents a list of CodeBuildProjectEnvironmentVariable
type CodeBuildProjectEnvironmentVariableList []CodeBuildProjectEnvironmentVariable

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeBuildProjectEnvironmentVariableList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeBuildProjectEnvironmentVariable{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeBuildProjectEnvironmentVariableList{item}
		return nil
	}
	list := []CodeBuildProjectEnvironmentVariable{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeBuildProjectEnvironmentVariableList(list)
		return nil
	}
	return err
}

// CodeBuildProjectProjectCache represents AWS CodeBuild Project ProjectCache
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectcache.html
type CodeBuildProjectProjectCache struct {
	// The Amazon S3 bucket name and prefix—for example, mybucket/prefix.
	// This value is ignored when Type is set to NO_CACHE.
	Location interface{} `json:"Location,omitempty"`

	// The type of cache for the build project to use. Valid values are:
	Type interface{} `json:"Type,omitempty"`
}

// CodeBuildProjectProjectCacheList represents a list of CodeBuildProjectProjectCache
type CodeBuildProjectProjectCacheList []CodeBuildProjectProjectCache

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeBuildProjectProjectCacheList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeBuildProjectProjectCache{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeBuildProjectProjectCacheList{item}
		return nil
	}
	list := []CodeBuildProjectProjectCache{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeBuildProjectProjectCacheList(list)
		return nil
	}
	return err
}

// CodeBuildProjectSource represents AWS CodeBuild Project Source
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html
type CodeBuildProjectSource struct {
	// Information about the authorization settings for AWS CodeBuild to
	// access the source code to be built.
	Auth *CodeBuildProjectSourceAuth `json:"Auth,omitempty"`

	// The build specification for the project. If this value is not
	// provided, then the source code must contain a build spec file named
	// buildspec.yml at the root level. If this value is provided, it can be
	// either a single string containing the entire build specification, or
	// the path to an alternate build spec file relative to the value of the
	// built-in environment variable CODEBUILD_SRC_DIR. The alternate build
	// spec file can have a name other than buildspec.yml, for example
	// myspec.yml or build_spec_qa.yml or similar. For more information, see
	// the Build Spec Reference in the AWS CodeBuild User Guide.
	BuildSpec *StringExpr `json:"BuildSpec,omitempty"`

	// The location of the source code in the specified repository type. For
	// more information, see the source-location field in the AWS CodeBuild
	// User Guide.
	Location *StringExpr `json:"Location,omitempty"`

	// The type of repository that contains your source code. For valid
	// values, see the source-type field in the AWS CodeBuild User Guide.
	Type *StringExpr `json:"Type,omitempty"`
}

// CodeBuildProjectSourceList represents a list of CodeBuildProjectSource
type CodeBuildProjectSourceList []CodeBuildProjectSource

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeBuildProjectSourceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeBuildProjectSource{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeBuildProjectSourceList{item}
		return nil
	}
	list := []CodeBuildProjectSource{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeBuildProjectSourceList(list)
		return nil
	}
	return err
}

// CodeBuildProjectSourceAuth represents AWS CodeBuild Project SourceAuth
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-sourceauth.html
type CodeBuildProjectSourceAuth struct {
	// The authorization type to use. The only valid value is OAUTH, which
	// represents the OAuth authorization type.
	Type interface{} `json:"Type,omitempty"`

	// The resource value that applies to the specified authorization type.
	Resource interface{} `json:"Resource,omitempty"`
}

// CodeBuildProjectSourceAuthList represents a list of CodeBuildProjectSourceAuth
type CodeBuildProjectSourceAuthList []CodeBuildProjectSourceAuth

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeBuildProjectSourceAuthList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeBuildProjectSourceAuth{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeBuildProjectSourceAuthList{item}
		return nil
	}
	list := []CodeBuildProjectSourceAuth{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeBuildProjectSourceAuthList(list)
		return nil
	}
	return err
}

// CodeBuildProjectVpcConfig represents AWS CodeBuild Project VpcConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-vpcconfig.html
type CodeBuildProjectVpcConfig struct {
	// The IDs of the security groups in the Amazon VPC. The maximum count is
	// 5.
	SecurityGroupIds interface{} `json:"SecurityGroupIds,omitempty"`

	// The IDs of the subnets in the Amazon VPC. The maximum count is 16.
	Subnets interface{} `json:"Subnets,omitempty"`

	// The ID of the Amazon VPC.
	VpcId interface{} `json:"VpcId,omitempty"`
}

// CodeBuildProjectVpcConfigList represents a list of CodeBuildProjectVpcConfig
type CodeBuildProjectVpcConfigList []CodeBuildProjectVpcConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeBuildProjectVpcConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeBuildProjectVpcConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeBuildProjectVpcConfigList{item}
		return nil
	}
	list := []CodeBuildProjectVpcConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeBuildProjectVpcConfigList(list)
		return nil
	}
	return err
}

// CodeCommitRepositoryTrigger represents AWS CodeCommit Repository Trigger
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-triggers.html
type CodeCommitRepositoryTrigger struct {
	// The names of the branches in the AWS CodeCommit repository that
	// contain events that you want to include in the trigger. If you don't
	// specify at least one branch, the trigger applies to all branches.
	Branches interface{} `json:"Branches,omitempty"`

	// When an event is triggered, additional information that AWS CodeCommit
	// includes when it sends information to the target.
	CustomData *StringExpr `json:"CustomData,omitempty"`

	// The Amazon Resource Name (ARN) of the resource that is the target for
	// this trigger. For valid targets, see Manage Triggers for an AWS
	// CodeCommit Repository in the AWS CodeCommit User Guide.
	DestinationArn *StringExpr `json:"DestinationArn,omitempty"`

	// The repository events for which AWS CodeCommit sends information to
	// the target, which you specified in the DestinationArn property. If you
	// don't specify events, the trigger runs for all repository events. For
	// valid values, see the RepositoryTrigger data type in the AWS
	// CodeCommit API Reference.
	Events interface{} `json:"Events,omitempty"`

	// A name for the trigger.
	Name *StringExpr `json:"Name,omitempty"`
}

// CodeCommitRepositoryTriggerList represents a list of CodeCommitRepositoryTrigger
type CodeCommitRepositoryTriggerList []CodeCommitRepositoryTrigger

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeCommitRepositoryTriggerList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeCommitRepositoryTrigger{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeCommitRepositoryTriggerList{item}
		return nil
	}
	list := []CodeCommitRepositoryTrigger{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeCommitRepositoryTriggerList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentConfigMinimumHealthyHosts represents AWS CodeDeploy DeploymentConfig MinimumHealthyHosts
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html
type CodeDeployDeploymentConfigMinimumHealthyHosts struct {
	// The type of count to use, such as an absolute value or a percentage of
	// the total number of instances in the deployment. For valid values, see
	// MinimumHealthyHosts in the AWS CodeDeploy API Reference.
	Type *StringExpr `json:"Type,omitempty"`

	// The minimum number of healthy instances.
	Value *IntegerExpr `json:"Value,omitempty"`
}

// CodeDeployDeploymentConfigMinimumHealthyHostsList represents a list of CodeDeployDeploymentConfigMinimumHealthyHosts
type CodeDeployDeploymentConfigMinimumHealthyHostsList []CodeDeployDeploymentConfigMinimumHealthyHosts

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentConfigMinimumHealthyHostsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentConfigMinimumHealthyHosts{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentConfigMinimumHealthyHostsList{item}
		return nil
	}
	list := []CodeDeployDeploymentConfigMinimumHealthyHosts{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentConfigMinimumHealthyHostsList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupAlarm represents AWS CodeDeploy DeploymentGroup Alarm
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarm.html
type CodeDeployDeploymentGroupAlarm struct {
	// The name of the alarm. For more information, see Alarm in the AWS
	// CodeDeploy API Reference.
	Name *StringExpr `json:"Name,omitempty"`
}

// CodeDeployDeploymentGroupAlarmList represents a list of CodeDeployDeploymentGroupAlarm
type CodeDeployDeploymentGroupAlarmList []CodeDeployDeploymentGroupAlarm

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupAlarmList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupAlarm{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupAlarmList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupAlarm{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupAlarmList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupAlarmConfiguration represents AWS CodeDeploy DeploymentGroup AlarmConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarmconfiguration.html
type CodeDeployDeploymentGroupAlarmConfiguration struct {
	// The list of alarms configured for the deployment group. Duplicates are
	// not allowed.
	Alarms *CodeDeployDeploymentGroupAlarmList `json:"Alarms,omitempty"`

	// Indicates whether the alarm configuration is enabled.
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// Indicates whether a deployment should continue if information about
	// the current state of alarms cannot be retrieved from CloudWatch. The
	// default value is false.
	IgnorePollAlarmFailure *BoolExpr `json:"IgnorePollAlarmFailure,omitempty"`
}

// CodeDeployDeploymentGroupAlarmConfigurationList represents a list of CodeDeployDeploymentGroupAlarmConfiguration
type CodeDeployDeploymentGroupAlarmConfigurationList []CodeDeployDeploymentGroupAlarmConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupAlarmConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupAlarmConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupAlarmConfigurationList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupAlarmConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupAlarmConfigurationList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupAutoRollbackConfiguration represents AWS CodeDeploy DeploymentGroup AutoRollbackConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-autorollbackconfiguration.html
type CodeDeployDeploymentGroupAutoRollbackConfiguration struct {
	// Indicates whether a defined automatic rollback configuration is
	// currently enabled.
	Enabled interface{} `json:"Enabled,omitempty"`

	// The event type or types that trigger a rollback. Valid values are
	// DEPLOYMENT_FAILURE, DEPLOYMENT_STOP_ON_ALARM, or
	// DEPLOYMENT_STOP_ON_REQUEST.
	Events interface{} `json:"Events,omitempty"`
}

// CodeDeployDeploymentGroupAutoRollbackConfigurationList represents a list of CodeDeployDeploymentGroupAutoRollbackConfiguration
type CodeDeployDeploymentGroupAutoRollbackConfigurationList []CodeDeployDeploymentGroupAutoRollbackConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupAutoRollbackConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupAutoRollbackConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupAutoRollbackConfigurationList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupAutoRollbackConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupAutoRollbackConfigurationList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupDeployment represents AWS CodeDeploy DeploymentGroup Deployment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html
type CodeDeployDeploymentGroupDeployment struct {
	// A description about this deployment.
	Description *StringExpr `json:"Description,omitempty"`

	// Whether to continue the deployment if the ApplicationStop deployment
	// lifecycle event fails. If you want AWS CodeDeploy to continue the
	// deployment lifecycle even if the ApplicationStop event fails on an
	// instance, specify true. The deployment continues to the BeforeInstall
	// deployment lifecycle event. If you want AWS CodeDeploy to stop
	// deployment on the instance if the ApplicationStop event fails, specify
	// false or do not specify a value.
	IgnoreApplicationStopFailures *BoolExpr `json:"IgnoreApplicationStopFailures,omitempty"`

	// The location of the application revision to deploy.
	Revision *CodeDeployDeploymentGroupDeploymentRevision `json:"Revision,omitempty"`
}

// CodeDeployDeploymentGroupDeploymentList represents a list of CodeDeployDeploymentGroupDeployment
type CodeDeployDeploymentGroupDeploymentList []CodeDeployDeploymentGroupDeployment

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupDeploymentList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupDeployment{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupDeploymentList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupDeployment{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupDeploymentList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupDeploymentStyle represents AWS CodeDeploy DeploymentGroup DeploymentStyle
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deploymentstyle.html
type CodeDeployDeploymentGroupDeploymentStyle struct {
	// Indicates whether to route deployment traffic behind a load balancer.
	DeploymentOption interface{} `json:"DeploymentOption,omitempty"`

	// Indicates whether to run an in-place or blue/green deployment.
	DeploymentType interface{} `json:"DeploymentType,omitempty"`
}

// CodeDeployDeploymentGroupDeploymentStyleList represents a list of CodeDeployDeploymentGroupDeploymentStyle
type CodeDeployDeploymentGroupDeploymentStyleList []CodeDeployDeploymentGroupDeploymentStyle

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupDeploymentStyleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupDeploymentStyle{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupDeploymentStyleList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupDeploymentStyle{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupDeploymentStyleList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupELBInfo represents AWS CodeDeploy DeploymentGroup ELBInfo
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-elbinfo.html
type CodeDeployDeploymentGroupELBInfo struct {
	// The name of the load balancer that instances are deregistered from so
	// they are not serving traffic during a deployment, and then
	// re-registered with after the deployment completes. No duplicates
	// allowed.
	Name interface{} `json:"Name,omitempty"`
}

// CodeDeployDeploymentGroupELBInfoList represents a list of CodeDeployDeploymentGroupELBInfo
type CodeDeployDeploymentGroupELBInfoList []CodeDeployDeploymentGroupELBInfo

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupELBInfoList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupELBInfo{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupELBInfoList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupELBInfo{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupELBInfoList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupLoadBalancerInfo represents AWS CodeDeploy DeploymentGroup LoadBalancerInfo
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-loadbalancerinfo.html
type CodeDeployDeploymentGroupLoadBalancerInfo struct {
}

// CodeDeployDeploymentGroupLoadBalancerInfoList represents a list of CodeDeployDeploymentGroupLoadBalancerInfo
type CodeDeployDeploymentGroupLoadBalancerInfoList []CodeDeployDeploymentGroupLoadBalancerInfo

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupLoadBalancerInfoList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupLoadBalancerInfo{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupLoadBalancerInfoList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupLoadBalancerInfo{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupLoadBalancerInfoList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupTargetGroupInfo represents AWS CodeDeploy DeploymentGroup TargetGroupInfo
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-targetgroupinfo.html
type CodeDeployDeploymentGroupTargetGroupInfo struct {
	// For blue/green deployments, the name of the target group that
	// instances in the original environment are deregistered from, and
	// instances in the replacement environment registered with. For in-place
	// deployments, the name of the target group that instances are
	// deregistered from, so they are not serving traffic during a
	// deployment, and then re-registered with after the deployment
	// completes. No duplicates allowed.
	Name interface{} `json:"Name,omitempty"`
}

// CodeDeployDeploymentGroupTargetGroupInfoList represents a list of CodeDeployDeploymentGroupTargetGroupInfo
type CodeDeployDeploymentGroupTargetGroupInfoList []CodeDeployDeploymentGroupTargetGroupInfo

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupTargetGroupInfoList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupTargetGroupInfo{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupTargetGroupInfoList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupTargetGroupInfo{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupTargetGroupInfoList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupDeploymentRevision represents AWS CodeDeploy DeploymentGroup Deployment Revision
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html
type CodeDeployDeploymentGroupDeploymentRevision struct {
	// If your application revision is stored in GitHub, information about
	// the location where it is stored.
	GitHubLocation *CodeDeployDeploymentGroupDeploymentRevisionGitHubLocation `json:"GitHubLocation,omitempty"`

	// The application revision's location, such as in an S3 bucket or GitHub
	// repository. For valid values, see RevisionLocation in the AWS
	// CodeDeploy API Reference.
	RevisionType *StringExpr `json:"RevisionType,omitempty"`

	// If the application revision is stored in an S3 bucket, information
	// about the location.
	S3Location *CodeDeployDeploymentGroupDeploymentRevisionS3Location `json:"S3Location,omitempty"`
}

// CodeDeployDeploymentGroupDeploymentRevisionList represents a list of CodeDeployDeploymentGroupDeploymentRevision
type CodeDeployDeploymentGroupDeploymentRevisionList []CodeDeployDeploymentGroupDeploymentRevision

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupDeploymentRevisionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupDeploymentRevision{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupDeploymentRevisionList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupDeploymentRevision{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupDeploymentRevisionList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupDeploymentRevisionGitHubLocation represents AWS CodeDeploy DeploymentGroup Deployment Revision GitHubLocation
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation.html
type CodeDeployDeploymentGroupDeploymentRevisionGitHubLocation struct {
	// The SHA1 commit ID of the GitHub commit to use as your application
	// revision.
	CommitId *StringExpr `json:"CommitId,omitempty"`

	// The GitHub account and repository name that includes the application
	// revision. Specify the value as account/repository_name.
	Repository *StringExpr `json:"Repository,omitempty"`
}

// CodeDeployDeploymentGroupDeploymentRevisionGitHubLocationList represents a list of CodeDeployDeploymentGroupDeploymentRevisionGitHubLocation
type CodeDeployDeploymentGroupDeploymentRevisionGitHubLocationList []CodeDeployDeploymentGroupDeploymentRevisionGitHubLocation

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupDeploymentRevisionGitHubLocationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupDeploymentRevisionGitHubLocation{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupDeploymentRevisionGitHubLocationList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupDeploymentRevisionGitHubLocation{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupDeploymentRevisionGitHubLocationList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupDeploymentRevisionS3Location represents AWS CodeDeploy DeploymentGroup Deployment Revision S3Location
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html
type CodeDeployDeploymentGroupDeploymentRevisionS3Location struct {
	// The name of the S3 bucket where the application revision is stored.
	Bucket *StringExpr `json:"Bucket,omitempty"`

	// The file type of the application revision, such as tar, tgz, or zip.
	// For valid values, see S3Location in the AWS CodeDeploy API Reference.
	BundleType *StringExpr `json:"BundleType,omitempty"`

	// The Amazon S3 ETag (a file checksum) of the application revision. If
	// you don't specify a value, AWS CodeDeploy skips the ETag validation of
	// your application revision.
	ETag *StringExpr `json:"ETag,omitempty"`

	// The file name of the application revision (Amazon S3 object name).
	Key *StringExpr `json:"Key,omitempty"`

	// For versioning-enabled buckets, a specific version of the application
	// revision.
	Version *StringExpr `json:"Version,omitempty"`
}

// CodeDeployDeploymentGroupDeploymentRevisionS3LocationList represents a list of CodeDeployDeploymentGroupDeploymentRevisionS3Location
type CodeDeployDeploymentGroupDeploymentRevisionS3LocationList []CodeDeployDeploymentGroupDeploymentRevisionS3Location

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupDeploymentRevisionS3LocationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupDeploymentRevisionS3Location{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupDeploymentRevisionS3LocationList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupDeploymentRevisionS3Location{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupDeploymentRevisionS3LocationList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupEc2TagFilters represents AWS CodeDeploy DeploymentGroup Ec2TagFilters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilters.html
type CodeDeployDeploymentGroupEc2TagFilters struct {
	// Filter instances with this key.
	Key *StringExpr `json:"Key,omitempty"`

	// The filter type. For example, you can filter instances by the key, tag
	// value, or both. For valid values, see EC2TagFilter in the AWS
	// CodeDeploy API Reference.
	Type *StringExpr `json:"Type,omitempty"`

	// Filter instances with this tag value.
	Value *StringExpr `json:"Value,omitempty"`
}

// CodeDeployDeploymentGroupEc2TagFiltersList represents a list of CodeDeployDeploymentGroupEc2TagFilters
type CodeDeployDeploymentGroupEc2TagFiltersList []CodeDeployDeploymentGroupEc2TagFilters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupEc2TagFiltersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupEc2TagFilters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupEc2TagFiltersList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupEc2TagFilters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupEc2TagFiltersList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupOnPremisesInstanceTagFilters represents AWS CodeDeploy DeploymentGroup OnPremisesInstanceTagFilters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters.html
type CodeDeployDeploymentGroupOnPremisesInstanceTagFilters struct {
	// Filter on-premises instances with this key.
	Key *StringExpr `json:"Key,omitempty"`

	// The filter type. For example, you can filter on-premises instances by
	// the key, tag value, or both. For valid values, see EC2TagFilter in the
	// AWS CodeDeploy API Reference.
	Type *StringExpr `json:"Type,omitempty"`

	// Filter on-premises instances with this tag value.
	Value *StringExpr `json:"Value,omitempty"`
}

// CodeDeployDeploymentGroupOnPremisesInstanceTagFiltersList represents a list of CodeDeployDeploymentGroupOnPremisesInstanceTagFilters
type CodeDeployDeploymentGroupOnPremisesInstanceTagFiltersList []CodeDeployDeploymentGroupOnPremisesInstanceTagFilters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupOnPremisesInstanceTagFiltersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupOnPremisesInstanceTagFilters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupOnPremisesInstanceTagFiltersList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupOnPremisesInstanceTagFilters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupOnPremisesInstanceTagFiltersList(list)
		return nil
	}
	return err
}

// CodeDeployDeploymentGroupTriggerConfig represents AWS CodeDeploy DeploymentGroup TriggerConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-triggerconfig.html
type CodeDeployDeploymentGroupTriggerConfig struct {
	// The event type or types that trigger notifications.
	TriggerEvents interface{} `json:"TriggerEvents,omitempty"`

	// The name of the notification trigger.
	TriggerName *StringExpr `json:"TriggerName,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon Simple Notification
	// Service topic through which notifications about deployment or instance
	// events are sent.
	TriggerTargetArn *StringExpr `json:"TriggerTargetArn,omitempty"`
}

// CodeDeployDeploymentGroupTriggerConfigList represents a list of CodeDeployDeploymentGroupTriggerConfig
type CodeDeployDeploymentGroupTriggerConfigList []CodeDeployDeploymentGroupTriggerConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodeDeployDeploymentGroupTriggerConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodeDeployDeploymentGroupTriggerConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodeDeployDeploymentGroupTriggerConfigList{item}
		return nil
	}
	list := []CodeDeployDeploymentGroupTriggerConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodeDeployDeploymentGroupTriggerConfigList(list)
		return nil
	}
	return err
}

// CodePipelineCustomActionTypeArtifactDetails represents AWS CodePipeline CustomActionType ArtifactDetails
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-artifactdetails.html
type CodePipelineCustomActionTypeArtifactDetails struct {
	// The maximum number of artifacts allowed for the action type.
	MaximumCount *IntegerExpr `json:"MaximumCount,omitempty"`

	// The minimum number of artifacts allowed for the action type.
	MinimumCount *IntegerExpr `json:"MinimumCount,omitempty"`
}

// CodePipelineCustomActionTypeArtifactDetailsList represents a list of CodePipelineCustomActionTypeArtifactDetails
type CodePipelineCustomActionTypeArtifactDetailsList []CodePipelineCustomActionTypeArtifactDetails

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelineCustomActionTypeArtifactDetailsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelineCustomActionTypeArtifactDetails{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelineCustomActionTypeArtifactDetailsList{item}
		return nil
	}
	list := []CodePipelineCustomActionTypeArtifactDetails{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelineCustomActionTypeArtifactDetailsList(list)
		return nil
	}
	return err
}

// CodePipelineCustomActionTypeConfigurationProperties represents AWS CodePipeline CustomActionType ConfigurationProperties
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-configurationproperties.html
type CodePipelineCustomActionTypeConfigurationProperties struct {
	// A description of this configuration property that will be displayed to
	// users.
	Description *StringExpr `json:"Description,omitempty"`

	// Indicates whether the configuration property is a key.
	Key *BoolExpr `json:"Key,omitempty"`

	// A name for this configuration property.
	Name *StringExpr `json:"Name,omitempty"`

	// Indicates whether the configuration property will be used with the
	// PollForJobs call. A custom action can have one queryable property. The
	// queryable property must be required (see the Required property) and
	// must not be secret (see the Secret property). For more information,
	// see the queryable contents for the ActionConfigurationProperty data
	// type in the AWS CodePipeline API Reference.
	Queryable *BoolExpr `json:"Queryable,omitempty"`

	// Indicates whether the configuration property is a required value.
	Required *BoolExpr `json:"Required,omitempty"`

	// Indicates whether the configuration property is secret. Secret
	// configuration properties are hidden from all AWS CodePipeline calls
	// except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and
	// PollForThirdPartyJobs.
	Secret *BoolExpr `json:"Secret,omitempty"`

	// The type of the configuration property, such as String, Number, or
	// Boolean.
	Type *StringExpr `json:"Type,omitempty"`
}

// CodePipelineCustomActionTypeConfigurationPropertiesList represents a list of CodePipelineCustomActionTypeConfigurationProperties
type CodePipelineCustomActionTypeConfigurationPropertiesList []CodePipelineCustomActionTypeConfigurationProperties

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelineCustomActionTypeConfigurationPropertiesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelineCustomActionTypeConfigurationProperties{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelineCustomActionTypeConfigurationPropertiesList{item}
		return nil
	}
	list := []CodePipelineCustomActionTypeConfigurationProperties{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelineCustomActionTypeConfigurationPropertiesList(list)
		return nil
	}
	return err
}

// CodePipelineCustomActionTypeSettings represents AWS CodePipeline CustomActionType Settings
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-settings.html
type CodePipelineCustomActionTypeSettings struct {
	// The URL that is returned to the AWS CodePipeline console that links to
	// the resources of the external system, such as the configuration page
	// for an AWS CodeDeploy deployment group.
	EntityUrlTemplate *StringExpr `json:"EntityUrlTemplate,omitempty"`

	// The URL that is returned to the AWS CodePipeline console that links to
	// the top-level landing page for the external system, such as the
	// console page for AWS CodeDeploy.
	ExecutionUrlTemplate *StringExpr `json:"ExecutionUrlTemplate,omitempty"`

	// The URL that is returned to the AWS CodePipeline console that links to
	// the page where customers can update or change the configuration of the
	// external action.
	RevisionUrlTemplate *StringExpr `json:"RevisionUrlTemplate,omitempty"`

	// The URL of a sign-up page where users can sign up for an external
	// service and specify the initial configurations for the service's
	// action.
	ThirdPartyConfigurationUrl *StringExpr `json:"ThirdPartyConfigurationUrl,omitempty"`
}

// CodePipelineCustomActionTypeSettingsList represents a list of CodePipelineCustomActionTypeSettings
type CodePipelineCustomActionTypeSettingsList []CodePipelineCustomActionTypeSettings

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelineCustomActionTypeSettingsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelineCustomActionTypeSettings{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelineCustomActionTypeSettingsList{item}
		return nil
	}
	list := []CodePipelineCustomActionTypeSettings{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelineCustomActionTypeSettingsList(list)
		return nil
	}
	return err
}

// CodePipelinePipelineArtifactStore represents AWS CodePipeline Pipeline ArtifactStore
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore.html
type CodePipelinePipelineArtifactStore struct {
	// The encryption key AWS CodePipeline uses to encrypt the data in the
	// artifact store, such as an AWS Key Management Service (AWS KMS) key.
	// If you don't specify a key, AWS CodePipeline uses the default key for
	// Amazon Simple Storage Service (Amazon S3).
	EncryptionKey *CodePipelinePipelineArtifactStoreEncryptionKey `json:"EncryptionKey,omitempty"`

	// The location where AWS CodePipeline stores artifacts for a pipeline,
	// such as an S3 bucket.
	Location *StringExpr `json:"Location,omitempty"`

	// The type of the artifact store, such as Amazon S3. For valid values,
	// see ArtifactStore in the AWS CodePipeline API Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// CodePipelinePipelineArtifactStoreList represents a list of CodePipelinePipelineArtifactStore
type CodePipelinePipelineArtifactStoreList []CodePipelinePipelineArtifactStore

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelinePipelineArtifactStoreList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelinePipelineArtifactStore{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelinePipelineArtifactStoreList{item}
		return nil
	}
	list := []CodePipelinePipelineArtifactStore{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelinePipelineArtifactStoreList(list)
		return nil
	}
	return err
}

// CodePipelinePipelineArtifactStoreEncryptionKey represents AWS CodePipeline Pipeline ArtifactStore EncryptionKey
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore-encryptionkey.html
type CodePipelinePipelineArtifactStoreEncryptionKey struct {
	// The ID of the key. For an AWS KMS key, specify the key ID or key
	// Amazon Resource Number (ARN).
	Id *StringExpr `json:"Id,omitempty"`

	// The type of encryption key, such as KMS. For valid values, see
	// EncryptionKey in the AWS CodePipeline API Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// CodePipelinePipelineArtifactStoreEncryptionKeyList represents a list of CodePipelinePipelineArtifactStoreEncryptionKey
type CodePipelinePipelineArtifactStoreEncryptionKeyList []CodePipelinePipelineArtifactStoreEncryptionKey

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelinePipelineArtifactStoreEncryptionKeyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelinePipelineArtifactStoreEncryptionKey{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelinePipelineArtifactStoreEncryptionKeyList{item}
		return nil
	}
	list := []CodePipelinePipelineArtifactStoreEncryptionKey{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelinePipelineArtifactStoreEncryptionKeyList(list)
		return nil
	}
	return err
}

// CodePipelinePipelineDisableInboundStageTransitions represents AWS CodePipeline Pipeline DisableInboundStageTransitions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-disableinboundstagetransitions.html
type CodePipelinePipelineDisableInboundStageTransitions struct {
	// An explanation of why the transition between two stages of a pipeline
	// was disabled.
	Reason *StringExpr `json:"Reason,omitempty"`

	// The name of the stage to which transitions are disabled.
	StageName *StringExpr `json:"StageName,omitempty"`
}

// CodePipelinePipelineDisableInboundStageTransitionsList represents a list of CodePipelinePipelineDisableInboundStageTransitions
type CodePipelinePipelineDisableInboundStageTransitionsList []CodePipelinePipelineDisableInboundStageTransitions

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelinePipelineDisableInboundStageTransitionsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelinePipelineDisableInboundStageTransitions{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelinePipelineDisableInboundStageTransitionsList{item}
		return nil
	}
	list := []CodePipelinePipelineDisableInboundStageTransitions{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelinePipelineDisableInboundStageTransitionsList(list)
		return nil
	}
	return err
}

// CodePipelinePipelineStages represents AWS CodePipeline Pipeline Stages
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html
type CodePipelinePipelineStages struct {
	// The actions to include in this stage.
	Actions *CodePipelinePipelineStagesActionsList `json:"Actions,omitempty"`

	// The gates included in a stage.
	Blockers *CodePipelinePipelineStagesBlockersList `json:"Blockers,omitempty"`

	// A name for this stage.
	Name *StringExpr `json:"Name,omitempty"`
}

// CodePipelinePipelineStagesList represents a list of CodePipelinePipelineStages
type CodePipelinePipelineStagesList []CodePipelinePipelineStages

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelinePipelineStagesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelinePipelineStages{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelinePipelineStagesList{item}
		return nil
	}
	list := []CodePipelinePipelineStages{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelinePipelineStagesList(list)
		return nil
	}
	return err
}

// CodePipelinePipelineStagesActions represents AWS CodePipeline Pipeline Stages Actions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html
type CodePipelinePipelineStagesActions struct {
	// Specifies the action type and the provider of the action.
	ActionTypeId *CodePipelinePipelineStagesActionsActionTypeId `json:"ActionTypeId,omitempty"`

	// The action's configuration. These are key-value pairs that specify
	// input values for an action. For more information, see Action Structure
	// Requirements in AWS CodePipeline in the AWS CodePipeline User Guide.
	Configuration interface{} `json:"Configuration,omitempty"`

	// The name or ID of the artifact that the action consumes, such as a
	// test or build artifact.
	InputArtifacts *CodePipelinePipelineStagesActionsInputArtifactsList `json:"InputArtifacts,omitempty"`

	// The action name.
	Name *StringExpr `json:"Name,omitempty"`

	// The artifact name or ID that is a result of the action, such as a test
	// or build artifact.
	OutputArtifacts *CodePipelinePipelineStagesActionsOutputArtifactsList `json:"OutputArtifacts,omitempty"`

	// The Amazon Resource Name (ARN) of a service role that the action uses.
	// The pipeline's role assumes this role.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// The order in which AWS CodePipeline runs this action.
	RunOrder *IntegerExpr `json:"RunOrder,omitempty"`
}

// CodePipelinePipelineStagesActionsList represents a list of CodePipelinePipelineStagesActions
type CodePipelinePipelineStagesActionsList []CodePipelinePipelineStagesActions

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelinePipelineStagesActionsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelinePipelineStagesActions{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelinePipelineStagesActionsList{item}
		return nil
	}
	list := []CodePipelinePipelineStagesActions{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelinePipelineStagesActionsList(list)
		return nil
	}
	return err
}

// CodePipelinePipelineStagesActionsActionTypeId represents AWS CodePipeline Pipeline Stages Actions ActionTypeId
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html
type CodePipelinePipelineStagesActionsActionTypeId struct {
	// A category that defines which action type the owner (the entity that
	// performs the action) performs. The category that you select determine
	// the providers that you can specify for the Provider property. For
	// valid values, see ActionTypeId in the AWS CodePipeline API Reference.
	Category *StringExpr `json:"Category,omitempty"`

	// The entity that performs the action. For valid values, see
	// ActionTypeId in the AWS CodePipeline API Reference.
	Owner *StringExpr `json:"Owner,omitempty"`

	// The service provider that the action calls. The providers that you can
	// specify are determined by the category that you select. For example, a
	// valid provider for the Deploy category is AWS CodeDeploy, which you
	// would specify as CodeDeploy.
	Provider *StringExpr `json:"Provider,omitempty"`

	// A version identifier for this action.
	Version *StringExpr `json:"Version,omitempty"`
}

// CodePipelinePipelineStagesActionsActionTypeIdList represents a list of CodePipelinePipelineStagesActionsActionTypeId
type CodePipelinePipelineStagesActionsActionTypeIdList []CodePipelinePipelineStagesActionsActionTypeId

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelinePipelineStagesActionsActionTypeIdList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelinePipelineStagesActionsActionTypeId{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelinePipelineStagesActionsActionTypeIdList{item}
		return nil
	}
	list := []CodePipelinePipelineStagesActionsActionTypeId{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelinePipelineStagesActionsActionTypeIdList(list)
		return nil
	}
	return err
}

// CodePipelinePipelineStagesActionsInputArtifacts represents AWS CodePipeline Pipeline Stages Actions InputArtifacts
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-inputartifacts.html
type CodePipelinePipelineStagesActionsInputArtifacts struct {
	// The name of the artifact that the AWS CodePipeline action works on,
	// such as My App.The input artifact of an action must match the output
	// artifact from any preceding action.
	Name *StringExpr `json:"Name,omitempty"`
}

// CodePipelinePipelineStagesActionsInputArtifactsList represents a list of CodePipelinePipelineStagesActionsInputArtifacts
type CodePipelinePipelineStagesActionsInputArtifactsList []CodePipelinePipelineStagesActionsInputArtifacts

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelinePipelineStagesActionsInputArtifactsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelinePipelineStagesActionsInputArtifacts{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelinePipelineStagesActionsInputArtifactsList{item}
		return nil
	}
	list := []CodePipelinePipelineStagesActionsInputArtifacts{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelinePipelineStagesActionsInputArtifactsList(list)
		return nil
	}
	return err
}

// CodePipelinePipelineStagesActionsOutputArtifacts represents AWS CodePipeline Pipeline Stages Actions OutputArtifacts
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-outputartifacts.html
type CodePipelinePipelineStagesActionsOutputArtifacts struct {
	// The name of the artifact that is the result of an AWS CodePipeline
	// action, such as My App. Output artifact names must be unique within a
	// pipeline.
	Name *StringExpr `json:"Name,omitempty"`
}

// CodePipelinePipelineStagesActionsOutputArtifactsList represents a list of CodePipelinePipelineStagesActionsOutputArtifacts
type CodePipelinePipelineStagesActionsOutputArtifactsList []CodePipelinePipelineStagesActionsOutputArtifacts

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelinePipelineStagesActionsOutputArtifactsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelinePipelineStagesActionsOutputArtifacts{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelinePipelineStagesActionsOutputArtifactsList{item}
		return nil
	}
	list := []CodePipelinePipelineStagesActionsOutputArtifacts{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelinePipelineStagesActionsOutputArtifactsList(list)
		return nil
	}
	return err
}

// CodePipelinePipelineStagesBlockers represents AWS CodePipeline Pipeline Stages Blockers
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-blockers.html
type CodePipelinePipelineStagesBlockers struct {
	// The name of the gate declaration.
	Name *StringExpr `json:"Name,omitempty"`

	// The type of gate declaration. For valid values, see BlockerDeclaration
	// in the AWS CodePipeline API Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// CodePipelinePipelineStagesBlockersList represents a list of CodePipelinePipelineStagesBlockers
type CodePipelinePipelineStagesBlockersList []CodePipelinePipelineStagesBlockers

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CodePipelinePipelineStagesBlockersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CodePipelinePipelineStagesBlockers{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CodePipelinePipelineStagesBlockersList{item}
		return nil
	}
	list := []CodePipelinePipelineStagesBlockers{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CodePipelinePipelineStagesBlockersList(list)
		return nil
	}
	return err
}

// CognitoIdentityPoolCognitoStreams represents Amazon Cognito IdentityPool CognitoStreams
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitostreams.html
type CognitoIdentityPoolCognitoStreams struct {
	// The Amazon Resource Name (ARN) of the role Amazon Cognito can assume
	// to publish to the stream. This role must grant access to Amazon
	// Cognito (cognito-sync) to invoke PutRecord on your Amazon Cognito
	// stream.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// Status of the Cognito streams. Valid values are: ENABLED or DISABLED.
	StreamingStatus *StringExpr `json:"StreamingStatus,omitempty"`

	// The name of the Amazon Cognito stream to receive updates. This stream
	// must be in the developer's account and in the same region as the
	// identity pool.
	StreamName *StringExpr `json:"StreamName,omitempty"`
}

// CognitoIdentityPoolCognitoStreamsList represents a list of CognitoIdentityPoolCognitoStreams
type CognitoIdentityPoolCognitoStreamsList []CognitoIdentityPoolCognitoStreams

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoIdentityPoolCognitoStreamsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoIdentityPoolCognitoStreams{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoIdentityPoolCognitoStreamsList{item}
		return nil
	}
	list := []CognitoIdentityPoolCognitoStreams{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoIdentityPoolCognitoStreamsList(list)
		return nil
	}
	return err
}

// CognitoIdentityPoolPushSync represents Amazon Cognito IdentityPool PushSync
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-pushsync.html
type CognitoIdentityPoolPushSync struct {
	// List of Amazon SNS platform application ARNs that could be used by
	// clients.
	ApplicationArns interface{} `json:"ApplicationArns,omitempty"`

	// An IAM role configured to allow Amazon Cognito to call SNS on behalf
	// of the developer.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`
}

// CognitoIdentityPoolPushSyncList represents a list of CognitoIdentityPoolPushSync
type CognitoIdentityPoolPushSyncList []CognitoIdentityPoolPushSync

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoIdentityPoolPushSyncList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoIdentityPoolPushSync{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoIdentityPoolPushSyncList{item}
		return nil
	}
	list := []CognitoIdentityPoolPushSync{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoIdentityPoolPushSyncList(list)
		return nil
	}
	return err
}

// CognitoIdentityPoolRoleAttachmentRoleMapping represents Amazon Cognito IdentityPoolRoleAttachment RoleMapping
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html
type CognitoIdentityPoolRoleAttachmentRoleMapping struct {
	// Specifies the action to be taken if either no rules match the claim
	// value for the Rules type, or there is no cognito:preferred_role claim
	// and there are multiple cognito:roles matches for the Token type. If
	// you specify Token or Rules as the Type, AmbiguousRoleResolution is
	// required.
	AmbiguousRoleResolution *StringExpr `json:"AmbiguousRoleResolution,omitempty"`

	// The rules to be used for mapping users to roles. If you specify Rules
	// as the role mapping type, RulesConfiguration is required.
	RulesConfiguration *CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfiguration `json:"RulesConfiguration,omitempty"`

	// The role mapping type. Token will use cognito:roles and
	// cognito:preferred_role claims from the Amazon Cognito identity
	// provider token to map groups to roles. Rules will attempt to match
	// claims from the token to map to a role.
	Type *StringExpr `json:"Type,omitempty"`
}

// CognitoIdentityPoolRoleAttachmentRoleMappingList represents a list of CognitoIdentityPoolRoleAttachmentRoleMapping
type CognitoIdentityPoolRoleAttachmentRoleMappingList []CognitoIdentityPoolRoleAttachmentRoleMapping

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoIdentityPoolRoleAttachmentRoleMappingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoIdentityPoolRoleAttachmentRoleMapping{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoIdentityPoolRoleAttachmentRoleMappingList{item}
		return nil
	}
	list := []CognitoIdentityPoolRoleAttachmentRoleMapping{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoIdentityPoolRoleAttachmentRoleMappingList(list)
		return nil
	}
	return err
}

// CognitoIdentityPoolRoleAttachmentMappingRule represents Amazon Cognito IdentityPoolRoleAttachment MappingRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-mappingrule.html
type CognitoIdentityPoolRoleAttachmentMappingRule struct {
	// The claim name that must be present in the token, for example,
	// "isAdmin" or "paid."
	Claim *StringExpr `json:"Claim,omitempty"`

	// The match condition that specifies how closely the claim value in the
	// IdP token must match Value.
	MatchType *StringExpr `json:"MatchType,omitempty"`

	// The Amazon Resource Name (ARN) of the role.
	RoleARN *StringExpr `json:"RoleARN,omitempty"`

	// A brief string that the claim must match, for example, "paid" or
	// "yes."
	Value *StringExpr `json:"Value,omitempty"`
}

// CognitoIdentityPoolRoleAttachmentMappingRuleList represents a list of CognitoIdentityPoolRoleAttachmentMappingRule
type CognitoIdentityPoolRoleAttachmentMappingRuleList []CognitoIdentityPoolRoleAttachmentMappingRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoIdentityPoolRoleAttachmentMappingRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoIdentityPoolRoleAttachmentMappingRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoIdentityPoolRoleAttachmentMappingRuleList{item}
		return nil
	}
	list := []CognitoIdentityPoolRoleAttachmentMappingRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoIdentityPoolRoleAttachmentMappingRuleList(list)
		return nil
	}
	return err
}

// CognitoIdentityPoolCognitoIdentityProvider represents Amazon Cognito IdentityPool CognitoIdentityProvider
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitoidentityprovider.html
type CognitoIdentityPoolCognitoIdentityProvider struct {
	// The client ID for the Amazon Cognito user pool.
	ClientId *StringExpr `json:"ClientId,omitempty"`

	// The provider name for an Amazon Cognito user pool. For example,
	// cognito-idp.us-east-2.amazonaws.com/us-east-2_123456789.
	ProviderName *StringExpr `json:"ProviderName,omitempty"`

	// TRUE if server-side token validation is enabled for the identity
	// provider’s token.
	ServerSideTokenCheck *BoolExpr `json:"ServerSideTokenCheck,omitempty"`
}

// CognitoIdentityPoolCognitoIdentityProviderList represents a list of CognitoIdentityPoolCognitoIdentityProvider
type CognitoIdentityPoolCognitoIdentityProviderList []CognitoIdentityPoolCognitoIdentityProvider

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoIdentityPoolCognitoIdentityProviderList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoIdentityPoolCognitoIdentityProvider{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoIdentityPoolCognitoIdentityProviderList{item}
		return nil
	}
	list := []CognitoIdentityPoolCognitoIdentityProvider{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoIdentityPoolCognitoIdentityProviderList(list)
		return nil
	}
	return err
}

// CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfiguration represents Amazon Cognito IdentityPoolRoleAttachment RoleMapping RulesConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping-rulesconfiguration.html
type CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfiguration struct {
	// A list of rules. You can specify up to 25 rules per identity provider.
	Rules *CognitoIdentityPoolRoleAttachmentMappingRuleList `json:"Rules,omitempty"`
}

// CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfigurationList represents a list of CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfiguration
type CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfigurationList []CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfigurationList{item}
		return nil
	}
	list := []CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoIdentityPoolRoleAttachmentRoleMappingRulesConfigurationList(list)
		return nil
	}
	return err
}

// CognitoUserPoolAdminCreateUserConfig represents Amazon Cognito UserPool AdminCreateUserConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-admincreateuserconfig.html
type CognitoUserPoolAdminCreateUserConfig struct {
	// Set to True if only the administrator is allowed to create user
	// profiles. Set to False if users can sign themselves up via an app.
	AllowAdminCreateUserOnly *BoolExpr `json:"AllowAdminCreateUserOnly,omitempty"`

	// The message template to be used for the welcome message to new users.
	InviteMessageTemplate *CognitoUserPoolInviteMessageTemplate `json:"InviteMessageTemplate,omitempty"`

	// The user account expiration limit, in days, after which the account is
	// no longer usable. To reset the account after that time limit, you must
	// call AdminCreateUser again, specifying RESEND for the MessageAction
	// parameter. The default value for this parameter is 7.
	UnusedAccountValidityDays *IntegerExpr `json:"UnusedAccountValidityDays,omitempty"`
}

// CognitoUserPoolAdminCreateUserConfigList represents a list of CognitoUserPoolAdminCreateUserConfig
type CognitoUserPoolAdminCreateUserConfigList []CognitoUserPoolAdminCreateUserConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolAdminCreateUserConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolAdminCreateUserConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolAdminCreateUserConfigList{item}
		return nil
	}
	list := []CognitoUserPoolAdminCreateUserConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolAdminCreateUserConfigList(list)
		return nil
	}
	return err
}

// CognitoUserPoolDeviceConfiguration represents Amazon Cognito UserPool DeviceConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-deviceconfiguration.html
type CognitoUserPoolDeviceConfiguration struct {
	// Indicates whether a challenge is required on a new device. Only
	// applicable to a new device.
	ChallengeRequiredOnNewDevice *BoolExpr `json:"ChallengeRequiredOnNewDevice,omitempty"`

	// If true, a device is only remembered on user prompt.
	DeviceOnlyRememberedOnUserPrompt *BoolExpr `json:"DeviceOnlyRememberedOnUserPrompt,omitempty"`
}

// CognitoUserPoolDeviceConfigurationList represents a list of CognitoUserPoolDeviceConfiguration
type CognitoUserPoolDeviceConfigurationList []CognitoUserPoolDeviceConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolDeviceConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolDeviceConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolDeviceConfigurationList{item}
		return nil
	}
	list := []CognitoUserPoolDeviceConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolDeviceConfigurationList(list)
		return nil
	}
	return err
}

// CognitoUserPoolEmailConfiguration represents Amazon Cognito UserPool EmailConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-emailconfiguration.html
type CognitoUserPoolEmailConfiguration struct {
	// The REPLY-TO email address.
	ReplyToEmailAddress *StringExpr `json:"ReplyToEmailAddress,omitempty"`

	// The Amazon Resource Name (ARN) of the email source.
	SourceArn *StringExpr `json:"SourceArn,omitempty"`
}

// CognitoUserPoolEmailConfigurationList represents a list of CognitoUserPoolEmailConfiguration
type CognitoUserPoolEmailConfigurationList []CognitoUserPoolEmailConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolEmailConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolEmailConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolEmailConfigurationList{item}
		return nil
	}
	list := []CognitoUserPoolEmailConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolEmailConfigurationList(list)
		return nil
	}
	return err
}

// CognitoUserPoolInviteMessageTemplate represents Amazon Cognito UserPool InviteMessageTemplate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-invitemessagetemplate.html
type CognitoUserPoolInviteMessageTemplate struct {
	// The message template for email messages.
	EmailMessage *StringExpr `json:"EmailMessage,omitempty"`

	// The subject line for email messages.
	EmailSubject *StringExpr `json:"EmailSubject,omitempty"`

	// The message template for SMS messages.
	SMSMessage *StringExpr `json:"SMSMessage,omitempty"`
}

// CognitoUserPoolInviteMessageTemplateList represents a list of CognitoUserPoolInviteMessageTemplate
type CognitoUserPoolInviteMessageTemplateList []CognitoUserPoolInviteMessageTemplate

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolInviteMessageTemplateList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolInviteMessageTemplate{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolInviteMessageTemplateList{item}
		return nil
	}
	list := []CognitoUserPoolInviteMessageTemplate{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolInviteMessageTemplateList(list)
		return nil
	}
	return err
}

// CognitoUserPoolLambdaConfig represents Amazon Cognito UserPool LambdaConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html
type CognitoUserPoolLambdaConfig struct {
	// Creates an authentication challenge.
	CreateAuthChallenge *StringExpr `json:"CreateAuthChallenge,omitempty"`

	// A custom Message AWS Lambda trigger.
	CustomMessage *StringExpr `json:"CustomMessage,omitempty"`

	// Defines the authentication challenge.
	DefineAuthChallenge *StringExpr `json:"DefineAuthChallenge,omitempty"`

	// A post-authentication AWS Lambda trigger.
	PostAuthentication *StringExpr `json:"PostAuthentication,omitempty"`

	// A post-confirmation AWS Lambda trigger.
	PostConfirmation *StringExpr `json:"PostConfirmation,omitempty"`

	// A pre-authentication AWS Lambda trigger.
	PreAuthentication *StringExpr `json:"PreAuthentication,omitempty"`

	// A pre-registration AWS Lambda trigger.
	PreSignUp *StringExpr `json:"PreSignUp,omitempty"`

	// Verifies the authentication challenge response.
	VerifyAuthChallengeResponse *StringExpr `json:"VerifyAuthChallengeResponse,omitempty"`
}

// CognitoUserPoolLambdaConfigList represents a list of CognitoUserPoolLambdaConfig
type CognitoUserPoolLambdaConfigList []CognitoUserPoolLambdaConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolLambdaConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolLambdaConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolLambdaConfigList{item}
		return nil
	}
	list := []CognitoUserPoolLambdaConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolLambdaConfigList(list)
		return nil
	}
	return err
}

// CognitoUserPoolNumberAttributeConstraints represents Amazon Cognito UserPool NumberAttributeConstraints
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-numberattributeconstraints.html
type CognitoUserPoolNumberAttributeConstraints struct {
	// The maximum value of an attribute that is of the number data type.
	MaxValue *StringExpr `json:"MaxValue,omitempty"`

	// The minimum value of an attribute that is of the number data type.
	MinValue *StringExpr `json:"MinValue,omitempty"`
}

// CognitoUserPoolNumberAttributeConstraintsList represents a list of CognitoUserPoolNumberAttributeConstraints
type CognitoUserPoolNumberAttributeConstraintsList []CognitoUserPoolNumberAttributeConstraints

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolNumberAttributeConstraintsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolNumberAttributeConstraints{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolNumberAttributeConstraintsList{item}
		return nil
	}
	list := []CognitoUserPoolNumberAttributeConstraints{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolNumberAttributeConstraintsList(list)
		return nil
	}
	return err
}

// CognitoUserPoolPasswordPolicy represents Amazon Cognito UserPool PasswordPolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html
type CognitoUserPoolPasswordPolicy struct {
	// The minimum length of the password policy that you have set. Cannot be
	// less than 6.
	MinimumLength *IntegerExpr `json:"MinimumLength,omitempty"`

	// In the password policy that you have set, refers to whether you have
	// required users to use at least one lowercase letter in their password.
	RequireLowercase *BoolExpr `json:"RequireLowercase,omitempty"`

	// In the password policy that you have set, refers to whether you have
	// required users to use at least one number in their password.
	RequireNumbers *BoolExpr `json:"RequireNumbers,omitempty"`

	// In the password policy that you have set, refers to whether you have
	// required users to use at least one symbol in their password.
	RequireSymbols *BoolExpr `json:"RequireSymbols,omitempty"`

	// In the password policy that you have set, refers to whether you have
	// required users to use at least one uppercase letter in their password.
	RequireUppercase *BoolExpr `json:"RequireUppercase,omitempty"`
}

// CognitoUserPoolPasswordPolicyList represents a list of CognitoUserPoolPasswordPolicy
type CognitoUserPoolPasswordPolicyList []CognitoUserPoolPasswordPolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolPasswordPolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolPasswordPolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolPasswordPolicyList{item}
		return nil
	}
	list := []CognitoUserPoolPasswordPolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolPasswordPolicyList(list)
		return nil
	}
	return err
}

// CognitoUserPoolPolicies represents Amazon Cognito UserPool Policies
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-policies.html
type CognitoUserPoolPolicies struct {
	// Specifies information about the user pool password policy.
	PasswordPolicy *CognitoUserPoolPasswordPolicy `json:"PasswordPolicy,omitempty"`
}

// CognitoUserPoolPoliciesList represents a list of CognitoUserPoolPolicies
type CognitoUserPoolPoliciesList []CognitoUserPoolPolicies

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolPoliciesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolPolicies{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolPoliciesList{item}
		return nil
	}
	list := []CognitoUserPoolPolicies{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolPoliciesList(list)
		return nil
	}
	return err
}

// CognitoUserPoolSchemaAttribute represents Amazon Cognito UserPool SchemaAttribute
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-schemaattribute.html
type CognitoUserPoolSchemaAttribute struct {
	// The attribute data type. Can be one of the following: String, Number,
	// DateTime, or Boolean.
	AttributeDataType *StringExpr `json:"AttributeDataType,omitempty"`

	// Specifies whether the attribute type is developer only.
	DeveloperOnlyAttribute *BoolExpr `json:"DeveloperOnlyAttribute,omitempty"`

	// Specifies whether the attribute can be changed after it has been
	// created. True means mutable and False means immutable.
	Mutable *BoolExpr `json:"Mutable,omitempty"`

	// A schema attribute of the name type.
	Name *StringExpr `json:"Name,omitempty"`

	// Specifies the constraints for an attribute of the number type.
	NumberAttributeConstraints *CognitoUserPoolNumberAttributeConstraints `json:"NumberAttributeConstraints,omitempty"`

	// Specifies the constraints for an attribute of the string type.
	StringAttributeConstraints *CognitoUserPoolStringAttributeConstraints `json:"StringAttributeConstraints,omitempty"`

	// Specifies whether a user pool attribute is required. If the attribute
	// is required and the user does not provide a value, registration or
	// sign-in fails.
	Required *BoolExpr `json:"Required,omitempty"`
}

// CognitoUserPoolSchemaAttributeList represents a list of CognitoUserPoolSchemaAttribute
type CognitoUserPoolSchemaAttributeList []CognitoUserPoolSchemaAttribute

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolSchemaAttributeList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolSchemaAttribute{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolSchemaAttributeList{item}
		return nil
	}
	list := []CognitoUserPoolSchemaAttribute{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolSchemaAttributeList(list)
		return nil
	}
	return err
}

// CognitoUserPoolSmsConfiguration represents Amazon Cognito UserPool SmsConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-smsconfiguration.html
type CognitoUserPoolSmsConfiguration struct {
	// The external ID used in IAM role trust relationships.
	ExternalId *StringExpr `json:"ExternalId,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon Simple Notification
	// Service (SNS) caller.
	SnsCallerArn *StringExpr `json:"SnsCallerArn,omitempty"`
}

// CognitoUserPoolSmsConfigurationList represents a list of CognitoUserPoolSmsConfiguration
type CognitoUserPoolSmsConfigurationList []CognitoUserPoolSmsConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolSmsConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolSmsConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolSmsConfigurationList{item}
		return nil
	}
	list := []CognitoUserPoolSmsConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolSmsConfigurationList(list)
		return nil
	}
	return err
}

// CognitoUserPoolStringAttributeConstraints represents Amazon Cognito UserPool StringAttributeConstraints
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-stringattributeconstraints.html
type CognitoUserPoolStringAttributeConstraints struct {
	// The maximum value of an attribute that is of the string data type.
	MaxLength *StringExpr `json:"MaxLength,omitempty"`

	// The minimum value of an attribute that is of the string data type.
	MinLength *StringExpr `json:"MinLength,omitempty"`
}

// CognitoUserPoolStringAttributeConstraintsList represents a list of CognitoUserPoolStringAttributeConstraints
type CognitoUserPoolStringAttributeConstraintsList []CognitoUserPoolStringAttributeConstraints

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolStringAttributeConstraintsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolStringAttributeConstraints{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolStringAttributeConstraintsList{item}
		return nil
	}
	list := []CognitoUserPoolStringAttributeConstraints{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolStringAttributeConstraintsList(list)
		return nil
	}
	return err
}

// CognitoUserPoolUserAttribute represents Amazon Cognito UserPoolUser AttributeType
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpooluser-attributetype.html
type CognitoUserPoolUserAttribute struct {
	// The name of the attribute.
	Name *StringExpr `json:"Name,omitempty"`

	// The value of the attribute.
	Value *StringExpr `json:"Value,omitempty"`
}

// CognitoUserPoolUserAttributeList represents a list of CognitoUserPoolUserAttribute
type CognitoUserPoolUserAttributeList []CognitoUserPoolUserAttribute

// UnmarshalJSON sets the object from the provided JSON representation
func (l *CognitoUserPoolUserAttributeList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := CognitoUserPoolUserAttribute{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = CognitoUserPoolUserAttributeList{item}
		return nil
	}
	list := []CognitoUserPoolUserAttribute{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = CognitoUserPoolUserAttributeList(list)
		return nil
	}
	return err
}

// ConfigConfigRuleScope represents AWS Config ConfigRule Scope
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html
type ConfigConfigRuleScope struct {
	// The ID of an AWS resource that you want AWS Config to evaluate against
	// a rule. If you specify an ID, you must also specify a resource type
	// for the ComplianceResourceTypes property.
	ComplianceResourceId *StringExpr `json:"ComplianceResourceId,omitempty"`

	// The types of AWS resources that you want AWS Config to evaluate
	// against the rule. If you specify the ComplianceResourceId property,
	// specify only one resource type. For more information, see Supported
	// Resources, Configuration Items, and Relationships.
	ComplianceResourceTypes interface{} `json:"ComplianceResourceTypes,omitempty"`

	// The tag key that is applied to the AWS resources that you want AWS
	// Config to evaluate against the rule.
	TagKey *StringExpr `json:"TagKey,omitempty"`

	// The tag value that is applied to the AWS resources that you want AWS
	// Config to evaluate against the rule.
	TagValue *StringExpr `json:"TagValue,omitempty"`
}

// ConfigConfigRuleScopeList represents a list of ConfigConfigRuleScope
type ConfigConfigRuleScopeList []ConfigConfigRuleScope

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ConfigConfigRuleScopeList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ConfigConfigRuleScope{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ConfigConfigRuleScopeList{item}
		return nil
	}
	list := []ConfigConfigRuleScope{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ConfigConfigRuleScopeList(list)
		return nil
	}
	return err
}

// ConfigConfigRuleSource represents AWS Config ConfigRule Source
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html
type ConfigConfigRuleSource struct {
	// Indicates who owns and manages the AWS Config rule. For valid values,
	// see the Source data type in the AWS Config API Reference.
	Owner *StringExpr `json:"Owner,omitempty"`

	// Provides the source and type of event that triggers AWS Config to
	// evaluate your AWS resources.
	SourceDetails *ConfigConfigRuleSourceDetailsList `json:"SourceDetails,omitempty"`

	// For AWS managed rules, the identifier of the rule. For a list of
	// identifiers, see AWS Managed Rules in the AWS Config Developer Guide.
	SourceIdentifier *StringExpr `json:"SourceIdentifier,omitempty"`
}

// ConfigConfigRuleSourceList represents a list of ConfigConfigRuleSource
type ConfigConfigRuleSourceList []ConfigConfigRuleSource

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ConfigConfigRuleSourceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ConfigConfigRuleSource{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ConfigConfigRuleSourceList{item}
		return nil
	}
	list := []ConfigConfigRuleSource{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ConfigConfigRuleSourceList(list)
		return nil
	}
	return err
}

// ConfigConfigRuleSourceDetails represents AWS Config ConfigRule SourceDetails
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source-sourcedetails.html
type ConfigConfigRuleSourceDetails struct {
	// The source, such as an AWS service, that generate events, triggering
	// AWS Config to evaluate your AWS resources.
	EventSource *StringExpr `json:"EventSource,omitempty"`

	// The frequency that you want AWS Config to run evaluations for a custom
	// rule with a periodic trigger. By default, rules with a periodic
	// trigger are evaluated every 24 hours. If you specify a value for
	// MaximumExecutionFrequency, then MessageType must use the
	// ScheduledNotification value.
	MaximumExecutionFrequency *StringExpr `json:"MaximumExecutionFrequency,omitempty"`

	// The type of Amazon Simple Notification Service (Amazon SNS) message
	// that triggers AWS Config to run an evaluation. For more information,
	// see the SourceDetail data type in the AWS Config API Reference.
	MessageType *StringExpr `json:"MessageType,omitempty"`
}

// ConfigConfigRuleSourceDetailsList represents a list of ConfigConfigRuleSourceDetails
type ConfigConfigRuleSourceDetailsList []ConfigConfigRuleSourceDetails

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ConfigConfigRuleSourceDetailsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ConfigConfigRuleSourceDetails{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ConfigConfigRuleSourceDetailsList{item}
		return nil
	}
	list := []ConfigConfigRuleSourceDetails{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ConfigConfigRuleSourceDetailsList(list)
		return nil
	}
	return err
}

// ConfigConfigurationRecorderRecordingGroup represents AWS Config ConfigurationRecorder RecordingGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html
type ConfigConfigurationRecorderRecordingGroup struct {
	// Indicates whether to record all supported resource types. If you
	// specify this property, do not specify the ResourceTypes property.
	AllSupported *BoolExpr `json:"AllSupported,omitempty"`

	// Indicates whether AWS Config records all supported global resource
	// types. When AWS Config supports new global resource types, AWS Config
	// will automatically start recording them if you enable this property.
	IncludeGlobalResourceTypes *BoolExpr `json:"IncludeGlobalResourceTypes,omitempty"`

	// A list of valid AWS resource types to include in this recording group,
	// such as AWS::EC2::Instance or AWS::CloudTrail::Trail. If you specify
	// this property, do not specify the AllSupported property. For a list of
	// supported resource types, see Supported resource types in the AWS
	// Config Developer Guide.
	ResourceTypes interface{} `json:"ResourceTypes,omitempty"`
}

// ConfigConfigurationRecorderRecordingGroupList represents a list of ConfigConfigurationRecorderRecordingGroup
type ConfigConfigurationRecorderRecordingGroupList []ConfigConfigurationRecorderRecordingGroup

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ConfigConfigurationRecorderRecordingGroupList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ConfigConfigurationRecorderRecordingGroup{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ConfigConfigurationRecorderRecordingGroupList{item}
		return nil
	}
	list := []ConfigConfigurationRecorderRecordingGroup{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ConfigConfigurationRecorderRecordingGroupList(list)
		return nil
	}
	return err
}

// ConfigDeliveryChannelConfigSnapshotDeliveryProperties represents AWS Config DeliveryChannel ConfigSnapshotDeliveryProperties
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-deliverychannel-configsnapshotdeliveryproperties.html
type ConfigDeliveryChannelConfigSnapshotDeliveryProperties struct {
	// The frequency with which AWS Config delivers configuration snapshots.
	// For valid values, see ConfigSnapshotDeliveryProperties in the AWS
	// Config API Reference.
	DeliveryFrequency *StringExpr `json:"DeliveryFrequency,omitempty"`
}

// ConfigDeliveryChannelConfigSnapshotDeliveryPropertiesList represents a list of ConfigDeliveryChannelConfigSnapshotDeliveryProperties
type ConfigDeliveryChannelConfigSnapshotDeliveryPropertiesList []ConfigDeliveryChannelConfigSnapshotDeliveryProperties

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ConfigDeliveryChannelConfigSnapshotDeliveryPropertiesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ConfigDeliveryChannelConfigSnapshotDeliveryProperties{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ConfigDeliveryChannelConfigSnapshotDeliveryPropertiesList{item}
		return nil
	}
	list := []ConfigDeliveryChannelConfigSnapshotDeliveryProperties{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ConfigDeliveryChannelConfigSnapshotDeliveryPropertiesList(list)
		return nil
	}
	return err
}

// DataPipelinePipelineParameterObjects represents AWS Data Pipeline Pipeline ParameterObjects
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parameterobjects.html
type DataPipelinePipelineParameterObjects struct {
	// Key-value pairs that define the attributes of the parameter object.
	Attributes *DataPipelineParameterObjectsAttributesList `json:"Attributes,omitempty"`

	// The identifier of the parameter object.
	Id *StringExpr `json:"Id,omitempty"`
}

// DataPipelinePipelineParameterObjectsList represents a list of DataPipelinePipelineParameterObjects
type DataPipelinePipelineParameterObjectsList []DataPipelinePipelineParameterObjects

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DataPipelinePipelineParameterObjectsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DataPipelinePipelineParameterObjects{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DataPipelinePipelineParameterObjectsList{item}
		return nil
	}
	list := []DataPipelinePipelineParameterObjects{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DataPipelinePipelineParameterObjectsList(list)
		return nil
	}
	return err
}

// DataPipelineParameterObjectsAttributes represents AWS Data Pipeline Parameter Objects Attributes
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parameterobjects-attributes.html
type DataPipelineParameterObjectsAttributes struct {
	// Specifies the name of a parameter attribute. To view parameter
	// attributes, see Creating a Pipeline Using Parameterized Templates in
	// the AWS Data Pipeline Developer Guide.
	Key *StringExpr `json:"Key,omitempty"`

	// A parameter attribute value.
	StringValue *StringExpr `json:"StringValue,omitempty"`
}

// DataPipelineParameterObjectsAttributesList represents a list of DataPipelineParameterObjectsAttributes
type DataPipelineParameterObjectsAttributesList []DataPipelineParameterObjectsAttributes

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DataPipelineParameterObjectsAttributesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DataPipelineParameterObjectsAttributes{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DataPipelineParameterObjectsAttributesList{item}
		return nil
	}
	list := []DataPipelineParameterObjectsAttributes{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DataPipelineParameterObjectsAttributesList(list)
		return nil
	}
	return err
}

// DataPipelinePipelineParameterValues represents AWS Data Pipeline Pipeline ParameterValues
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parametervalues.html
type DataPipelinePipelineParameterValues struct {
	// The ID of a parameter object.
	Id *StringExpr `json:"Id,omitempty"`

	// A value to associate with the parameter object.
	StringValue *StringExpr `json:"StringValue,omitempty"`
}

// DataPipelinePipelineParameterValuesList represents a list of DataPipelinePipelineParameterValues
type DataPipelinePipelineParameterValuesList []DataPipelinePipelineParameterValues

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DataPipelinePipelineParameterValuesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DataPipelinePipelineParameterValues{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DataPipelinePipelineParameterValuesList{item}
		return nil
	}
	list := []DataPipelinePipelineParameterValues{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DataPipelinePipelineParameterValuesList(list)
		return nil
	}
	return err
}

// DataPipelinePipelineObject represents AWS Data Pipeline PipelineObject
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelineobjects.html
type DataPipelinePipelineObject struct {
	// Key-value pairs that define the properties of the object. Duplicates
	// allowed. You can use the same key multiple times within a field to
	// define array attributes.
	Fields *DataPipelinePipelineFieldList `json:"Fields,omitempty"`

	// Identifier of the object.
	Id *StringExpr `json:"Id,omitempty"`

	// Name of the object.
	Name *StringExpr `json:"Name,omitempty"`
}

// DataPipelinePipelineObjectList represents a list of DataPipelinePipelineObject
type DataPipelinePipelineObjectList []DataPipelinePipelineObject

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DataPipelinePipelineObjectList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DataPipelinePipelineObject{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DataPipelinePipelineObjectList{item}
		return nil
	}
	list := []DataPipelinePipelineObject{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DataPipelinePipelineObjectList(list)
		return nil
	}
	return err
}

// DataPipelinePipelineField represents AWS Data Pipeline Pipeline Field
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelineobjects-fields.html
type DataPipelinePipelineField struct {
	// Specifies the name of a field for a particular object. To view fields
	// for a data pipeline object, see Pipeline Object Reference in the AWS
	// Data Pipeline Developer Guide.
	Key *StringExpr `json:"Key,omitempty"`

	// A field value that you specify as an identifier of another object in
	// the same pipeline definition.
	RefValue *StringExpr `json:"RefValue,omitempty"`

	// A field value that you specify as a string. To view valid values for a
	// particular field, see Pipeline Object Reference in the AWS Data
	// Pipeline Developer Guide.
	StringValue *StringExpr `json:"StringValue,omitempty"`
}

// DataPipelinePipelineFieldList represents a list of DataPipelinePipelineField
type DataPipelinePipelineFieldList []DataPipelinePipelineField

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DataPipelinePipelineFieldList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DataPipelinePipelineField{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DataPipelinePipelineFieldList{item}
		return nil
	}
	list := []DataPipelinePipelineField{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DataPipelinePipelineFieldList(list)
		return nil
	}
	return err
}

// DataPipelinePipelinePipelineTags represents AWS Data Pipeline Pipeline PipelineTags
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelinetags.html
type DataPipelinePipelinePipelineTags struct {
	// The key name of a tag.
	Key *StringExpr `json:"Key,omitempty"`

	// The value to associate with the key name.
	Value *StringExpr `json:"Value,omitempty"`
}

// DataPipelinePipelinePipelineTagsList represents a list of DataPipelinePipelinePipelineTags
type DataPipelinePipelinePipelineTagsList []DataPipelinePipelinePipelineTags

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DataPipelinePipelinePipelineTagsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DataPipelinePipelinePipelineTags{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DataPipelinePipelinePipelineTagsList{item}
		return nil
	}
	list := []DataPipelinePipelinePipelineTags{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DataPipelinePipelinePipelineTagsList(list)
		return nil
	}
	return err
}

// DMSEndpointDynamoDBSettings represents AWS DMS Endpoint DynamoDBSettings
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-dynamodbsettings.html
type DMSEndpointDynamoDBSettings struct {
	// The Amazon Resource Name (ARN) used by the service access IAM role.
	ServiceAccessRoleArn *StringExpr `json:"ServiceAccessRoleArn,omitempty"`
}

// DMSEndpointDynamoDBSettingsList represents a list of DMSEndpointDynamoDBSettings
type DMSEndpointDynamoDBSettingsList []DMSEndpointDynamoDBSettings

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DMSEndpointDynamoDBSettingsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DMSEndpointDynamoDBSettings{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DMSEndpointDynamoDBSettingsList{item}
		return nil
	}
	list := []DMSEndpointDynamoDBSettings{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DMSEndpointDynamoDBSettingsList(list)
		return nil
	}
	return err
}

// DMSEndpointMongoDbSettings represents AWS DMS Endpoint MongoDbSettings
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html
type DMSEndpointMongoDbSettings struct {
	// The authentication mechanism you use to access the MongoDB source
	// endpoint.
	AuthMechanism *StringExpr `json:"AuthMechanism,omitempty"`

	// The authentication type you use to access the MongoDB source endpoint.
	AuthSource *StringExpr `json:"AuthSource,omitempty"`

	// The database name on the MongoDB source endpoint.
	DatabaseName *StringExpr `json:"DatabaseName,omitempty"`

	// Indicates the number of documents to preview to determine the document
	// organization. Use this attribute when NestingLevel is set to ONE.
	DocsToInvestigate *StringExpr `json:"DocsToInvestigate,omitempty"`

	// Specifies the document ID. Use this attribute when NestingLevel is set
	// to NONE. Default value is false.
	ExtractDocId *StringExpr `json:"ExtractDocId,omitempty"`

	// The ID of the KMS key to be used.
	KmsKeyId *StringExpr `json:"KmsKeyId,omitempty"`

	// Specifies either document or table mode.
	NestingLevel *StringExpr `json:"NestingLevel,omitempty"`

	// The password for the user account you use to access the MongoDB source
	// endpoint.
	Password *StringExpr `json:"Password,omitempty"`

	// The port value for the MongoDB source endpoint.
	Port *IntegerExpr `json:"Port,omitempty"`

	// The name of the server on the MongoDB source endpoint.
	ServerName *StringExpr `json:"ServerName,omitempty"`

	// The user name you use to access the MongoDB source endpoint.
	Username *StringExpr `json:"Username,omitempty"`
}

// DMSEndpointMongoDbSettingsList represents a list of DMSEndpointMongoDbSettings
type DMSEndpointMongoDbSettingsList []DMSEndpointMongoDbSettings

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DMSEndpointMongoDbSettingsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DMSEndpointMongoDbSettings{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DMSEndpointMongoDbSettingsList{item}
		return nil
	}
	list := []DMSEndpointMongoDbSettings{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DMSEndpointMongoDbSettingsList(list)
		return nil
	}
	return err
}

// DMSEndpointS3Settings represents AWS DMS Endpoint S3Settings
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html
type DMSEndpointS3Settings struct {
	// An optional parameter to set a folder name in the S3 bucket. If
	// provided, tables are created in the path
	// <bucketFolder>/<schema_name>/<table_name>/. If this parameter is not
	// specified, then the path used is <schema_name>/<table_name>/.
	BucketFolder *StringExpr `json:"BucketFolder,omitempty"`

	// The name of the Amazon S3 bucket.
	BucketName *StringExpr `json:"BucketName,omitempty"`

	// An optional parameter to use GZIP to compress the target files. Set to
	// GZIP to compress the target files. Set to NONE (the default) or do not
	// use to leave the files uncompressed.
	CompressionType *StringExpr `json:"CompressionType,omitempty"`

	// The delimiter used to separate columns in the source files. The
	// default is a comma.
	CsvDelimiter *StringExpr `json:"CsvDelimiter,omitempty"`

	// The delimiter used to separate rows in the source files. The default
	// is a carriage return (\n).
	CsvRowDelimiter *StringExpr `json:"CsvRowDelimiter,omitempty"`

	// The definition of the external table.
	ExternalTableDefinition *StringExpr `json:"ExternalTableDefinition,omitempty"`

	// The Amazon Resource Name (ARN) used by the service access IAM role.
	ServiceAccessRoleArn *StringExpr `json:"ServiceAccessRoleArn,omitempty"`
}

// DMSEndpointS3SettingsList represents a list of DMSEndpointS3Settings
type DMSEndpointS3SettingsList []DMSEndpointS3Settings

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DMSEndpointS3SettingsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DMSEndpointS3Settings{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DMSEndpointS3SettingsList{item}
		return nil
	}
	list := []DMSEndpointS3Settings{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DMSEndpointS3SettingsList(list)
		return nil
	}
	return err
}

// DirectoryServiceMicrosoftADVpcSettings represents AWS Directory Service MicrosoftAD VpcSettings
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-directoryservice-microsoftad-vpcsettings.html
type DirectoryServiceMicrosoftADVpcSettings struct {
	// A list of two subnet IDs for the directory servers. Each subnet must
	// be in different Availability Zones (AZs). AWS Directory Service
	// creates a directory server and a DNS server in each subnet.
	SubnetIds interface{} `json:"SubnetIds,omitempty"`

	// The VPC ID in which to create the Microsoft Active Directory server.
	VpcId *StringExpr `json:"VpcId,omitempty"`
}

// DirectoryServiceMicrosoftADVpcSettingsList represents a list of DirectoryServiceMicrosoftADVpcSettings
type DirectoryServiceMicrosoftADVpcSettingsList []DirectoryServiceMicrosoftADVpcSettings

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DirectoryServiceMicrosoftADVpcSettingsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DirectoryServiceMicrosoftADVpcSettings{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DirectoryServiceMicrosoftADVpcSettingsList{item}
		return nil
	}
	list := []DirectoryServiceMicrosoftADVpcSettings{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DirectoryServiceMicrosoftADVpcSettingsList(list)
		return nil
	}
	return err
}

// DirectoryServiceSimpleADVpcSettings represents AWS Directory Service SimpleAD VpcSettings
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-directoryservice-simplead-vpcsettings.html
type DirectoryServiceSimpleADVpcSettings struct {
	// A list of two subnet IDs for the directory servers. Each subnet must
	// be in different Availability Zones (AZ). AWS Directory Service creates
	// a directory server and a DNS server in each subnet.
	SubnetIds interface{} `json:"SubnetIds,omitempty"`

	// The VPC ID in which to create the Simple AD directory.
	VpcId *StringExpr `json:"VpcId,omitempty"`
}

// DirectoryServiceSimpleADVpcSettingsList represents a list of DirectoryServiceSimpleADVpcSettings
type DirectoryServiceSimpleADVpcSettingsList []DirectoryServiceSimpleADVpcSettings

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DirectoryServiceSimpleADVpcSettingsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DirectoryServiceSimpleADVpcSettings{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DirectoryServiceSimpleADVpcSettingsList{item}
		return nil
	}
	list := []DirectoryServiceSimpleADVpcSettings{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DirectoryServiceSimpleADVpcSettingsList(list)
		return nil
	}
	return err
}

// DynamoDBTableAttributeDefinition represents Amazon DynamoDB Table AttributeDefinition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-attributedef.html
type DynamoDBTableAttributeDefinition struct {
	// The name of an attribute. Attribute names can be 1 – 255 characters
	// long and have no character restrictions.
	AttributeName *StringExpr `json:"AttributeName,omitempty"`

	// The data type for the attribute. You can specify S for string data, N
	// for numeric data, or B for binary data.
	AttributeType *StringExpr `json:"AttributeType,omitempty"`
}

// DynamoDBTableAttributeDefinitionList represents a list of DynamoDBTableAttributeDefinition
type DynamoDBTableAttributeDefinitionList []DynamoDBTableAttributeDefinition

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DynamoDBTableAttributeDefinitionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DynamoDBTableAttributeDefinition{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DynamoDBTableAttributeDefinitionList{item}
		return nil
	}
	list := []DynamoDBTableAttributeDefinition{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DynamoDBTableAttributeDefinitionList(list)
		return nil
	}
	return err
}

// DynamoDBTableGlobalSecondaryIndex represents Amazon DynamoDB Table GlobalSecondaryIndex
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-gsi.html
type DynamoDBTableGlobalSecondaryIndex struct {
	// The name of the global secondary index. The index name can be 3 –
	// 255 characters long and must satisfy the regular expression pattern
	// [a-zA-Z0-9_.-]+.
	IndexName *StringExpr `json:"IndexName,omitempty"`

	// The complete index key schema for the global secondary index, which
	// consists of one or more pairs of attribute names and key types.
	KeySchema *DynamoDBTableKeySchemaList `json:"KeySchema,omitempty"`

	// Attributes that are copied (projected) from the source table into the
	// index. These attributes are in addition to the primary key attributes
	// and index key attributes, which are automatically projected.
	Projection *DynamoDBTableProjection `json:"Projection,omitempty"`

	// The provisioned throughput settings for the index.
	ProvisionedThroughput *DynamoDBTableProvisionedThroughput `json:"ProvisionedThroughput,omitempty"`
}

// DynamoDBTableGlobalSecondaryIndexList represents a list of DynamoDBTableGlobalSecondaryIndex
type DynamoDBTableGlobalSecondaryIndexList []DynamoDBTableGlobalSecondaryIndex

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DynamoDBTableGlobalSecondaryIndexList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DynamoDBTableGlobalSecondaryIndex{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DynamoDBTableGlobalSecondaryIndexList{item}
		return nil
	}
	list := []DynamoDBTableGlobalSecondaryIndex{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DynamoDBTableGlobalSecondaryIndexList(list)
		return nil
	}
	return err
}

// DynamoDBTableKeySchema represents Amazon DynamoDB Table KeySchema
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-keyschema.html
type DynamoDBTableKeySchema struct {
	// The attribute name that is used as the primary key for this table.
	// Primary key element names can be 1 – 255 characters long and have no
	// character restrictions.
	AttributeName *StringExpr `json:"AttributeName,omitempty"`

	// Represents the attribute data, consisting of the data type and the
	// attribute value itself. You can specify HASH or RANGE.
	KeyType *StringExpr `json:"KeyType,omitempty"`
}

// DynamoDBTableKeySchemaList represents a list of DynamoDBTableKeySchema
type DynamoDBTableKeySchemaList []DynamoDBTableKeySchema

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DynamoDBTableKeySchemaList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DynamoDBTableKeySchema{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DynamoDBTableKeySchemaList{item}
		return nil
	}
	list := []DynamoDBTableKeySchema{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DynamoDBTableKeySchemaList(list)
		return nil
	}
	return err
}

// DynamoDBTableLocalSecondaryIndex represents Amazon DynamoDB Table LocalSecondaryIndex
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-lsi.html
type DynamoDBTableLocalSecondaryIndex struct {
	// The name of the local secondary index. The index name can be 3 – 255
	// characters long and have no character restrictions.
	IndexName *StringExpr `json:"IndexName,omitempty"`

	// The complete index key schema for the local secondary index, which
	// consists of one or more pairs of attribute names and key types. For
	// local secondary indexes, the hash key must be the same as that of the
	// source table.
	KeySchema *DynamoDBTableKeySchemaList `json:"KeySchema,omitempty"`

	// Attributes that are copied (projected) from the source table into the
	// index. These attributes are additions to the primary key attributes
	// and index key attributes, which are automatically projected.
	Projection *DynamoDBTableProjection `json:"Projection,omitempty"`
}

// DynamoDBTableLocalSecondaryIndexList represents a list of DynamoDBTableLocalSecondaryIndex
type DynamoDBTableLocalSecondaryIndexList []DynamoDBTableLocalSecondaryIndex

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DynamoDBTableLocalSecondaryIndexList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DynamoDBTableLocalSecondaryIndex{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DynamoDBTableLocalSecondaryIndexList{item}
		return nil
	}
	list := []DynamoDBTableLocalSecondaryIndex{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DynamoDBTableLocalSecondaryIndexList(list)
		return nil
	}
	return err
}

// DynamoDBTableProjection represents Amazon DynamoDB Table Projection
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-projectionobject.html
type DynamoDBTableProjection struct {
	// The non-key attribute names that are projected into the index.
	NonKeyAttributes interface{} `json:"NonKeyAttributes,omitempty"`

	// The set of attributes that are projected into the index:
	ProjectionType *StringExpr `json:"ProjectionType,omitempty"`

	// Only the index and primary keys are projected into the index.
	KEYSXONLY interface{} `json:"KEYS_ONLY,omitempty"`

	// Only the specified table attributes are projected into the index. The
	// list of projected attributes are in NonKeyAttributes.
	INCLUDE interface{} `json:"INCLUDE,omitempty"`

	// All of the table attributes are projected into the index.
	ALL interface{} `json:"ALL,omitempty"`
}

// DynamoDBTableProjectionList represents a list of DynamoDBTableProjection
type DynamoDBTableProjectionList []DynamoDBTableProjection

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DynamoDBTableProjectionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DynamoDBTableProjection{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DynamoDBTableProjectionList{item}
		return nil
	}
	list := []DynamoDBTableProjection{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DynamoDBTableProjectionList(list)
		return nil
	}
	return err
}

// DynamoDBTableProvisionedThroughput represents Amazon DynamoDB Table ProvisionedThroughput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-provisionedthroughput.html
type DynamoDBTableProvisionedThroughput struct {
	// Sets the desired minimum number of consistent reads of items (up to
	// 1KB in size) per second for the specified table before Amazon DynamoDB
	// balances the load.
	ReadCapacityUnits *IntegerExpr `json:"ReadCapacityUnits,omitempty"`

	// Sets the desired minimum number of consistent writes of items (up to
	// 1KB in size) per second for the specified table before Amazon DynamoDB
	// balances the load.
	WriteCapacityUnits *IntegerExpr `json:"WriteCapacityUnits,omitempty"`
}

// DynamoDBTableProvisionedThroughputList represents a list of DynamoDBTableProvisionedThroughput
type DynamoDBTableProvisionedThroughputList []DynamoDBTableProvisionedThroughput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DynamoDBTableProvisionedThroughputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DynamoDBTableProvisionedThroughput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DynamoDBTableProvisionedThroughputList{item}
		return nil
	}
	list := []DynamoDBTableProvisionedThroughput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DynamoDBTableProvisionedThroughputList(list)
		return nil
	}
	return err
}

// DynamoDBTableStreamSpecification represents Amazon DynamoDB Table StreamSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-streamspecification.html
type DynamoDBTableStreamSpecification struct {
	// Determines the information that the stream captures when an item in
	// the table is modified. For valid values, see StreamSpecification in
	// the Amazon DynamoDB API Reference.
	StreamViewType *StringExpr `json:"StreamViewType,omitempty"`
}

// DynamoDBTableStreamSpecificationList represents a list of DynamoDBTableStreamSpecification
type DynamoDBTableStreamSpecificationList []DynamoDBTableStreamSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DynamoDBTableStreamSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DynamoDBTableStreamSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DynamoDBTableStreamSpecificationList{item}
		return nil
	}
	list := []DynamoDBTableStreamSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DynamoDBTableStreamSpecificationList(list)
		return nil
	}
	return err
}

// DynamoDBTableTimeToLiveSpecification represents Amazon DynamoDB Table TimeToLiveSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-table-timetolivespecification.html
type DynamoDBTableTimeToLiveSpecification struct {
	// The name of the TTL attribute that stores the expiration time for
	// items in the table. The name can be 1–255 characters long, and has
	// no character restrictions.
	AttributeName *StringExpr `json:"AttributeName,omitempty"`

	// Indicates whether to enable (by specifying true) or disable (by
	// specifying false) TTL on the table.
	Enabled *BoolExpr `json:"Enabled,omitempty"`
}

// DynamoDBTableTimeToLiveSpecificationList represents a list of DynamoDBTableTimeToLiveSpecification
type DynamoDBTableTimeToLiveSpecificationList []DynamoDBTableTimeToLiveSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *DynamoDBTableTimeToLiveSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := DynamoDBTableTimeToLiveSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = DynamoDBTableTimeToLiveSpecificationList{item}
		return nil
	}
	list := []DynamoDBTableTimeToLiveSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = DynamoDBTableTimeToLiveSpecificationList(list)
		return nil
	}
	return err
}

// EC2BlockDeviceMappingProperty represents Amazon EC2 Block Device Mapping Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html
type EC2BlockDeviceMappingProperty struct {
	// The name of the device within Amazon EC2. For more information, see
	// Device Naming on Linux Instances in the Amazon EC2 User Guide for
	// Linux Instances.
	DeviceName *StringExpr `json:"DeviceName,omitempty"`

	// Required: Conditional You can specify either VirtualName or Ebs, but
	// not both.
	Ebs *ElasticBlockStoreBlockDeviceProperty `json:"Ebs,omitempty"`

	// This property can be used to unmap a defined device.
	NoDevice *BoolExpr `json:"NoDevice,omitempty"`

	// The name of the virtual device. The name must be in the form
	// ephemeralX where X is a number starting from zero (0); for example,
	// ephemeral0.
	VirtualName *StringExpr `json:"VirtualName,omitempty"`
}

// EC2BlockDeviceMappingPropertyList represents a list of EC2BlockDeviceMappingProperty
type EC2BlockDeviceMappingPropertyList []EC2BlockDeviceMappingProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2BlockDeviceMappingPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2BlockDeviceMappingProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2BlockDeviceMappingPropertyList{item}
		return nil
	}
	list := []EC2BlockDeviceMappingProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2BlockDeviceMappingPropertyList(list)
		return nil
	}
	return err
}

// ElasticBlockStoreBlockDeviceProperty represents Amazon Elastic Block Store Block Device Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html
type ElasticBlockStoreBlockDeviceProperty struct {
	// Determines whether to delete the volume on instance termination. The
	// default value is true.
	DeleteOnTermination *BoolExpr `json:"DeleteOnTermination,omitempty"`

	// Indicates whether the volume is encrypted. Encrypted Amazon EBS
	// volumes can only be attached to instance types that support Amazon EBS
	// encryption. Volumes that are created from encrypted snapshots are
	// automatically encrypted. You cannot create an encrypted volume from an
	// unencrypted snapshot or vice versa. If your AMI uses encrypted
	// volumes, you can only launch the AMI on supported instance types. For
	// more information, see Amazon EBS encryption in the Amazon EC2 User
	// Guide for Linux Instances.
	Encrypted *BoolExpr `json:"Encrypted,omitempty"`

	// The number of I/O operations per second (IOPS) that the volume
	// supports. This can be an integer from 100 – 20000.
	Iops *IntegerExpr `json:"Iops,omitempty"`

	// The snapshot ID of the volume to use to create a block device.
	SnapshotId *StringExpr `json:"SnapshotId,omitempty"`

	// The volume size, in gibibytes (GiB). For valid values, see the Size
	// parameter for the CreateVolume action in the Amazon EC2 API Reference.
	VolumeSize *StringExpr `json:"VolumeSize,omitempty"`

	// The volume type. If you set the type to io1, you must also set the
	// Iops property. For valid values, see the VolumeType parameter for the
	// CreateVolume action in the Amazon EC2 API Reference.
	VolumeType *StringExpr `json:"VolumeType,omitempty"`
}

// ElasticBlockStoreBlockDevicePropertyList represents a list of ElasticBlockStoreBlockDeviceProperty
type ElasticBlockStoreBlockDevicePropertyList []ElasticBlockStoreBlockDeviceProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticBlockStoreBlockDevicePropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticBlockStoreBlockDeviceProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticBlockStoreBlockDevicePropertyList{item}
		return nil
	}
	list := []ElasticBlockStoreBlockDeviceProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticBlockStoreBlockDevicePropertyList(list)
		return nil
	}
	return err
}

// EC2InstanceSsmAssociations represents Amazon EC2 Instance SsmAssociations
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html
type EC2InstanceSsmAssociations struct {
	// The input parameter values to use with the associated SSM document.
	AssociationParameters *EC2InstanceSsmAssociationsAssociationParametersList `json:"AssociationParameters,omitempty"`

	// The name of an SSM document to associate with the instance.
	DocumentName *StringExpr `json:"DocumentName,omitempty"`
}

// EC2InstanceSsmAssociationsList represents a list of EC2InstanceSsmAssociations
type EC2InstanceSsmAssociationsList []EC2InstanceSsmAssociations

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2InstanceSsmAssociationsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2InstanceSsmAssociations{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2InstanceSsmAssociationsList{item}
		return nil
	}
	list := []EC2InstanceSsmAssociations{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2InstanceSsmAssociationsList(list)
		return nil
	}
	return err
}

// EC2InstanceSsmAssociationsAssociationParameters represents Amazon EC2 Instance SsmAssociations AssociationParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html
type EC2InstanceSsmAssociationsAssociationParameters struct {
	// The name of an input parameter that is in the associated SSM document.
	Key *StringExpr `json:"Key,omitempty"`

	// The value of an input parameter.
	Value interface{} `json:"Value,omitempty"`
}

// EC2InstanceSsmAssociationsAssociationParametersList represents a list of EC2InstanceSsmAssociationsAssociationParameters
type EC2InstanceSsmAssociationsAssociationParametersList []EC2InstanceSsmAssociationsAssociationParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2InstanceSsmAssociationsAssociationParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2InstanceSsmAssociationsAssociationParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2InstanceSsmAssociationsAssociationParametersList{item}
		return nil
	}
	list := []EC2InstanceSsmAssociationsAssociationParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2InstanceSsmAssociationsAssociationParametersList(list)
		return nil
	}
	return err
}

// EC2MountPoint represents EC2 MountPoint Property Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html
type EC2MountPoint struct {
	// How the device is exposed to the instance (such as /dev/sdh, or xvdh).
	Device *StringExpr `json:"Device,omitempty"`

	// The ID of the Amazon EBS volume. The volume and instance must be
	// within the same Availability Zone and the instance must be running.
	VolumeId *StringExpr `json:"VolumeId,omitempty"`
}

// EC2MountPointList represents a list of EC2MountPoint
type EC2MountPointList []EC2MountPoint

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2MountPointList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2MountPoint{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2MountPointList{item}
		return nil
	}
	list := []EC2MountPoint{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2MountPointList(list)
		return nil
	}
	return err
}

// EC2NetworkInterfaceEmbedded represents EC2 NetworkInterface Embedded Property Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html
type EC2NetworkInterfaceEmbedded struct {
	// Indicates whether the network interface receives a public IP address.
	// You can associate a public IP address with a network interface only if
	// it has a device index of eth0 and if it is a new network interface
	// (not an existing one). In other words, if you specify true, don't
	// specify a network interface ID. For more information, see Amazon EC2
	// Instance IP Addressing.
	AssociatePublicIpAddress *BoolExpr `json:"AssociatePublicIpAddress,omitempty"`

	// Whether to delete the network interface when the instance terminates.
	DeleteOnTermination *BoolExpr `json:"DeleteOnTermination,omitempty"`

	// The description of this network interface.
	Description *StringExpr `json:"Description,omitempty"`

	// The network interface's position in the attachment order.
	DeviceIndex *StringExpr `json:"DeviceIndex,omitempty"`

	// A list of security group IDs associated with this network interface.
	GroupSet *StringListExpr `json:"GroupSet,omitempty"`

	// An existing network interface ID.
	NetworkInterfaceId *StringExpr `json:"NetworkInterfaceId,omitempty"`

	// The number of IPv6 addresses to associate with the network interface.
	// Amazon EC2 automatically selects the IPv6 addresses from the subnet
	// range. To specify specific IPv6 addresses, use the Ipv6Addresses
	// property and don't specify this property.
	Ipv6AddressCount *IntegerExpr `json:"Ipv6AddressCount,omitempty"`

	// One or more specific IPv6 addresses from the IPv6 CIDR block range of
	// your subnet to associate with the network interface. To specify a
	// number of IPv6 addresses, use the Ipv6AddressCount property and don't
	// specify this property.
	Ipv6Addresses *EC2NetworkInterfaceIpv6AddressesList `json:"Ipv6Addresses,omitempty"`

	// Assigns a single private IP address to the network interface, which is
	// used as the primary private IP address. If you want to specify
	// multiple private IP address, use the PrivateIpAddresses property.
	PrivateIpAddress *StringExpr `json:"PrivateIpAddress,omitempty"`

	// Assigns a list of private IP addresses to the network interface. You
	// can specify a primary private IP address by setting the value of the
	// Primary property to true in the PrivateIpAddressSpecification
	// property. If you want Amazon EC2 to automatically assign private IP
	// addresses, use the SecondaryPrivateIpCount property and do not specify
	// this property.
	PrivateIpAddresses *EC2NetworkInterfacePrivateIPSpecificationList `json:"PrivateIpAddresses,omitempty"`

	// The number of secondary private IP addresses that Amazon EC2 auto
	// assigns to the network interface. Amazon EC2 uses the value of the
	// PrivateIpAddress property as the primary private IP address. If you
	// don't specify that property, Amazon EC2 auto assigns both the primary
	// and secondary private IP addresses.
	SecondaryPrivateIpAddressCount *IntegerExpr `json:"SecondaryPrivateIpAddressCount,omitempty"`

	// The ID of the subnet to associate with the network interface.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`
}

// EC2NetworkInterfaceEmbeddedList represents a list of EC2NetworkInterfaceEmbedded
type EC2NetworkInterfaceEmbeddedList []EC2NetworkInterfaceEmbedded

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2NetworkInterfaceEmbeddedList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2NetworkInterfaceEmbedded{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2NetworkInterfaceEmbeddedList{item}
		return nil
	}
	list := []EC2NetworkInterfaceEmbedded{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2NetworkInterfaceEmbeddedList(list)
		return nil
	}
	return err
}

// EC2NetworkAclEntryIcmp represents EC2 NetworkAclEntry Icmp
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html
type EC2NetworkAclEntryIcmp struct {
	// The Internet Control Message Protocol (ICMP) code. You can use -1 to
	// specify all ICMP codes for the given ICMP type.
	Code *IntegerExpr `json:"Code,omitempty"`

	// The Internet Control Message Protocol (ICMP) type. You can use -1 to
	// specify all ICMP types.
	Type *IntegerExpr `json:"Type,omitempty"`
}

// EC2NetworkAclEntryIcmpList represents a list of EC2NetworkAclEntryIcmp
type EC2NetworkAclEntryIcmpList []EC2NetworkAclEntryIcmp

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2NetworkAclEntryIcmpList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2NetworkAclEntryIcmp{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2NetworkAclEntryIcmpList{item}
		return nil
	}
	list := []EC2NetworkAclEntryIcmp{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2NetworkAclEntryIcmpList(list)
		return nil
	}
	return err
}

// EC2NetworkAclEntryPortRange represents EC2 NetworkAclEntry PortRange
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html
type EC2NetworkAclEntryPortRange struct {
	// The first port in the range.
	From *IntegerExpr `json:"From,omitempty"`

	// The last port in the range.
	To *IntegerExpr `json:"To,omitempty"`
}

// EC2NetworkAclEntryPortRangeList represents a list of EC2NetworkAclEntryPortRange
type EC2NetworkAclEntryPortRangeList []EC2NetworkAclEntryPortRange

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2NetworkAclEntryPortRangeList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2NetworkAclEntryPortRange{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2NetworkAclEntryPortRangeList{item}
		return nil
	}
	list := []EC2NetworkAclEntryPortRange{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2NetworkAclEntryPortRangeList(list)
		return nil
	}
	return err
}

// EC2NetworkInterfaceIpv6Addresses represents EC2 NetworkInterface Ipv6Addresses
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-ipv6addresses.html
type EC2NetworkInterfaceIpv6Addresses struct {
	// The IPv6 address to associate with the network interface.
	Ipv6Address *StringExpr `json:"Ipv6Address,omitempty"`
}

// EC2NetworkInterfaceIpv6AddressesList represents a list of EC2NetworkInterfaceIpv6Addresses
type EC2NetworkInterfaceIpv6AddressesList []EC2NetworkInterfaceIpv6Addresses

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2NetworkInterfaceIpv6AddressesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2NetworkInterfaceIpv6Addresses{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2NetworkInterfaceIpv6AddressesList{item}
		return nil
	}
	list := []EC2NetworkInterfaceIpv6Addresses{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2NetworkInterfaceIpv6AddressesList(list)
		return nil
	}
	return err
}

// EC2NetworkInterfacePrivateIPSpecification represents EC2 Network Interface Private IP Specification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html
type EC2NetworkInterfacePrivateIPSpecification struct {
	// The private IP address of the network interface.
	PrivateIpAddress *StringExpr `json:"PrivateIpAddress,omitempty"`

	// Sets the private IP address as the primary private address. You can
	// set only one primary private IP address. If you don't specify a
	// primary private IP address, Amazon EC2 automatically assigns a primary
	// private IP address.
	Primary *BoolExpr `json:"Primary,omitempty"`
}

// EC2NetworkInterfacePrivateIPSpecificationList represents a list of EC2NetworkInterfacePrivateIPSpecification
type EC2NetworkInterfacePrivateIPSpecificationList []EC2NetworkInterfacePrivateIPSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2NetworkInterfacePrivateIPSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2NetworkInterfacePrivateIPSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2NetworkInterfacePrivateIPSpecificationList{item}
		return nil
	}
	list := []EC2NetworkInterfacePrivateIPSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2NetworkInterfacePrivateIPSpecificationList(list)
		return nil
	}
	return err
}

// EC2SecurityGroupRule represents EC2 Security Group Rule Property Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html
type EC2SecurityGroupRule struct {
	// Specifies an IPv4 CIDR range.
	CidrIp *StringExpr `json:"CidrIp,omitempty"`

	// Specifies an IPv6 CIDR range.
	CidrIpv6 *StringExpr `json:"CidrIpv6,omitempty"`

	// Description of the security group rule.
	Description *StringExpr `json:"Description,omitempty"`

	// The AWS service prefix of an Amazon VPC endpoint. For more
	// information, see VPC Endpoints in the Amazon VPC User Guide.
	DestinationPrefixListIdXXSecurityGroupEgressXOnlyX *StringExpr `json:"DestinationPrefixListId (SecurityGroupEgress only),omitempty"`

	// Specifies the GroupId of the destination Amazon VPC security group.
	DestinationSecurityGroupIdXXSecurityGroupEgressXOnlyX *StringExpr `json:"DestinationSecurityGroupId (SecurityGroupEgress only),omitempty"`

	// The start of port range for the TCP and UDP protocols, or an ICMP type
	// number. An ICMP type number of -1 indicates a wildcard (i.e., any ICMP
	// type number).
	FromPort *IntegerExpr `json:"FromPort,omitempty"`

	// An IP protocol name or number. For valid values, go to the IpProtocol
	// parameter in AuthorizeSecurityGroupIngress
	IpProtocol *StringExpr `json:"IpProtocol,omitempty"`

	// For VPC security groups only. Specifies the ID of the Amazon EC2
	// Security Group to allow access. You can use the Ref intrinsic function
	// to refer to the logical ID of a security group defined in the same
	// template.
	SourceSecurityGroupIdXXSecurityGroupIngressXOnlyX *StringExpr `json:"SourceSecurityGroupId (SecurityGroupIngress only),omitempty"`

	// For non-VPC security groups only. Specifies the name of the Amazon EC2
	// Security Group to use for access. You can use the Ref intrinsic
	// function to refer to the logical name of a security group that is
	// defined in the same template.
	SourceSecurityGroupNameXXSecurityGroupIngressXOnlyX *StringExpr `json:"SourceSecurityGroupName (SecurityGroupIngress only),omitempty"`

	// Specifies the AWS Account ID of the owner of the Amazon EC2 Security
	// Group that is specified in the SourceSecurityGroupName property.
	SourceSecurityGroupOwnerIdXXSecurityGroupIngressXOnlyX *StringExpr `json:"SourceSecurityGroupOwnerId (SecurityGroupIngress only),omitempty"`

	// The end of port range for the TCP and UDP protocols, or an ICMP code.
	// An ICMP code of -1 indicates a wildcard (i.e., any ICMP code).
	ToPort *IntegerExpr `json:"ToPort,omitempty"`
}

// EC2SecurityGroupRuleList represents a list of EC2SecurityGroupRule
type EC2SecurityGroupRuleList []EC2SecurityGroupRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SecurityGroupRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SecurityGroupRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SecurityGroupRuleList{item}
		return nil
	}
	list := []EC2SecurityGroupRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SecurityGroupRuleList(list)
		return nil
	}
	return err
}

// EC2SpotFleetSpotFleetRequestConfigData represents Amazon EC2 SpotFleet SpotFleetRequestConfigData
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html
type EC2SpotFleetSpotFleetRequestConfigData struct {
	// Indicates how to allocate the target capacity across the Spot pools
	// that you specified in the Spot fleet request. For valid values, see
	// SpotFleetRequestConfigData in the Amazon EC2 API Reference.
	AllocationStrategy *StringExpr `json:"AllocationStrategy,omitempty"`

	// Indicates whether running Spot instances are terminated if you
	// decrease the target capacity of the Spot fleet request below the
	// current size of the Spot fleet. For valid values, see
	// SpotFleetRequestConfigData in the Amazon EC2 API Reference.
	ExcessCapacityTerminationPolicy *StringExpr `json:"ExcessCapacityTerminationPolicy,omitempty"`

	// The Amazon Resource Name (ARN) of an AWS Identity and Access
	// Management (IAM) role that grants the Spot fleet the ability to bid
	// on, launch, and terminate instances on your behalf. For more
	// information, see Spot Fleet Prerequisites in the Amazon EC2 User Guide
	// for Linux Instances.
	IamFleetRole *StringExpr `json:"IamFleetRole,omitempty"`

	// The launch specifications for the Spot fleet request.
	LaunchSpecifications *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsList `json:"LaunchSpecifications,omitempty"`

	// Indicates whether the Spot fleet should replace unhealthy instances.
	ReplaceUnhealthyInstances *BoolExpr `json:"ReplaceUnhealthyInstances,omitempty"`

	// The bid price per unit hour. For more information, see How Spot Fleet
	// Works in the Amazon EC2 User Guide for Linux Instances.
	SpotPrice *StringExpr `json:"SpotPrice,omitempty"`

	// The number of units to request for the spot fleet. You can choose to
	// set the target capacity as the number of instances or as a performance
	// characteristic that is important to your application workload, such as
	// vCPUs, memory, or I/O. For more information, see How Spot Fleet Works
	// in the Amazon EC2 User Guide for Linux Instances.
	TargetCapacity *IntegerExpr `json:"TargetCapacity,omitempty"`

	// Indicates whether running Spot instances are terminated when the Spot
	// fleet request expires.
	TerminateInstancesWithExpiration *BoolExpr `json:"TerminateInstancesWithExpiration,omitempty"`

	// The type of request, which indicates whether the fleet will only
	// request the target capacity or also attempt to maintain it. For more
	// information, see SpotFleetRequestConfigData in the Amazon EC2 API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`

	// The start date and time of the request, in UTC format
	// (YYYY-MM-DDTHH:MM:SSZ). By default, Amazon Elastic Compute Cloud
	// (Amazon EC2 ) starts fulfilling the request immediately.
	ValidFrom *StringExpr `json:"ValidFrom,omitempty"`

	// The end date and time of the request, in UTC format
	// (YYYY-MM-DDTHH:MM:SSZ). After the end date and time, Amazon EC2
	// doesn't request new Spot instances or enable them to fulfill the
	// request.
	ValidUntil *StringExpr `json:"ValidUntil,omitempty"`
}

// EC2SpotFleetSpotFleetRequestConfigDataList represents a list of EC2SpotFleetSpotFleetRequestConfigData
type EC2SpotFleetSpotFleetRequestConfigDataList []EC2SpotFleetSpotFleetRequestConfigData

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SpotFleetSpotFleetRequestConfigDataList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SpotFleetSpotFleetRequestConfigData{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SpotFleetSpotFleetRequestConfigDataList{item}
		return nil
	}
	list := []EC2SpotFleetSpotFleetRequestConfigData{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SpotFleetSpotFleetRequestConfigDataList(list)
		return nil
	}
	return err
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecifications represents Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecifications struct {
	// Defines the block devices that are mapped to the Spot instances.
	BlockDeviceMappings *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsList `json:"BlockDeviceMappings,omitempty"`

	// Indicates whether the instances are optimized for Amazon Elastic Block
	// Store (Amazon EBS) I/O. This optimization provides dedicated
	// throughput to Amazon EBS and an optimized configuration stack to
	// provide optimal EBS I/O performance. This optimization isn't available
	// with all instance types. Additional usage charges apply when you use
	// an Amazon EBS-optimized instance.
	EbsOptimized *BoolExpr `json:"EbsOptimized,omitempty"`

	// Defines the AWS Identity and Access Management (IAM) instance profile
	// to associate with the instances.
	IamInstanceProfile *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfile `json:"IamInstanceProfile,omitempty"`

	// The unique ID of the Amazon Machine Image (AMI) to launch on the
	// instances.
	ImageId *StringExpr `json:"ImageId,omitempty"`

	// Specifies the instance type of the EC2 instances.
	InstanceType *StringExpr `json:"InstanceType,omitempty"`

	// The ID of the kernel that is associated with the Amazon Elastic
	// Compute Cloud (Amazon EC2) AMI.
	KernelId *StringExpr `json:"KernelId,omitempty"`

	// An Amazon EC2 key pair to associate with the instances.
	KeyName *StringExpr `json:"KeyName,omitempty"`

	// Enable or disable monitoring for the instances.
	Monitoring *EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoring `json:"Monitoring,omitempty"`

	// The network interfaces to associate with the instances.
	NetworkInterfaces *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesList `json:"NetworkInterfaces,omitempty"`

	// Defines a placement group, which is a logical grouping of instances
	// within a single Availability Zone (AZ).
	Placement *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacement `json:"Placement,omitempty"`

	// The ID of the RAM disk to select. Some kernels require additional
	// drivers at launch. Check the kernel requirements for information about
	// whether you need to specify a RAM disk. To find kernel requirements,
	// refer to the AWS Resource Center and search for the kernel ID.
	RamdiskId *StringExpr `json:"RamdiskId,omitempty"`

	// One or more security group IDs to associate with the instances.
	SecurityGroups *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroupsList `json:"SecurityGroups,omitempty"`

	// The bid price per unit hour for the specified instance type. If you
	// don't specify a value, Amazon EC2 uses the Spot bid price for the
	// fleet. For more information, see How Spot Fleet Works in the Amazon
	// EC2 User Guide for Linux Instances.
	SpotPrice *StringExpr `json:"SpotPrice,omitempty"`

	// The ID of the subnet in which to launch the instances.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`

	// Base64-encoded MIME user data that instances use when starting up.
	UserData *StringExpr `json:"UserData,omitempty"`

	// The number of units provided by the specified instance type. These
	// units are the same units that you chose to set the target capacity in
	// terms of instances or a performance characteristic, such as vCPUs,
	// memory, or I/O. For more information, see How Spot Fleet Works in the
	// Amazon EC2 User Guide for Linux Instances.
	WeightedCapacity *IntegerExpr `json:"WeightedCapacity,omitempty"`
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsList represents a list of ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecifications
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsList []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecifications

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecifications{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsList{item}
		return nil
	}
	list := []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecifications{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsList(list)
		return nil
	}
	return err
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappings represents Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications BlockDeviceMappings
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappings struct {
	// The name of the device within the EC2 instance, such as /dev/dsh or
	// xvdh.
	DeviceName *StringExpr `json:"DeviceName,omitempty"`

	// The Amazon Elastic Block Store (Amazon EBS) volume information.
	Ebs *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbs `json:"Ebs,omitempty"`

	// Suppresses the specified device that is included in the block device
	// mapping of the Amazon Machine Image (AMI).
	NoDevice *BoolExpr `json:"NoDevice,omitempty"`

	// The name of the virtual device. The name must be in the form
	// ephemeralX where X is a number equal to or greater than zero (0), for
	// example, ephemeral0.
	VirtualName *StringExpr `json:"VirtualName,omitempty"`
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsList represents a list of ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappings
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsList []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappings

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappings{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsList{item}
		return nil
	}
	list := []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappings{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsList(list)
		return nil
	}
	return err
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbs represents Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications BlockDeviceMappings Ebs
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbs struct {
	// Indicates whether to delete the volume when the instance is
	// terminated.
	DeleteOnTermination *BoolExpr `json:"DeleteOnTermination,omitempty"`

	// Indicates whether the EBS volume is encrypted. Encrypted Amazon EBS
	// volumes can be attached only to instances that support Amazon EBS
	// encryption.
	Encrypted *BoolExpr `json:"Encrypted,omitempty"`

	// The number of I/O operations per second (IOPS) that the volume
	// supports. For more information, see Iops for the EbsBlockDevice action
	// in the Amazon EC2 API Reference.
	Iops *IntegerExpr `json:"Iops,omitempty"`

	// The snapshot ID of the volume that you want to use. If you specify
	// both the SnapshotId and VolumeSize properties, VolumeSize must be
	// equal to or greater than the size of the snapshot.
	SnapshotId *StringExpr `json:"SnapshotId,omitempty"`

	// The volume size, in Gibibytes (GiB). If you specify both the
	// SnapshotId and VolumeSize properties, VolumeSize must be equal to or
	// greater than the size of the snapshot. For more information about
	// specifying the volume size, see VolumeSize for the EbsBlockDevice
	// action in the Amazon EC2 API Reference.
	VolumeSize *IntegerExpr `json:"VolumeSize,omitempty"`

	// The volume type. For more information about specifying the volume
	// type, see VolumeType for the EbsBlockDevice action in the Amazon EC2
	// API Reference.
	VolumeType *StringExpr `json:"VolumeType,omitempty"`
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbsList represents a list of ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbs
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbsList []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbs

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbs{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbsList{item}
		return nil
	}
	list := []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbs{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsBlockDeviceMappingsEbsList(list)
		return nil
	}
	return err
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfile represents Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications IamInstanceProfile
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfile struct {
	// The Amazon Resource Name (ARN) of the instance profile to associate
	// with the instances. The instance profile contains the IAM role that is
	// associated with the instances.
	Arn *StringExpr `json:"Arn,omitempty"`
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfileList represents a list of ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfile
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfileList []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfile

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfileList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfile{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfileList{item}
		return nil
	}
	list := []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfile{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsIamInstanceProfileList(list)
		return nil
	}
	return err
}

// EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoring represents Amazon EC2 SpotFleet SpotFleetRequestConfigData LaunchSpecifications Monitoring
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html
type EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoring struct {
	// Indicates whether monitoring is enabled for the instances.
	Enabled *BoolExpr `json:"Enabled,omitempty"`
}

// EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoringList represents a list of EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoring
type EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoringList []EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoring

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoringList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoring{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoringList{item}
		return nil
	}
	list := []EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoring{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SpotFleetSpotFleetRequestConfigDataLaunchSpecificationsMonitoringList(list)
		return nil
	}
	return err
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfaces represents Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications NetworkInterfaces
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfaces struct {
	// Indicates whether to assign a public IP address to an instance that
	// you launch in a VPC. You can assign the public IP address can only to
	// a network interface for eth0, and only to a new network interface, not
	// an existing one.
	AssociatePublicIpAddress *BoolExpr `json:"AssociatePublicIpAddress,omitempty"`

	// Indicates whether to delete the network interface when the instance
	// terminates.
	DeleteOnTermination *BoolExpr `json:"DeleteOnTermination,omitempty"`

	// The description of this network interface.
	Description *StringExpr `json:"Description,omitempty"`

	// The network interface's position in the attachment order.
	DeviceIndex *IntegerExpr `json:"DeviceIndex,omitempty"`

	// A list of security group IDs to associate with this network interface.
	Groups interface{} `json:"Groups,omitempty"`

	// The number of IPv6 addresses to associate with the network interface.
	// Amazon Elastic Compute Cloud automatically selects the IPv6 addresses
	// from the subnet range. To specify specific IPv6 addresses, use the
	// Ipv6Addresses property and don't specify this property.
	Ipv6AddressCount *IntegerExpr `json:"Ipv6AddressCount,omitempty"`

	// One or more specific IPv6 addresses from the IPv6 CIDR block range of
	// your subnet to associate with the network interface. To specify a
	// number of IPv6 addresses, use the Ipv6AddressCount property and don't
	// specify this property.
	Ipv6Addresses *EC2NetworkInterfaceIpv6AddressesList `json:"Ipv6Addresses,omitempty"`

	// A network interface ID.
	NetworkInterfaceId *StringExpr `json:"NetworkInterfaceId,omitempty"`

	// One or more private IP addresses to assign to the network interface.
	PrivateIpAddresses *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddressesList `json:"PrivateIpAddresses,omitempty"`

	// The number of secondary private IP addresses that Amazon EC2
	// automatically assigns to the network interface.
	SecondaryPrivateIpAddressCount *IntegerExpr `json:"SecondaryPrivateIpAddressCount,omitempty"`

	// The ID of the subnet to associate with the network interface.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesList represents a list of ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfaces
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesList []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfaces

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfaces{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesList{item}
		return nil
	}
	list := []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfaces{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesList(list)
		return nil
	}
	return err
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddresses represents Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications NetworkInterfaces PrivateIpAddresses
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddresses struct {
	// Indicates whether the private IP address is the primary private IP
	// address. You can designate only one IP address as primary.
	Primary *BoolExpr `json:"Primary,omitempty"`

	// The private IP address.
	PrivateIpAddress *StringExpr `json:"PrivateIpAddress,omitempty"`
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddressesList represents a list of ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddresses
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddressesList []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddresses

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddressesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddresses{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddressesList{item}
		return nil
	}
	list := []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddresses{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsNetworkInterfacesPrivateIpAddressesList(list)
		return nil
	}
	return err
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacement represents Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications Placement
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacement struct {
	// The Availability Zone (AZ) of the placement group.
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`

	// The name of the placement group (for cluster instances).
	GroupName *StringExpr `json:"GroupName,omitempty"`
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacementList represents a list of ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacement
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacementList []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacement

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacementList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacement{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacementList{item}
		return nil
	}
	list := []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacement{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsPlacementList(list)
		return nil
	}
	return err
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroups represents Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications SecurityGroups
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroups struct {
	// The ID of a security group.
	GroupId *StringExpr `json:"GroupId,omitempty"`
}

// ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroupsList represents a list of ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroups
type ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroupsList []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroups

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroupsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroups{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroupsList{item}
		return nil
	}
	list := []ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroups{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticComputeCloudSpotFleetSpotFleetRequestConfigDataLaunchSpecificationsSecurityGroupsList(list)
		return nil
	}
	return err
}

// EC2VPNConnectionVpnTunnelOptionsSpecification represents Amazon EC2 VPNConnection VpnTunnelOptionsSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html
type EC2VPNConnectionVpnTunnelOptionsSpecification struct {
	// The pre-shared key (PSK) to establish initial authentication between
	// the virtual private gateway and customer gateway.
	PreSharedKey interface{} `json:"PreSharedKey,omitempty"`

	// The range of inside IP addresses for the tunnel. Any specified CIDR
	// blocks must be unique across all VPN connections that use the same
	// virtual private gateway.
	TunnelInsideCidr interface{} `json:"TunnelInsideCidr,omitempty"`
}

// EC2VPNConnectionVpnTunnelOptionsSpecificationList represents a list of EC2VPNConnectionVpnTunnelOptionsSpecification
type EC2VPNConnectionVpnTunnelOptionsSpecificationList []EC2VPNConnectionVpnTunnelOptionsSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2VPNConnectionVpnTunnelOptionsSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2VPNConnectionVpnTunnelOptionsSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2VPNConnectionVpnTunnelOptionsSpecificationList{item}
		return nil
	}
	list := []EC2VPNConnectionVpnTunnelOptionsSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2VPNConnectionVpnTunnelOptionsSpecificationList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceServiceAwsVpcConfiguration represents Amazon Elastic Container Service Service AwsVpcConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html
type ElasticContainerServiceServiceAwsVpcConfiguration struct {
	// Valid values include ENABLED and DISABLED.
	AssignPublicIp *StringExpr `json:"AssignPublicIp,omitempty"`

	// The security groups associated with the task or service. If you do not
	// specify a security group, the default security group for the VPC is
	// used.
	SecurityGroups interface{} `json:"SecurityGroups,omitempty"`

	// The subnets associated with the Amazon ECS task or service.
	Subnets interface{} `json:"Subnets,omitempty"`
}

// ElasticContainerServiceServiceAwsVpcConfigurationList represents a list of ElasticContainerServiceServiceAwsVpcConfiguration
type ElasticContainerServiceServiceAwsVpcConfigurationList []ElasticContainerServiceServiceAwsVpcConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceServiceAwsVpcConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceServiceAwsVpcConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceServiceAwsVpcConfigurationList{item}
		return nil
	}
	list := []ElasticContainerServiceServiceAwsVpcConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceServiceAwsVpcConfigurationList(list)
		return nil
	}
	return err
}

// ElasticContainerRegistryRepositoryLifecyclePolicy represents Amazon Elastic Container Registry Repository LifecyclePolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html
type ElasticContainerRegistryRepositoryLifecyclePolicy struct {
	// The JSON repository policy text to apply to the repository. The length
	// must be between 100 and 10,240 characters.
	LifecyclePolicyText interface{} `json:"LifecyclePolicyText,omitempty"`

	// The AWS account ID that's associated with the registry that contains
	// the repository. If you do n't specify a registry, the default
	// registry is used.
	RegistryId interface{} `json:"RegistryId,omitempty"`
}

// ElasticContainerRegistryRepositoryLifecyclePolicyList represents a list of ElasticContainerRegistryRepositoryLifecyclePolicy
type ElasticContainerRegistryRepositoryLifecyclePolicyList []ElasticContainerRegistryRepositoryLifecyclePolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerRegistryRepositoryLifecyclePolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerRegistryRepositoryLifecyclePolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerRegistryRepositoryLifecyclePolicyList{item}
		return nil
	}
	list := []ElasticContainerRegistryRepositoryLifecyclePolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerRegistryRepositoryLifecyclePolicyList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceServiceDeploymentConfiguration represents Amazon Elastic Container Service Service DeploymentConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html
type ElasticContainerServiceServiceDeploymentConfiguration struct {
	// The maximum number of tasks, specified as a percentage of the Amazon
	// ECS service's DesiredCount value, that can run in a service during a
	// deployment. To calculate the maximum number of tasks, Amazon ECS uses
	// this formula: the value of DesiredCount * (the value of the
	// MaximumPercent/100), rounded down to the nearest integer value.
	MaximumPercent *IntegerExpr `json:"MaximumPercent,omitempty"`

	// The minimum number of tasks, specified as a percentage of the Amazon
	// ECS service's DesiredCount value, that must continue to run and remain
	// healthy during a deployment. To calculate the minimum number of tasks,
	// Amazon ECS uses this formula: the value of DesiredCount * (the value
	// of the MinimumHealthyPercent/100), rounded up to the nearest integer
	// value.
	MinimumHealthyPercent *IntegerExpr `json:"MinimumHealthyPercent,omitempty"`
}

// ElasticContainerServiceServiceDeploymentConfigurationList represents a list of ElasticContainerServiceServiceDeploymentConfiguration
type ElasticContainerServiceServiceDeploymentConfigurationList []ElasticContainerServiceServiceDeploymentConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceServiceDeploymentConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceServiceDeploymentConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceServiceDeploymentConfigurationList{item}
		return nil
	}
	list := []ElasticContainerServiceServiceDeploymentConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceServiceDeploymentConfigurationList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceServiceNetworkConfiguration represents Amazon Elastic Container Service Service NetworkConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-networkconfiguration.html
type ElasticContainerServiceServiceNetworkConfiguration struct {
	// The VPC subnets and security groups associated with a task.
	AwsvpcConfiguration *ElasticContainerServiceServiceAwsVpcConfiguration `json:"AwsvpcConfiguration,omitempty"`
}

// ElasticContainerServiceServiceNetworkConfigurationList represents a list of ElasticContainerServiceServiceNetworkConfiguration
type ElasticContainerServiceServiceNetworkConfigurationList []ElasticContainerServiceServiceNetworkConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceServiceNetworkConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceServiceNetworkConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceServiceNetworkConfigurationList{item}
		return nil
	}
	list := []ElasticContainerServiceServiceNetworkConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceServiceNetworkConfigurationList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceServicePlacementConstraint represents Amazon Elastic Container Service Service PlacementConstraint
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementconstraints-placementconstraint.html
type ElasticContainerServiceServicePlacementConstraint struct {
	// The type of constraint: distinctInstance or memberOf.
	Type *StringExpr `json:"Type,omitempty"`

	// A cluster query language expression to apply to the constraint. If the
	// constraint type is distinctInstance, you can't specify an expression.
	// For more information, see Cluster Query Language in the Amazon Elastic
	// Container Service Developer Guide.
	Expression *StringExpr `json:"Expression,omitempty"`
}

// ElasticContainerServiceServicePlacementConstraintList represents a list of ElasticContainerServiceServicePlacementConstraint
type ElasticContainerServiceServicePlacementConstraintList []ElasticContainerServiceServicePlacementConstraint

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceServicePlacementConstraintList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceServicePlacementConstraint{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceServicePlacementConstraintList{item}
		return nil
	}
	list := []ElasticContainerServiceServicePlacementConstraint{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceServicePlacementConstraintList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceServicePlacementStrategies represents Amazon Elastic Container Service Service PlacementStrategies
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementstrategies-placementstrategy.html
type ElasticContainerServiceServicePlacementStrategies struct {
	// The type of placement strategy. Can be one of the following values:
	// random, spread, or binpack.
	Type *StringExpr `json:"Type,omitempty"`

	// The field to apply the placement strategy against. For the spread
	// placement strategy, valid values are instanceId (or host, which has
	// the same effect), or any platform or custom attribute that is applied
	// to a container instance, such as attribute:ecs.availability-zone.
	Field *StringExpr `json:"Field,omitempty"`
}

// ElasticContainerServiceServicePlacementStrategiesList represents a list of ElasticContainerServiceServicePlacementStrategies
type ElasticContainerServiceServicePlacementStrategiesList []ElasticContainerServiceServicePlacementStrategies

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceServicePlacementStrategiesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceServicePlacementStrategies{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceServicePlacementStrategiesList{item}
		return nil
	}
	list := []ElasticContainerServiceServicePlacementStrategies{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceServicePlacementStrategiesList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceServiceLoadBalancers represents Amazon Elastic Container Service Service LoadBalancers
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html
type ElasticContainerServiceServiceLoadBalancers struct {
	// The name of a container to use with the load balancer.
	ContainerName *StringExpr `json:"ContainerName,omitempty"`

	// The port number on the container to direct load balancer traffic to.
	// Your container instances must allow ingress traffic on this port.
	ContainerPort *IntegerExpr `json:"ContainerPort,omitempty"`

	// The name of a Classic Load Balancer to associate with the Amazon ECS
	// service.
	LoadBalancerName *StringExpr `json:"LoadBalancerName,omitempty"`

	// An Application load balancer target group Amazon Resource Name (ARN)
	// to associate with the Amazon ECS service.
	TargetGroupArn *StringExpr `json:"TargetGroupArn,omitempty"`
}

// ElasticContainerServiceServiceLoadBalancersList represents a list of ElasticContainerServiceServiceLoadBalancers
type ElasticContainerServiceServiceLoadBalancersList []ElasticContainerServiceServiceLoadBalancers

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceServiceLoadBalancersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceServiceLoadBalancers{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceServiceLoadBalancersList{item}
		return nil
	}
	list := []ElasticContainerServiceServiceLoadBalancers{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceServiceLoadBalancersList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionContainerDefinition represents Amazon Elastic Container Service TaskDefinition ContainerDefinition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html
type ElasticContainerServiceTaskDefinitionContainerDefinition struct {
	// The CMD value to pass to the container. For more information about the
	// Docker CMD parameter, see
	// https://docs.docker.com/engine/reference/builder/#cmd.
	Command interface{} `json:"Command,omitempty"`

	// The minimum number of CPU units to reserve for the container.
	// Containers share unallocated CPU units with other containers on the
	// instance by using the same ratio as their allocated CPU units. For
	// more information, see the cpu content for the ContainerDefinition data
	// type in the Amazon Elastic Container Service API Reference.
	Cpu *IntegerExpr `json:"Cpu,omitempty"`

	// Indicates whether networking is disabled within the container.
	DisableNetworking *BoolExpr `json:"DisableNetworking,omitempty"`

	// A list of DNS search domains that are provided to the container. The
	// domain names that the DNS logic looks up when a process attempts to
	// access a bare unqualified hostname.
	DnsSearchDomains interface{} `json:"DnsSearchDomains,omitempty"`

	// A list of DNS servers that Amazon ECS provides to the container.
	DnsServers interface{} `json:"DnsServers,omitempty"`

	// A key-value map of labels for the container.
	DockerLabels interface{} `json:"DockerLabels,omitempty"`

	// A list of custom labels for SELinux and AppArmor multi-level security
	// systems. For more information, see the dockerSecurityOptions content
	// for the ContainerDefinition data type in the Amazon Elastic Container
	// Service API Reference.
	DockerSecurityOptions interface{} `json:"DockerSecurityOptions,omitempty"`

	// The ENTRYPOINT value to pass to the container. For more information
	// about the Docker ENTRYPOINT parameter, see
	// https://docs.docker.com/engine/reference/builder/#entrypoint.
	EntryPoint interface{} `json:"EntryPoint,omitempty"`

	// The environment variables to pass to the container.
	Environment *ElasticContainerServiceTaskDefinitionKeyValuePairList `json:"Environment,omitempty"`

	// Indicates whether the task stops if this container fails. If you
	// specify true and the container fails, all other containers in the task
	// stop. If you specify false and the container fails, none of the other
	// containers in the task is affected. This value is true by default.
	Essential *BoolExpr `json:"Essential,omitempty"`

	// A list of hostnames and IP address mappings to append to the
	// /etc/hosts file on the container.
	ExtraHosts *ElasticContainerServiceTaskDefinitionHostEntryList `json:"ExtraHosts,omitempty"`

	// The name that Docker uses for the container hostname.
	Hostname *StringExpr `json:"Hostname,omitempty"`

	// The image to use for a container. The image is passed directly to the
	// Docker daemon. You can use images in the Docker Hub registry or
	// specify other repositories (repository-url/image:tag).
	Image *StringExpr `json:"Image,omitempty"`

	// The name of another container to connect to. With links, containers
	// can communicate with each other without using port mappings.
	Links interface{} `json:"Links,omitempty"`

	// The Linux-specific options that are applied to the container.
	LinuxParameters *ElasticContainerServiceTaskDefinitionLinuxParameters `json:"LinuxParameters,omitempty"`

	// Configures a custom log driver for the container. For more
	// information, see the logConfiguration content for the
	// ContainerDefinition data type in the Amazon Elastic Container Service
	// API Reference.
	LogConfiguration *ElasticContainerServiceTaskDefinitionLogConfiguration `json:"LogConfiguration,omitempty"`

	// The number of MiB of memory to reserve for the container. If your
	// container attempts to exceed the allocated memory, the container is
	// terminated.
	Memory *IntegerExpr `json:"Memory,omitempty"`

	// The number of MiB of memory to reserve for the container. When system
	// memory is under contention, Docker attempts to keep the container
	// memory within the limit. If the container requires more memory, it can
	// consume up to the value specified by the Memory property or all of the
	// available memory on the container instance—whichever comes first.
	// This is called a soft limit.
	MemoryReservation *IntegerExpr `json:"MemoryReservation,omitempty"`

	// The mount points for data volumes in the container.
	MountPoints *ElasticContainerServiceTaskDefinitionMountPointList `json:"MountPoints,omitempty"`

	// A name for the container.
	Name *StringExpr `json:"Name,omitempty"`

	// A mapping of the container port to a host port. Port mappings enable
	// containers to access ports on the host container instance to send or
	// receive traffic.
	PortMappings *ElasticContainerServiceTaskDefinitionPortMappingList `json:"PortMappings,omitempty"`

	// Indicates whether the container is given full access to the host
	// container instance.
	Privileged *BoolExpr `json:"Privileged,omitempty"`

	// Indicates whether the container's root file system is mounted as read
	// only.
	ReadonlyRootFilesystem *BoolExpr `json:"ReadonlyRootFilesystem,omitempty"`

	// A list of ulimits to set in the container. The ulimits set constraints
	// on how many resources a container can consume so that it doesn't
	// deplete all available resources on the host.
	Ulimits *ElasticContainerServiceTaskDefinitionUlimitList `json:"Ulimits,omitempty"`

	// The user name to use inside the container.
	User *StringExpr `json:"User,omitempty"`

	// The data volumes to mount from another container.
	VolumesFrom *ElasticContainerServiceTaskDefinitionVolumeFromList `json:"VolumesFrom,omitempty"`

	// The working directory in the container to run commands in.
	WorkingDirectory *StringExpr `json:"WorkingDirectory,omitempty"`
}

// ElasticContainerServiceTaskDefinitionContainerDefinitionList represents a list of ElasticContainerServiceTaskDefinitionContainerDefinition
type ElasticContainerServiceTaskDefinitionContainerDefinitionList []ElasticContainerServiceTaskDefinitionContainerDefinition

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionContainerDefinitionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionContainerDefinition{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionContainerDefinitionList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionContainerDefinition{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionContainerDefinitionList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionDevice represents Amazon Elastic Container Service TaskDefinition Device
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html
type ElasticContainerServiceTaskDefinitionDevice struct {
	// The path inside the container to expose the host device to.
	ContainerPath interface{} `json:"ContainerPath,omitempty"`

	// The path for the device on the host container instance.
	HostPath interface{} `json:"HostPath,omitempty"`

	// The explicit permissions to provide to the container for the device.
	// By default, the container is able to read, write, and mknod the
	// device.
	Permissions interface{} `json:"Permissions,omitempty"`
}

// ElasticContainerServiceTaskDefinitionDeviceList represents a list of ElasticContainerServiceTaskDefinitionDevice
type ElasticContainerServiceTaskDefinitionDeviceList []ElasticContainerServiceTaskDefinitionDevice

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionDeviceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionDevice{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionDeviceList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionDevice{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionDeviceList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionHostEntry represents Amazon Elastic Container Service TaskDefinition HostEntry
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html
type ElasticContainerServiceTaskDefinitionHostEntry struct {
	// The hostname to use in the /etc/hosts file.
	Hostname *StringExpr `json:"Hostname,omitempty"`

	// The IP address to use in the /etc/hosts file.
	IpAddress *StringExpr `json:"IpAddress,omitempty"`
}

// ElasticContainerServiceTaskDefinitionHostEntryList represents a list of ElasticContainerServiceTaskDefinitionHostEntry
type ElasticContainerServiceTaskDefinitionHostEntryList []ElasticContainerServiceTaskDefinitionHostEntry

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionHostEntryList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionHostEntry{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionHostEntryList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionHostEntry{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionHostEntryList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionKernelCapabilities represents Amazon Elastic Container Service TaskDefinition KernelCapabilities
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-kernelcapabilities.html
type ElasticContainerServiceTaskDefinitionKernelCapabilities struct {
	// The Linux capabilities to add to the default Docker configuration.
	// This maps to CapAdd in the Create a container section of the Docker
	// Remote API and the --cap-add option to docker run. For valid values,
	// see KernelCapabilities in the Amazon Elastic Container Service API
	// Reference.
	Add interface{} `json:"Add,omitempty"`

	// The Linux capabilities to remove from the default Docker
	// configuration. This maps to CapDrop in the Create a container section
	// of the Docker Remote API and the --cap-drop option to docker run. For
	// valid values, see KernelCapabilities in the Amazon Elastic Container
	// Service API Reference.
	Drop interface{} `json:"Drop,omitempty"`
}

// ElasticContainerServiceTaskDefinitionKernelCapabilitiesList represents a list of ElasticContainerServiceTaskDefinitionKernelCapabilities
type ElasticContainerServiceTaskDefinitionKernelCapabilitiesList []ElasticContainerServiceTaskDefinitionKernelCapabilities

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionKernelCapabilitiesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionKernelCapabilities{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionKernelCapabilitiesList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionKernelCapabilities{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionKernelCapabilitiesList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionKeyValuePair represents Amazon Elastic Container Service TaskDefinition KeyValuePair
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html
type ElasticContainerServiceTaskDefinitionKeyValuePair struct {
	// The name of the environment variable.
	Name *StringExpr `json:"Name,omitempty"`

	// The value of the environment variable.
	Value *StringExpr `json:"Value,omitempty"`
}

// ElasticContainerServiceTaskDefinitionKeyValuePairList represents a list of ElasticContainerServiceTaskDefinitionKeyValuePair
type ElasticContainerServiceTaskDefinitionKeyValuePairList []ElasticContainerServiceTaskDefinitionKeyValuePair

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionKeyValuePairList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionKeyValuePair{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionKeyValuePairList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionKeyValuePair{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionKeyValuePairList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionLinuxParameters represents Amazon Elastic Container Service TaskDefinition LinuxParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html
type ElasticContainerServiceTaskDefinitionLinuxParameters struct {
	// The Linux capabilities for the container that are added to or dropped
	// from the default configuration provided by Docker.
	Capabilities *ElasticContainerServiceTaskDefinitionKernelCapabilities `json:"Capabilities,omitempty"`

	// Any host devices to expose to the container. This maps to Devices in
	// the Create a container section of the Docker Remote API and the
	// --device option to docker run.
	Devices *ElasticContainerServiceTaskDefinitionDeviceList `json:"Devices,omitempty"`

	// Indicates whether to run an init process inside the container that
	// forwards signals and reaps processes. This maps to the --init option
	// to docker run.
	InitProcessEnabled interface{} `json:"InitProcessEnabled,omitempty"`
}

// ElasticContainerServiceTaskDefinitionLinuxParametersList represents a list of ElasticContainerServiceTaskDefinitionLinuxParameters
type ElasticContainerServiceTaskDefinitionLinuxParametersList []ElasticContainerServiceTaskDefinitionLinuxParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionLinuxParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionLinuxParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionLinuxParametersList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionLinuxParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionLinuxParametersList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionLogConfiguration represents Amazon Elastic Container Service TaskDefinition LogConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html
type ElasticContainerServiceTaskDefinitionLogConfiguration struct {
	// The log driver to use for the container. This parameter requires that
	// your container instance uses Docker Remote API Version 1.18 or
	// greater. For more information, see the logDriver content for the
	// LogConfiguration data type in the Amazon Elastic Container Service API
	// Reference.
	LogDriver *StringExpr `json:"LogDriver,omitempty"`

	// The configuration options to send to the log driver. This parameter
	// requires that your container instance uses Docker Remote API Version
	// 1.18 or greater.
	Options interface{} `json:"Options,omitempty"`
}

// ElasticContainerServiceTaskDefinitionLogConfigurationList represents a list of ElasticContainerServiceTaskDefinitionLogConfiguration
type ElasticContainerServiceTaskDefinitionLogConfigurationList []ElasticContainerServiceTaskDefinitionLogConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionLogConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionLogConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionLogConfigurationList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionLogConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionLogConfigurationList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionMountPoint represents Amazon Elastic Container Service TaskDefinition MountPoint
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html
type ElasticContainerServiceTaskDefinitionMountPoint struct {
	// The path on the container that indicates where you want to mount the
	// volume.
	ContainerPath *StringExpr `json:"ContainerPath,omitempty"`

	// The name of the volume to mount.
	SourceVolume *StringExpr `json:"SourceVolume,omitempty"`

	// Indicates whether the container can write to the volume. If you
	// specify true, the container has read-only access to the volume. If you
	// specify false, the container can write to the volume. By default, the
	// value is false.
	ReadOnly *BoolExpr `json:"ReadOnly,omitempty"`
}

// ElasticContainerServiceTaskDefinitionMountPointList represents a list of ElasticContainerServiceTaskDefinitionMountPoint
type ElasticContainerServiceTaskDefinitionMountPointList []ElasticContainerServiceTaskDefinitionMountPoint

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionMountPointList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionMountPoint{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionMountPointList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionMountPoint{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionMountPointList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionPortMapping represents Amazon Elastic Container Service TaskDefinition PortMapping
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html
type ElasticContainerServiceTaskDefinitionPortMapping struct {
	// The port number on the container bound to the host port.
	ContainerPort *IntegerExpr `json:"ContainerPort,omitempty"`

	// The host port number on the container instance that you want to
	// reserve for your container. You can specify a non-reserved host port
	// for your container port mapping, omit the host port, or set the host
	// port to 0. If you specify a container port but no host port, your
	// container host port is assigned automatically .
	HostPort *IntegerExpr `json:"HostPort,omitempty"`

	// The protocol used for the port mapping. For valid values, see the
	// protocol parameter in the Amazon Elastic Container Service Developer
	// Guide. By default, AWS CloudFormation specifies tcp.
	Protocol *StringExpr `json:"Protocol,omitempty"`
}

// ElasticContainerServiceTaskDefinitionPortMappingList represents a list of ElasticContainerServiceTaskDefinitionPortMapping
type ElasticContainerServiceTaskDefinitionPortMappingList []ElasticContainerServiceTaskDefinitionPortMapping

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionPortMappingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionPortMapping{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionPortMappingList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionPortMapping{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionPortMappingList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionUlimit represents Amazon Elastic Container Service TaskDefinition Ulimit
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html
type ElasticContainerServiceTaskDefinitionUlimit struct {
	// The hard limit for the ulimit type.
	HardLimit *IntegerExpr `json:"HardLimit,omitempty"`

	// The type of ulimit. For valid values, see the name content for the
	// Ulimit data type in the Amazon Elastic Container Service API
	// Reference.
	Name *StringExpr `json:"Name,omitempty"`

	// The soft limit for the ulimit type.
	SoftLimit *IntegerExpr `json:"SoftLimit,omitempty"`
}

// ElasticContainerServiceTaskDefinitionUlimitList represents a list of ElasticContainerServiceTaskDefinitionUlimit
type ElasticContainerServiceTaskDefinitionUlimitList []ElasticContainerServiceTaskDefinitionUlimit

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionUlimitList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionUlimit{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionUlimitList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionUlimit{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionUlimitList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionVolumeFrom represents Amazon Elastic Container Service TaskDefinition VolumeFrom
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html
type ElasticContainerServiceTaskDefinitionVolumeFrom struct {
	// The name of the container that has the volumes to mount.
	SourceContainer *StringExpr `json:"SourceContainer,omitempty"`

	// Indicates whether the container can write to the volume. If you
	// specify true, the container has read-only access to the volume. If you
	// specify false, the container can write to the volume. By default, the
	// value is false.
	ReadOnly *BoolExpr `json:"ReadOnly,omitempty"`
}

// ElasticContainerServiceTaskDefinitionVolumeFromList represents a list of ElasticContainerServiceTaskDefinitionVolumeFrom
type ElasticContainerServiceTaskDefinitionVolumeFromList []ElasticContainerServiceTaskDefinitionVolumeFrom

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionVolumeFromList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionVolumeFrom{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionVolumeFromList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionVolumeFrom{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionVolumeFromList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionVolumes represents Amazon Elastic Container Service TaskDefinition Volumes
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html
type ElasticContainerServiceTaskDefinitionVolumes struct {
	// The name of the volume. To specify mount points in your container
	// definitions, use the value of this property.
	Name *StringExpr `json:"Name,omitempty"`

	// Determines whether your data volume persists on the host container
	// instance and at the location where it is stored.
	Host *ElasticContainerServiceTaskDefinitionVolumesHost `json:"Host,omitempty"`
}

// ElasticContainerServiceTaskDefinitionVolumesList represents a list of ElasticContainerServiceTaskDefinitionVolumes
type ElasticContainerServiceTaskDefinitionVolumesList []ElasticContainerServiceTaskDefinitionVolumes

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionVolumesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionVolumes{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionVolumesList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionVolumes{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionVolumesList(list)
		return nil
	}
	return err
}

// ElasticContainerServiceTaskDefinitionVolumesHost represents Amazon Elastic Container Service TaskDefinition Volumes Host
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes-host.html
type ElasticContainerServiceTaskDefinitionVolumesHost struct {
	// The data volume path on the host container instance.
	SourcePath *StringExpr `json:"SourcePath,omitempty"`
}

// ElasticContainerServiceTaskDefinitionVolumesHostList represents a list of ElasticContainerServiceTaskDefinitionVolumesHost
type ElasticContainerServiceTaskDefinitionVolumesHostList []ElasticContainerServiceTaskDefinitionVolumesHost

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticContainerServiceTaskDefinitionVolumesHostList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticContainerServiceTaskDefinitionVolumesHost{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticContainerServiceTaskDefinitionVolumesHostList{item}
		return nil
	}
	list := []ElasticContainerServiceTaskDefinitionVolumesHost{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticContainerServiceTaskDefinitionVolumesHostList(list)
		return nil
	}
	return err
}

// ElasticFileSystemFileSystemFileSystemTags represents Amazon Elastic File System FileSystem FileSystemTags
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-efs-filesystem-filesystemtags.html
type ElasticFileSystemFileSystemFileSystemTags struct {
	// The key name of the tag. You can specify a value that is from 1 to 128
	// Unicode characters in length, but you cannot use the prefix aws:.
	Key *StringExpr `json:"Key,omitempty"`

	// The value of the tag key. You can specify a value that is from 0 to
	// 128 Unicode characters in length.
	Value *StringExpr `json:"Value,omitempty"`
}

// ElasticFileSystemFileSystemFileSystemTagsList represents a list of ElasticFileSystemFileSystemFileSystemTags
type ElasticFileSystemFileSystemFileSystemTagsList []ElasticFileSystemFileSystemFileSystemTags

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticFileSystemFileSystemFileSystemTagsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticFileSystemFileSystemFileSystemTags{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticFileSystemFileSystemFileSystemTagsList{item}
		return nil
	}
	list := []ElasticFileSystemFileSystemFileSystemTags{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticFileSystemFileSystemFileSystemTagsList(list)
		return nil
	}
	return err
}

// ElasticBeanstalkApplicationApplicationResourceLifecycleConfig represents AWS Elastic Beanstalk Application ApplicationResourceLifecycleConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticbeanstalk-application-applicationresourcelifecycleconfig.html
type ElasticBeanstalkApplicationApplicationResourceLifecycleConfig struct {
	// The ARN of an IAM service role that Elastic Beanstalk has permission
	// to assume.
	ServiceRole interface{} `json:"ServiceRole,omitempty"`

	// Defines lifecycle settings for application versions.
	VersionLifecycleConfig *ElasticBeanstalkApplicationApplicationVersionLifecycleConfig `json:"VersionLifecycleConfig,omitempty"`
}

// ElasticBeanstalkApplicationApplicationResourceLifecycleConfigList represents a list of ElasticBeanstalkApplicationApplicationResourceLifecycleConfig
type ElasticBeanstalkApplicationApplicationResourceLifecycleConfigList []ElasticBeanstalkApplicationApplicationResourceLifecycleConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticBeanstalkApplicationApplicationResourceLifecycleConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticBeanstalkApplicationApplicationResourceLifecycleConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticBeanstalkApplicationApplicationResourceLifecycleConfigList{item}
		return nil
	}
	list := []ElasticBeanstalkApplicationApplicationResourceLifecycleConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticBeanstalkApplicationApplicationResourceLifecycleConfigList(list)
		return nil
	}
	return err
}

// ElasticBeanstalkApplicationApplicationVersionLifecycleConfig represents AWS Elastic Beanstalk Application ApplicationVersionLifecycleConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticbeanstalk-application-applicationversionlifecycleconfig.html
type ElasticBeanstalkApplicationApplicationVersionLifecycleConfig struct {
	// Specifies a max age rule to restrict the length of time that
	// application versions are retained for an application.
	MaxAgeRule *ElasticBeanstalkApplicationMaxAgeRule `json:"MaxAgeRule,omitempty"`

	// Specifies a max count rule to restrict the number of application
	// versions that are retained for an application.
	MaxCountRule *ElasticBeanstalkApplicationMaxCountRule `json:"MaxCountRule,omitempty"`
}

// ElasticBeanstalkApplicationApplicationVersionLifecycleConfigList represents a list of ElasticBeanstalkApplicationApplicationVersionLifecycleConfig
type ElasticBeanstalkApplicationApplicationVersionLifecycleConfigList []ElasticBeanstalkApplicationApplicationVersionLifecycleConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticBeanstalkApplicationApplicationVersionLifecycleConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticBeanstalkApplicationApplicationVersionLifecycleConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticBeanstalkApplicationApplicationVersionLifecycleConfigList{item}
		return nil
	}
	list := []ElasticBeanstalkApplicationApplicationVersionLifecycleConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticBeanstalkApplicationApplicationVersionLifecycleConfigList(list)
		return nil
	}
	return err
}

// ElasticBeanstalkApplicationMaxAgeRule represents AWS Elastic Beanstalk Application MaxAgeRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticbeanstalk-application-maxagerule.html
type ElasticBeanstalkApplicationMaxAgeRule struct {
	// Set to true to delete a version's source bundle from Amazon S3 when
	// Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 interface{} `json:"DeleteSourceFromS3,omitempty"`

	// Specify true to apply the rule, or false to disable it.
	Enabled interface{} `json:"Enabled,omitempty"`

	// Specify the number of days to retain an application versions.
	MaxAgeInDays interface{} `json:"MaxAgeInDays,omitempty"`
}

// ElasticBeanstalkApplicationMaxAgeRuleList represents a list of ElasticBeanstalkApplicationMaxAgeRule
type ElasticBeanstalkApplicationMaxAgeRuleList []ElasticBeanstalkApplicationMaxAgeRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticBeanstalkApplicationMaxAgeRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticBeanstalkApplicationMaxAgeRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticBeanstalkApplicationMaxAgeRuleList{item}
		return nil
	}
	list := []ElasticBeanstalkApplicationMaxAgeRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticBeanstalkApplicationMaxAgeRuleList(list)
		return nil
	}
	return err
}

// ElasticBeanstalkApplicationMaxCountRule represents AWS Elastic Beanstalk Application MaxCountRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticbeanstalk-application-maxcountrule.html
type ElasticBeanstalkApplicationMaxCountRule struct {
	// Set to true to delete a version's source bundle from Amazon S3 when
	// Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 interface{} `json:"DeleteSourceFromS3,omitempty"`

	// Specify true to apply the rule, or false to disable it.
	Enabled interface{} `json:"Enabled,omitempty"`

	// Specify the maximum number of application versions to retain.
	MaxCount interface{} `json:"MaxCount,omitempty"`
}

// ElasticBeanstalkApplicationMaxCountRuleList represents a list of ElasticBeanstalkApplicationMaxCountRule
type ElasticBeanstalkApplicationMaxCountRuleList []ElasticBeanstalkApplicationMaxCountRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticBeanstalkApplicationMaxCountRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticBeanstalkApplicationMaxCountRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticBeanstalkApplicationMaxCountRuleList{item}
		return nil
	}
	list := []ElasticBeanstalkApplicationMaxCountRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticBeanstalkApplicationMaxCountRuleList(list)
		return nil
	}
	return err
}

// ElasticBeanstalkConfigurationTemplateConfigurationOptionSetting represents AWS Elastic Beanstalk ConfigurationTemplate ConfigurationOptionSetting
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticbeanstalk-configurationtemplate-configurationoptionsetting.html
type ElasticBeanstalkConfigurationTemplateConfigurationOptionSetting struct {
	// A unique namespace that identifies the option's associated AWS
	// resource. For a list of namespaces that you can use, see Configuration
	// Options in the AWS Elastic Beanstalk Developer Guide.
	Namespace *StringExpr `json:"Namespace,omitempty"`

	// The name of the configuration option. For a list of options that you
	// can use, see Configuration Options in the AWS Elastic Beanstalk
	// Developer Guide.
	OptionName *StringExpr `json:"OptionName,omitempty"`

	// A unique resource name for the option setting. Use this property for a
	// time–based scaling configuration option.
	ResourceName *StringExpr `json:"ResourceName,omitempty"`

	// The current value for the configuration option.
	Value *StringExpr `json:"Value,omitempty"`
}

// ElasticBeanstalkConfigurationTemplateConfigurationOptionSettingList represents a list of ElasticBeanstalkConfigurationTemplateConfigurationOptionSetting
type ElasticBeanstalkConfigurationTemplateConfigurationOptionSettingList []ElasticBeanstalkConfigurationTemplateConfigurationOptionSetting

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticBeanstalkConfigurationTemplateConfigurationOptionSettingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticBeanstalkConfigurationTemplateConfigurationOptionSetting{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticBeanstalkConfigurationTemplateConfigurationOptionSettingList{item}
		return nil
	}
	list := []ElasticBeanstalkConfigurationTemplateConfigurationOptionSetting{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticBeanstalkConfigurationTemplateConfigurationOptionSettingList(list)
		return nil
	}
	return err
}

// ElasticBeanstalkConfigurationTemplateSourceConfiguration represents AWS Elastic Beanstalk ConfigurationTemplate SourceConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-configurationtemplate-sourceconfiguration.html
type ElasticBeanstalkConfigurationTemplateSourceConfiguration struct {
	// The name of the Elastic Beanstalk application that contains the
	// configuration template that you want to use.
	ApplicationName *StringExpr `json:"ApplicationName,omitempty"`

	// The name of the configuration template.
	TemplateName *StringExpr `json:"TemplateName,omitempty"`
}

// ElasticBeanstalkConfigurationTemplateSourceConfigurationList represents a list of ElasticBeanstalkConfigurationTemplateSourceConfiguration
type ElasticBeanstalkConfigurationTemplateSourceConfigurationList []ElasticBeanstalkConfigurationTemplateSourceConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticBeanstalkConfigurationTemplateSourceConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticBeanstalkConfigurationTemplateSourceConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticBeanstalkConfigurationTemplateSourceConfigurationList{item}
		return nil
	}
	list := []ElasticBeanstalkConfigurationTemplateSourceConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticBeanstalkConfigurationTemplateSourceConfigurationList(list)
		return nil
	}
	return err
}

// ElasticBeanstalkEnvironmentTier represents Elastic Beanstalk Environment Tier Property Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment-tier.html
type ElasticBeanstalkEnvironmentTier struct {
	// The name of the environment tier. You can specify WebServer or Worker.
	Name *StringExpr `json:"Name,omitempty"`

	// The type of this environment tier. You can specify Standard for the
	// WebServer tier or SQS/HTTP for the Worker tier.
	Type *StringExpr `json:"Type,omitempty"`

	// The version of this environment tier.
	Version *StringExpr `json:"Version,omitempty"`
}

// ElasticBeanstalkEnvironmentTierList represents a list of ElasticBeanstalkEnvironmentTier
type ElasticBeanstalkEnvironmentTierList []ElasticBeanstalkEnvironmentTier

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticBeanstalkEnvironmentTierList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticBeanstalkEnvironmentTier{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticBeanstalkEnvironmentTierList{item}
		return nil
	}
	list := []ElasticBeanstalkEnvironmentTier{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticBeanstalkEnvironmentTierList(list)
		return nil
	}
	return err
}

// ElasticBeanstalkEnvironmentOptionSetting represents AWS Elastic Beanstalk Environment OptionSetting
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-option-settings.html
type ElasticBeanstalkEnvironmentOptionSetting struct {
	// A unique namespace that identifies the option's associated AWS
	// resource. For a list of namespaces that you can use, see Configuration
	// Options in the AWS Elastic Beanstalk Developer Guide.
	Namespace *StringExpr `json:"Namespace,omitempty"`

	// The name of the configuration option. For a list of options that you
	// can use, see Configuration Options in the AWS Elastic Beanstalk
	// Developer Guide.
	OptionName *StringExpr `json:"OptionName,omitempty"`

	// A unique resource name for the option setting. Use this property for a
	// time–based scaling configuration option.
	ResourceName *StringExpr `json:"ResourceName,omitempty"`

	// The current value for the configuration option.
	Value *StringExpr `json:"Value,omitempty"`
}

// ElasticBeanstalkEnvironmentOptionSettingList represents a list of ElasticBeanstalkEnvironmentOptionSetting
type ElasticBeanstalkEnvironmentOptionSettingList []ElasticBeanstalkEnvironmentOptionSetting

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticBeanstalkEnvironmentOptionSettingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticBeanstalkEnvironmentOptionSetting{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticBeanstalkEnvironmentOptionSettingList{item}
		return nil
	}
	list := []ElasticBeanstalkEnvironmentOptionSetting{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticBeanstalkEnvironmentOptionSettingList(list)
		return nil
	}
	return err
}

// ElasticBeanstalkSourceBundle represents Elastic Beanstalk SourceBundle Property Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-sourcebundle.html
type ElasticBeanstalkSourceBundle struct {
	// The Amazon S3 bucket where the data is located.
	S3Bucket *StringExpr `json:"S3Bucket,omitempty"`

	// The Amazon S3 key where the data is located.
	S3Key *StringExpr `json:"S3Key,omitempty"`
}

// ElasticBeanstalkSourceBundleList represents a list of ElasticBeanstalkSourceBundle
type ElasticBeanstalkSourceBundleList []ElasticBeanstalkSourceBundle

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticBeanstalkSourceBundleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticBeanstalkSourceBundle{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticBeanstalkSourceBundleList{item}
		return nil
	}
	list := []ElasticBeanstalkSourceBundle{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticBeanstalkSourceBundleList(list)
		return nil
	}
	return err
}

// ElastiCacheReplicationGroupNodeGroupConfiguration represents Amazon ElastiCache ReplicationGroup NodeGroupConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html
type ElastiCacheReplicationGroupNodeGroupConfiguration struct {
	// The Availability Zone where ElastiCache launches the node group's
	// primary node.
	PrimaryAvailabilityZone *StringExpr `json:"PrimaryAvailabilityZone,omitempty"`

	// A list of Availability Zones where ElastiCache launches the read
	// replicas. The number of Availability Zones must match the value of the
	// ReplicaCount property or, if you don't specify the ReplicaCount
	// property, the replication group's ReplicasPerNodeGroup property.
	ReplicaAvailabilityZones interface{} `json:"ReplicaAvailabilityZones,omitempty"`

	// The number of read replica nodes in the node group.
	ReplicaCount *IntegerExpr `json:"ReplicaCount,omitempty"`

	// A string of comma-separated values where the first set of values are
	// the slot numbers (zero based), and the second set of values are the
	// keyspaces for each slot. The following example specifies three slots
	// (numbered 0, 1, and 2): 0,1,2,0-4999,5000-9999,10000-16,383.
	Slots *StringExpr `json:"Slots,omitempty"`
}

// ElastiCacheReplicationGroupNodeGroupConfigurationList represents a list of ElastiCacheReplicationGroupNodeGroupConfiguration
type ElastiCacheReplicationGroupNodeGroupConfigurationList []ElastiCacheReplicationGroupNodeGroupConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElastiCacheReplicationGroupNodeGroupConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElastiCacheReplicationGroupNodeGroupConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElastiCacheReplicationGroupNodeGroupConfigurationList{item}
		return nil
	}
	list := []ElastiCacheReplicationGroupNodeGroupConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElastiCacheReplicationGroupNodeGroupConfigurationList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingAccessLoggingPolicy represents Elastic Load Balancing AccessLoggingPolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-accessloggingpolicy.html
type ElasticLoadBalancingAccessLoggingPolicy struct {
	// The interval for publishing access logs in minutes. You can specify an
	// interval of either 5 minutes or 60 minutes.
	EmitInterval *IntegerExpr `json:"EmitInterval,omitempty"`

	// Whether logging is enabled for the load balancer.
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// The name of an Amazon S3 bucket where access log files are stored.
	S3BucketName *StringExpr `json:"S3BucketName,omitempty"`

	// A prefix for the all log object keys, such as
	// my-load-balancer-logs/prod. If you store log files from multiple
	// sources in a single bucket, you can use a prefix to distinguish each
	// log file and its source.
	S3BucketPrefix *StringExpr `json:"S3BucketPrefix,omitempty"`
}

// ElasticLoadBalancingAccessLoggingPolicyList represents a list of ElasticLoadBalancingAccessLoggingPolicy
type ElasticLoadBalancingAccessLoggingPolicyList []ElasticLoadBalancingAccessLoggingPolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingAccessLoggingPolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingAccessLoggingPolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingAccessLoggingPolicyList{item}
		return nil
	}
	list := []ElasticLoadBalancingAccessLoggingPolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingAccessLoggingPolicyList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingAppCookieStickinessPolicy represents ElasticLoadBalancing AppCookieStickinessPolicy Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-AppCookieStickinessPolicy.html
type ElasticLoadBalancingAppCookieStickinessPolicy struct {
	// Name of the application cookie used for stickiness.
	CookieName *StringExpr `json:"CookieName,omitempty"`

	// The name of the policy being created. The name must be unique within
	// the set of policies for this Load Balancer.
	PolicyName *StringExpr `json:"PolicyName,omitempty"`
}

// ElasticLoadBalancingAppCookieStickinessPolicyList represents a list of ElasticLoadBalancingAppCookieStickinessPolicy
type ElasticLoadBalancingAppCookieStickinessPolicyList []ElasticLoadBalancingAppCookieStickinessPolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingAppCookieStickinessPolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingAppCookieStickinessPolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingAppCookieStickinessPolicyList{item}
		return nil
	}
	list := []ElasticLoadBalancingAppCookieStickinessPolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingAppCookieStickinessPolicyList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingConnectionDrainingPolicy represents Elastic Load Balancing ConnectionDrainingPolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectiondrainingpolicy.html
type ElasticLoadBalancingConnectionDrainingPolicy struct {
	// Whether or not connection draining is enabled for the load balancer.
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// The time in seconds after the load balancer closes all connections to
	// a deregistered or unhealthy instance.
	Timeout *IntegerExpr `json:"Timeout,omitempty"`
}

// ElasticLoadBalancingConnectionDrainingPolicyList represents a list of ElasticLoadBalancingConnectionDrainingPolicy
type ElasticLoadBalancingConnectionDrainingPolicyList []ElasticLoadBalancingConnectionDrainingPolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingConnectionDrainingPolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingConnectionDrainingPolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingConnectionDrainingPolicyList{item}
		return nil
	}
	list := []ElasticLoadBalancingConnectionDrainingPolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingConnectionDrainingPolicyList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingConnectionSettings represents Elastic Load Balancing ConnectionSettings
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectionsettings.html
type ElasticLoadBalancingConnectionSettings struct {
	// The time (in seconds) that a connection to the load balancer can
	// remain idle, which means no data is sent over the connection. After
	// the specified time, the load balancer closes the connection.
	IdleTimeout *IntegerExpr `json:"IdleTimeout,omitempty"`
}

// ElasticLoadBalancingConnectionSettingsList represents a list of ElasticLoadBalancingConnectionSettings
type ElasticLoadBalancingConnectionSettingsList []ElasticLoadBalancingConnectionSettings

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingConnectionSettingsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingConnectionSettings{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingConnectionSettingsList{item}
		return nil
	}
	list := []ElasticLoadBalancingConnectionSettings{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingConnectionSettingsList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingLoadBalancerHealthCheck represents ElasticLoadBalancing LoadBalancer HealthCheck
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html
type ElasticLoadBalancingLoadBalancerHealthCheck struct {
	// Specifies the number of consecutive health probe successes required
	// before moving the instance to the Healthy state.
	HealthyThreshold *StringExpr `json:"HealthyThreshold,omitempty"`

	// Specifies the approximate interval, in seconds, between health checks
	// of an individual instance. Valid values are 5 to 300. The default is
	// 30.
	Interval *StringExpr `json:"Interval,omitempty"`

	// Specifies the instance's protocol and port to check. The protocol can
	// be TCP, HTTP, HTTPS, or SSL. The range of valid ports is 1 through
	// 65535.
	Target *StringExpr `json:"Target,omitempty"`

	// Specifies the amount of time, in seconds, during which no response
	// means a failed health probe. This value must be less than the value
	// for Interval.
	Timeout *StringExpr `json:"Timeout,omitempty"`

	// Specifies the number of consecutive health probe failures required
	// before moving the instance to the Unhealthy state.
	UnhealthyThreshold *StringExpr `json:"UnhealthyThreshold,omitempty"`
}

// ElasticLoadBalancingLoadBalancerHealthCheckList represents a list of ElasticLoadBalancingLoadBalancerHealthCheck
type ElasticLoadBalancingLoadBalancerHealthCheckList []ElasticLoadBalancingLoadBalancerHealthCheck

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingLoadBalancerHealthCheckList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingLoadBalancerHealthCheck{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingLoadBalancerHealthCheckList{item}
		return nil
	}
	list := []ElasticLoadBalancingLoadBalancerHealthCheck{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingLoadBalancerHealthCheckList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingLBCookieStickinessPolicy represents ElasticLoadBalancing LBCookieStickinessPolicy Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-LBCookieStickinessPolicy.html
type ElasticLoadBalancingLBCookieStickinessPolicy struct {
	// The time period, in seconds, after which the cookie should be
	// considered stale. If this parameter isn't specified, the sticky
	// session will last for the duration of the browser session.
	CookieExpirationPeriod *StringExpr `json:"CookieExpirationPeriod,omitempty"`

	// The name of the policy being created. The name must be unique within
	// the set of policies for this load balancer.
	PolicyName interface{} `json:"PolicyName,omitempty"`
}

// ElasticLoadBalancingLBCookieStickinessPolicyList represents a list of ElasticLoadBalancingLBCookieStickinessPolicy
type ElasticLoadBalancingLBCookieStickinessPolicyList []ElasticLoadBalancingLBCookieStickinessPolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingLBCookieStickinessPolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingLBCookieStickinessPolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingLBCookieStickinessPolicyList{item}
		return nil
	}
	list := []ElasticLoadBalancingLBCookieStickinessPolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingLBCookieStickinessPolicyList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingListener represents ElasticLoadBalancing Listener Property Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html
type ElasticLoadBalancingListener struct {
	// Specifies the TCP port on which the instance server listens. You can't
	// modify this property during the life of the load balancer.
	InstancePort *StringExpr `json:"InstancePort,omitempty"`

	// Specifies the protocol to use for routing traffic to back-end
	// instances: HTTP, HTTPS, TCP, or SSL. You can't modify this property
	// during the life of the load balancer.
	InstanceProtocol *StringExpr `json:"InstanceProtocol,omitempty"`

	// Specifies the external load balancer port number. You can't modify
	// this property during the life of the load balancer.
	LoadBalancerPort *StringExpr `json:"LoadBalancerPort,omitempty"`

	// A list of ElasticLoadBalancing policy names to associate with the
	// Listener. Specify only policies that are compatible with a Listener.
	// For more information, see DescribeLoadBalancerPolicyTypes in the
	// Elastic Load Balancing API Reference version 2012-06-01.
	PolicyNames interface{} `json:"PolicyNames,omitempty"`

	// Specifies the load balancer transport protocol to use for routing:
	// HTTP, HTTPS, TCP or SSL. You can't modify this property during the
	// life of the load balancer.
	Protocol *StringExpr `json:"Protocol,omitempty"`

	// The ARN of the SSL certificate to use. For more information about SSL
	// certificates, see Managing Server Certificates in the AWS Identity and
	// Access Management User Guide.
	SSLCertificateId *StringExpr `json:"SSLCertificateId,omitempty"`
}

// ElasticLoadBalancingListenerList represents a list of ElasticLoadBalancingListener
type ElasticLoadBalancingListenerList []ElasticLoadBalancingListener

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingListenerList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingListener{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingListenerList{item}
		return nil
	}
	list := []ElasticLoadBalancingListener{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingListenerList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingPolicy represents ElasticLoadBalancing Policy Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html
type ElasticLoadBalancingPolicy struct {
	// A list of arbitrary attributes for this policy. If you don't need to
	// specify any policy attributes, specify an empty list ([]).
	Attributes interface{} `json:"Attributes,omitempty"`

	// A list of instance ports for the policy. These are the ports
	// associated with the back-end server.
	InstancePorts interface{} `json:"InstancePorts,omitempty"`

	// A list of external load balancer ports for the policy.
	LoadBalancerPorts interface{} `json:"LoadBalancerPorts,omitempty"`

	// A name for this policy that is unique to the load balancer.
	PolicyName *StringExpr `json:"PolicyName,omitempty"`

	// The name of the policy type for this policy. This must be one of the
	// types reported by the Elastic Load Balancing
	// DescribeLoadBalancerPolicyTypes action.
	PolicyType *StringExpr `json:"PolicyType,omitempty"`
}

// ElasticLoadBalancingPolicyList represents a list of ElasticLoadBalancingPolicy
type ElasticLoadBalancingPolicyList []ElasticLoadBalancingPolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingPolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingPolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingPolicyList{item}
		return nil
	}
	list := []ElasticLoadBalancingPolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingPolicyList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingListenerCertificate represents Elastic Load Balancing Listener Certificate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-certificates.html
type ElasticLoadBalancingListenerCertificate struct {
	// The Amazon Resource Name (ARN) of the certificate to associate with
	// the listener.
	CertificateArn *StringExpr `json:"CertificateArn,omitempty"`
}

// ElasticLoadBalancingListenerCertificateList represents a list of ElasticLoadBalancingListenerCertificate
type ElasticLoadBalancingListenerCertificateList []ElasticLoadBalancingListenerCertificate

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingListenerCertificateList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingListenerCertificate{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingListenerCertificateList{item}
		return nil
	}
	list := []ElasticLoadBalancingListenerCertificate{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingListenerCertificateList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingListenerCertificateCertificate represents Elastic Load Balancing ListenerCertificate Certificate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenercertificate-certificate.html
type ElasticLoadBalancingListenerCertificateCertificate struct {
	// The Amazon Resource Name (ARN) of the certificate.
	CertificateArn interface{} `json:"CertificateArn,omitempty"`
}

// ElasticLoadBalancingListenerCertificateCertificateList represents a list of ElasticLoadBalancingListenerCertificateCertificate
type ElasticLoadBalancingListenerCertificateCertificateList []ElasticLoadBalancingListenerCertificateCertificate

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingListenerCertificateCertificateList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingListenerCertificateCertificate{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingListenerCertificateCertificateList{item}
		return nil
	}
	list := []ElasticLoadBalancingListenerCertificateCertificate{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingListenerCertificateCertificateList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingListenerAction represents Elastic Load Balancing Listener Action
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-defaultactions.html
type ElasticLoadBalancingListenerAction struct {
	// The Amazon Resource Name (ARN) of the target group to which Elastic
	// Load Balancing routes the traffic.
	TargetGroupArn *StringExpr `json:"TargetGroupArn,omitempty"`

	// The type of action. For valid values, see the Type contents for the
	// Action data type in the Elastic Load Balancing API Reference version
	// 2015-12-01.
	Type *StringExpr `json:"Type,omitempty"`
}

// ElasticLoadBalancingListenerActionList represents a list of ElasticLoadBalancingListenerAction
type ElasticLoadBalancingListenerActionList []ElasticLoadBalancingListenerAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingListenerActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingListenerAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingListenerActionList{item}
		return nil
	}
	list := []ElasticLoadBalancingListenerAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingListenerActionList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingListenerRuleActions represents Elastic Load Balancing ListenerRule Actions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-actions.html
type ElasticLoadBalancingListenerRuleActions struct {
	// The Amazon Resource Name (ARN) of the target group to which Elastic
	// Load Balancing routes the traffic.
	TargetGroupArn *StringExpr `json:"TargetGroupArn,omitempty"`

	// The type of action. For valid values, see the Type contents for the
	// Action data type in the Elastic Load Balancing API Reference version
	// 2015-12-01.
	Type *StringExpr `json:"Type,omitempty"`
}

// ElasticLoadBalancingListenerRuleActionsList represents a list of ElasticLoadBalancingListenerRuleActions
type ElasticLoadBalancingListenerRuleActionsList []ElasticLoadBalancingListenerRuleActions

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingListenerRuleActionsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingListenerRuleActions{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingListenerRuleActionsList{item}
		return nil
	}
	list := []ElasticLoadBalancingListenerRuleActions{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingListenerRuleActionsList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingListenerRuleConditions represents Elastic Load Balancing ListenerRule Conditions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-conditions.html
type ElasticLoadBalancingListenerRuleConditions struct {
	// The name of the condition that you want to define, such as
	// path-pattern (which forwards requests based on the URL of the
	// request).
	Field *StringExpr `json:"Field,omitempty"`

	// The value for the field that you specified in the Field property.
	Values interface{} `json:"Values,omitempty"`
}

// ElasticLoadBalancingListenerRuleConditionsList represents a list of ElasticLoadBalancingListenerRuleConditions
type ElasticLoadBalancingListenerRuleConditionsList []ElasticLoadBalancingListenerRuleConditions

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingListenerRuleConditionsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingListenerRuleConditions{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingListenerRuleConditionsList{item}
		return nil
	}
	list := []ElasticLoadBalancingListenerRuleConditions{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingListenerRuleConditionsList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingLoadBalancerLoadBalancerAttributes represents Elastic Load Balancing LoadBalancer LoadBalancerAttributes
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html
type ElasticLoadBalancingLoadBalancerLoadBalancerAttributes struct {
	// The name of an attribute that you want to configure. For the list of
	// attributes that you can configure, see the Key contents for the
	// LoadBalancerAttribute data type in the Elastic Load Balancing API
	// Reference version 2015-12-01.
	Key *StringExpr `json:"Key,omitempty"`

	// A value for the attribute.
	Value *StringExpr `json:"Value,omitempty"`
}

// ElasticLoadBalancingLoadBalancerLoadBalancerAttributesList represents a list of ElasticLoadBalancingLoadBalancerLoadBalancerAttributes
type ElasticLoadBalancingLoadBalancerLoadBalancerAttributesList []ElasticLoadBalancingLoadBalancerLoadBalancerAttributes

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingLoadBalancerLoadBalancerAttributesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingLoadBalancerLoadBalancerAttributes{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingLoadBalancerLoadBalancerAttributesList{item}
		return nil
	}
	list := []ElasticLoadBalancingLoadBalancerLoadBalancerAttributes{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingLoadBalancerLoadBalancerAttributesList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingLoadBalancerSubnetMapping represents Elastic Load Balancing LoadBalancer SubnetMapping
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html
type ElasticLoadBalancingLoadBalancerSubnetMapping struct {
	// The ID of the subnet.
	SubnetId *StringExpr `json:"SubnetId,omitempty"`

	// [Network Load Balancer] The ID that represents the allocation of the
	// Elastic IP address.
	AllocationId *StringExpr `json:"AllocationId,omitempty"`
}

// ElasticLoadBalancingLoadBalancerSubnetMappingList represents a list of ElasticLoadBalancingLoadBalancerSubnetMapping
type ElasticLoadBalancingLoadBalancerSubnetMappingList []ElasticLoadBalancingLoadBalancerSubnetMapping

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingLoadBalancerSubnetMappingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingLoadBalancerSubnetMapping{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingLoadBalancerSubnetMappingList{item}
		return nil
	}
	list := []ElasticLoadBalancingLoadBalancerSubnetMapping{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingLoadBalancerSubnetMappingList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingTargetGroupMatcher represents Elastic Load Balancing TargetGroup Matcher
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-matcher.html
type ElasticLoadBalancingTargetGroupMatcher struct {
	// The HTTP codes that a healthy target must use when responding to a
	// health check, such as 200,202 or 200-399.
	HttpCode *StringExpr `json:"HttpCode,omitempty"`
}

// ElasticLoadBalancingTargetGroupMatcherList represents a list of ElasticLoadBalancingTargetGroupMatcher
type ElasticLoadBalancingTargetGroupMatcherList []ElasticLoadBalancingTargetGroupMatcher

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingTargetGroupMatcherList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingTargetGroupMatcher{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingTargetGroupMatcherList{item}
		return nil
	}
	list := []ElasticLoadBalancingTargetGroupMatcher{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingTargetGroupMatcherList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingTargetGroupTargetDescription represents Elastic Load Balancing TargetGroup TargetDescription
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html
type ElasticLoadBalancingTargetGroupTargetDescription struct {
	// The Availability Zone where the IP address is to be registered. For
	// more information, see TargetDescription in the Elastic Load Balancing
	// API Reference version 2015-12-01.
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`

	// The ID of the target, such as an EC2 instance ID. If the target type
	// of the target group is instance, specify an instance ID. If the target
	// type is ip, specify an IP address.
	Id *StringExpr `json:"Id,omitempty"`

	// The port number on which the target is listening for traffic.
	Port *IntegerExpr `json:"Port,omitempty"`
}

// ElasticLoadBalancingTargetGroupTargetDescriptionList represents a list of ElasticLoadBalancingTargetGroupTargetDescription
type ElasticLoadBalancingTargetGroupTargetDescriptionList []ElasticLoadBalancingTargetGroupTargetDescription

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingTargetGroupTargetDescriptionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingTargetGroupTargetDescription{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingTargetGroupTargetDescriptionList{item}
		return nil
	}
	list := []ElasticLoadBalancingTargetGroupTargetDescription{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingTargetGroupTargetDescriptionList(list)
		return nil
	}
	return err
}

// ElasticLoadBalancingTargetGroupTargetGroupAttributes represents Elastic Load Balancing TargetGroup TargetGroupAttributes
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattributes.html
type ElasticLoadBalancingTargetGroupTargetGroupAttributes struct {
	// The name of the attribute that you want to configure. For the list of
	// attributes that you can configure, see the Key contents for the
	// TargetGroupAttribute data type in the Elastic Load Balancing API
	// Reference version 2015-12-01.
	Key *StringExpr `json:"Key,omitempty"`

	// A value for the attribute.
	Value *StringExpr `json:"Value,omitempty"`
}

// ElasticLoadBalancingTargetGroupTargetGroupAttributesList represents a list of ElasticLoadBalancingTargetGroupTargetGroupAttributes
type ElasticLoadBalancingTargetGroupTargetGroupAttributesList []ElasticLoadBalancingTargetGroupTargetGroupAttributes

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticLoadBalancingTargetGroupTargetGroupAttributesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticLoadBalancingTargetGroupTargetGroupAttributes{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticLoadBalancingTargetGroupTargetGroupAttributesList{item}
		return nil
	}
	list := []ElasticLoadBalancingTargetGroupTargetGroupAttributes{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticLoadBalancingTargetGroupTargetGroupAttributesList(list)
		return nil
	}
	return err
}

// ElasticsearchServiceDomainEBSOptions represents Amazon Elasticsearch Service Domain EBSOptions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-ebsoptions.html
type ElasticsearchServiceDomainEBSOptions struct {
	// Specifies whether Amazon EBS volumes are attached to data nodes in the
	// Amazon ES domain.
	EBSEnabled *BoolExpr `json:"EBSEnabled,omitempty"`

	// The number of I/O operations per second (IOPS) that the volume
	// supports. This property applies only to the Provisioned IOPS (SSD) EBS
	// volume type.
	Iops *IntegerExpr `json:"Iops,omitempty"`

	// The size of the EBS volume for each data node. The minimum and maximum
	// size of an EBS volume depends on the EBS volume type and the instance
	// type to which it is attached. For more information, see Configuring
	// EBS-based Storage in the Amazon Elasticsearch Service Developer Guide.
	VolumeSize *IntegerExpr `json:"VolumeSize,omitempty"`

	// The EBS volume type to use with the Amazon ES domain, such as
	// standard, gp2, or io1. For more information about each type, see
	// Amazon EBS Volume Types in the Amazon EC2 User Guide for Linux
	// Instances.
	VolumeType *StringExpr `json:"VolumeType,omitempty"`
}

// ElasticsearchServiceDomainEBSOptionsList represents a list of ElasticsearchServiceDomainEBSOptions
type ElasticsearchServiceDomainEBSOptionsList []ElasticsearchServiceDomainEBSOptions

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticsearchServiceDomainEBSOptionsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticsearchServiceDomainEBSOptions{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticsearchServiceDomainEBSOptionsList{item}
		return nil
	}
	list := []ElasticsearchServiceDomainEBSOptions{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticsearchServiceDomainEBSOptionsList(list)
		return nil
	}
	return err
}

// ElasticsearchServiceDomainElasticsearchClusterConfig represents Amazon Elasticsearch Service Domain ElasticsearchClusterConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-elasticsearchclusterconfig.html
type ElasticsearchServiceDomainElasticsearchClusterConfig struct {
	// The number of instances to use for the master node.
	DedicatedMasterCount *IntegerExpr `json:"DedicatedMasterCount,omitempty"`

	// Indicates whether to use a dedicated master node for the Amazon ES
	// domain. A dedicated master node is a cluster node that performs
	// cluster management tasks, but doesn't hold data or respond to data
	// upload requests. Dedicated master nodes offload cluster management
	// tasks to increase the stability of your search clusters.
	DedicatedMasterEnabled *BoolExpr `json:"DedicatedMasterEnabled,omitempty"`

	// The hardware configuration of the computer that hosts the dedicated
	// master node, such as m3.medium.elasticsearch. For valid values, see
	// Configuring Amazon ES Domains in the Amazon Elasticsearch Service
	// Developer Guide.
	DedicatedMasterType *StringExpr `json:"DedicatedMasterType,omitempty"`

	// The number of data nodes (instances) to use in the Amazon ES domain.
	InstanceCount *IntegerExpr `json:"InstanceCount,omitempty"`

	// The instance type for your data nodes, such as
	// m3.medium.elasticsearch. For valid values, see Configuring Amazon ES
	// Domains in the Amazon Elasticsearch Service Developer Guide.
	InstanceType *StringExpr `json:"InstanceType,omitempty"`

	// Indicates whether to enable zone awareness for the Amazon ES domain.
	// When you enable zone awareness, Amazon ES allocates the nodes and
	// replica index shards that belong to a cluster across two Availability
	// Zones (AZs) in the same region to prevent data loss and minimize
	// downtime in the event of node or data center failure. Don't enable
	// zone awareness if your cluster has no replica index shards or is a
	// single-node cluster. For more information, see Enabling Zone Awareness
	// in the Amazon Elasticsearch Service Developer Guide.
	ZoneAwarenessEnabled *BoolExpr `json:"ZoneAwarenessEnabled,omitempty"`
}

// ElasticsearchServiceDomainElasticsearchClusterConfigList represents a list of ElasticsearchServiceDomainElasticsearchClusterConfig
type ElasticsearchServiceDomainElasticsearchClusterConfigList []ElasticsearchServiceDomainElasticsearchClusterConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticsearchServiceDomainElasticsearchClusterConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticsearchServiceDomainElasticsearchClusterConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticsearchServiceDomainElasticsearchClusterConfigList{item}
		return nil
	}
	list := []ElasticsearchServiceDomainElasticsearchClusterConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticsearchServiceDomainElasticsearchClusterConfigList(list)
		return nil
	}
	return err
}

// ElasticsearchServiceDomainSnapshotOptions represents Amazon Elasticsearch Service Domain SnapshotOptions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-snapshotoptions.html
type ElasticsearchServiceDomainSnapshotOptions struct {
	// The hour in UTC during which the service takes an automated daily
	// snapshot of the indices in the Amazon ES domain. For example, if you
	// specify 0, Amazon ES takes an automated snapshot everyday between
	// midnight and 1 am. You can specify a value between 0 and 23.
	AutomatedSnapshotStartHour *IntegerExpr `json:"AutomatedSnapshotStartHour,omitempty"`
}

// ElasticsearchServiceDomainSnapshotOptionsList represents a list of ElasticsearchServiceDomainSnapshotOptions
type ElasticsearchServiceDomainSnapshotOptionsList []ElasticsearchServiceDomainSnapshotOptions

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticsearchServiceDomainSnapshotOptionsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticsearchServiceDomainSnapshotOptions{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticsearchServiceDomainSnapshotOptionsList{item}
		return nil
	}
	list := []ElasticsearchServiceDomainSnapshotOptions{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticsearchServiceDomainSnapshotOptionsList(list)
		return nil
	}
	return err
}

// ElasticsearchServiceDomainVPCOptions represents Amazon Elasticsearch Service Domain VPCOptions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-vpcoptions.html
type ElasticsearchServiceDomainVPCOptions struct {
	// The list of security group IDs that are associated with the VPC
	// endpoints for the domain. If you don't provide a security group ID,
	// Amazon ES uses the default security group for the VPC. To learn more,
	// see Security Groups for your VPC in the Amazon VPC User Guide.
	SecurityGroupIds interface{} `json:"SecurityGroupIds,omitempty"`

	// A list of subnet IDs that are associated with the VPC endpoints for
	// the domain. If your domain has zone awareness enabled, you need to
	// provide two subnet IDs, one per zone. Otherwise, you only need to
	// provide one. To learn more, see VPCs and Subnets in the Amazon VPC
	// User Guide.
	SubnetIds interface{} `json:"SubnetIds,omitempty"`
}

// ElasticsearchServiceDomainVPCOptionsList represents a list of ElasticsearchServiceDomainVPCOptions
type ElasticsearchServiceDomainVPCOptionsList []ElasticsearchServiceDomainVPCOptions

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ElasticsearchServiceDomainVPCOptionsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ElasticsearchServiceDomainVPCOptions{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ElasticsearchServiceDomainVPCOptionsList{item}
		return nil
	}
	list := []ElasticsearchServiceDomainVPCOptions{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ElasticsearchServiceDomainVPCOptionsList(list)
		return nil
	}
	return err
}

// EMRClusterApplication represents Amazon EMR Cluster Application
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-application.html
type EMRClusterApplication struct {
	// Metadata about third-party applications that third-party vendors use
	// for testing purposes.
	AdditionalInfo *StringExpr `json:"AdditionalInfo,omitempty"`

	// Arguments that Amazon EMR passes to the application.
	Args interface{} `json:"Args,omitempty"`

	// The name of the application to add to your cluster, such as Hadoop or
	// Hive. For valid values, see the Applications parameter in the Amazon
	// EMR API Reference.
	Name *StringExpr `json:"Name,omitempty"`

	// The version of the application.
	Version *StringExpr `json:"Version,omitempty"`
}

// EMRClusterApplicationList represents a list of EMRClusterApplication
type EMRClusterApplicationList []EMRClusterApplication

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterApplicationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterApplication{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterApplicationList{item}
		return nil
	}
	list := []EMRClusterApplication{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterApplicationList(list)
		return nil
	}
	return err
}

// EMRClusterAutoScalingPolicy represents Amazon EMR Cluster AutoScalingPolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig-autoscalingpolicy.html
type EMRClusterAutoScalingPolicy struct {
	// The upper and lower Amazon EC2 instance limits for an automatic
	// scaling policy. Automatic scaling activity will not cause an instance
	// group to grow above or below these limits.
	Constraints *EMRClusterScalingConstraints `json:"Constraints,omitempty"`

	// The scale-in and scale-out rules that comprise the automatic scaling
	// policy.
	Rules *EMRClusterScalingRule `json:"Rules,omitempty"`
}

// EMRClusterAutoScalingPolicyList represents a list of EMRClusterAutoScalingPolicy
type EMRClusterAutoScalingPolicyList []EMRClusterAutoScalingPolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterAutoScalingPolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterAutoScalingPolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterAutoScalingPolicyList{item}
		return nil
	}
	list := []EMRClusterAutoScalingPolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterAutoScalingPolicyList(list)
		return nil
	}
	return err
}

// EMRClusterBootstrapActionConfig represents Amazon EMR Cluster BootstrapActionConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-bootstrapactionconfig.html
type EMRClusterBootstrapActionConfig struct {
	// The name of the bootstrap action to add to your cluster.
	Name *StringExpr `json:"Name,omitempty"`

	// The script that the bootstrap action runs.
	ScriptBootstrapAction *EMRClusterScriptBootstrapActionConfig `json:"ScriptBootstrapAction,omitempty"`
}

// EMRClusterBootstrapActionConfigList represents a list of EMRClusterBootstrapActionConfig
type EMRClusterBootstrapActionConfigList []EMRClusterBootstrapActionConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterBootstrapActionConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterBootstrapActionConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterBootstrapActionConfigList{item}
		return nil
	}
	list := []EMRClusterBootstrapActionConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterBootstrapActionConfigList(list)
		return nil
	}
	return err
}

// EMRClusterCloudWatchAlarmDefinition represents Amazon EMR Cluster CloudWatchAlarmDefinition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html
type EMRClusterCloudWatchAlarmDefinition struct {
	// Determines how the metric specified by MetricName is compared to the
	// value specified by Threshold.
	ComparisonOperator *StringExpr `json:"ComparisonOperator,omitempty"`

	// A list of CloudWatch metric dimensions.
	Dimensions *EMRClusterMetricDimensionList `json:"Dimensions,omitempty"`

	// The number of periods, expressed in seconds using Period, during which
	// the alarm condition must exist before the alarm triggers automatic
	// scaling activity. The default value is 1.
	EvaluationPeriods *IntegerExpr `json:"EvaluationPeriods,omitempty"`

	// The name of the CloudWatch metric that is watched to determine an
	// alarm condition.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// The namespace for the CloudWatch metric. The default is
	// AWS/ElasticMapReduce.
	Namespace *StringExpr `json:"Namespace,omitempty"`

	// The period, in seconds, over which the statistic is applied. EMR
	// CloudWatch metrics are emitted every five minutes (300 seconds), so if
	// an EMR CloudWatch metric is specified, specify 300.
	Period *IntegerExpr `json:"Period,omitempty"`

	// The statistic to apply to the metric associated with the alarm. The
	// default is AVERAGE.
	Statistic *StringExpr `json:"Statistic,omitempty"`

	// The value against which the specified statistic is compared.
	Threshold interface{} `json:"Threshold,omitempty"`

	// The unit of measure associated with the CloudWatch metric being
	// watched. The value specified for Unit must correspond to the units
	// specified in the CloudWatch metric.
	Unit *StringExpr `json:"Unit,omitempty"`
}

// EMRClusterCloudWatchAlarmDefinitionList represents a list of EMRClusterCloudWatchAlarmDefinition
type EMRClusterCloudWatchAlarmDefinitionList []EMRClusterCloudWatchAlarmDefinition

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterCloudWatchAlarmDefinitionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterCloudWatchAlarmDefinition{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterCloudWatchAlarmDefinitionList{item}
		return nil
	}
	list := []EMRClusterCloudWatchAlarmDefinition{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterCloudWatchAlarmDefinitionList(list)
		return nil
	}
	return err
}

// EMRClusterConfigurations represents Amazon EMR Cluster Configurations
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-configuration.html
type EMRClusterConfigurations struct {
	// The name of an application-specific configuration file. For more
	// information see, Configuring Applications in the Amazon EMR Release
	// Guide.
	Classification *StringExpr `json:"Classification,omitempty"`

	// The settings that you want to change in the application-specific
	// configuration file. For more information see, Configuring Applications
	// in the Amazon EMR Release Guide.
	ConfigurationProperties *StringExpr `json:"ConfigurationProperties,omitempty"`

	// A list of configurations to apply to this configuration. You can nest
	// configurations so that a single configuration can have its own
	// configurations. In other words, you can configure a configuration. For
	// more information see, Configuring Applications in the Amazon EMR
	// Release Guide.
	Configurations *EMRClusterConfigurationsList `json:"Configurations,omitempty"`
}

// EMRClusterConfigurationsList represents a list of EMRClusterConfigurations
type EMRClusterConfigurationsList []EMRClusterConfigurations

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterConfigurationsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterConfigurations{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterConfigurationsList{item}
		return nil
	}
	list := []EMRClusterConfigurations{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterConfigurationsList(list)
		return nil
	}
	return err
}

// EMRClusterInstanceFleetConfig represents Amazon EMR Cluster InstanceFleetConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetconfig.html
type EMRClusterInstanceFleetConfig struct {
	// The instance type configurations that define the EC2 instances in the
	// instance fleet. Duplicates not allowed.
	InstanceTypeConfigs *EMRClusterInstanceTypeConfigList `json:"InstanceTypeConfigs,omitempty"`

	// The launch specification for the instance fleet.
	LaunchSpecifications *EMRClusterInstanceFleetProvisioningSpecifications `json:"LaunchSpecifications,omitempty"`

	// The friendly name of the instance fleet. For constraints, see
	// InstanceFleetConfig in the Amazon EMR API Reference.
	Name *StringExpr `json:"Name,omitempty"`

	// The target capacity of On-Demand units for the instance fleet, which
	// determines how many On-Demand instances to provision. For more
	// information, see InstanceFleetConfig in the Amazon EMR API Reference.
	TargetOnDemandCapacity *IntegerExpr `json:"TargetOnDemandCapacity,omitempty"`

	// The target capacity of Spot units for the instance fleet, which
	// determines how many Spot instances to provision. For more information,
	// see InstanceFleetConfig in the Amazon EMR API Reference.
	TargetSpotCapacity *IntegerExpr `json:"TargetSpotCapacity,omitempty"`
}

// EMRClusterInstanceFleetConfigList represents a list of EMRClusterInstanceFleetConfig
type EMRClusterInstanceFleetConfigList []EMRClusterInstanceFleetConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterInstanceFleetConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterInstanceFleetConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterInstanceFleetConfigList{item}
		return nil
	}
	list := []EMRClusterInstanceFleetConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterInstanceFleetConfigList(list)
		return nil
	}
	return err
}

// EMRClusterInstanceFleetProvisioningSpecifications represents Amazon EMR Cluster InstanceFleetProvisioningSpecifications
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetprovisioningspecifications.html
type EMRClusterInstanceFleetProvisioningSpecifications struct {
	// The launch specification for Spot instances in the fleet, which
	// determines the defined duration and provisioning timeout behavior.
	SpotSpecification *EMRClusterSpotProvisioningSpecification `json:"SpotSpecification,omitempty"`
}

// EMRClusterInstanceFleetProvisioningSpecificationsList represents a list of EMRClusterInstanceFleetProvisioningSpecifications
type EMRClusterInstanceFleetProvisioningSpecificationsList []EMRClusterInstanceFleetProvisioningSpecifications

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterInstanceFleetProvisioningSpecificationsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterInstanceFleetProvisioningSpecifications{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterInstanceFleetProvisioningSpecificationsList{item}
		return nil
	}
	list := []EMRClusterInstanceFleetProvisioningSpecifications{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterInstanceFleetProvisioningSpecificationsList(list)
		return nil
	}
	return err
}

// EMRClusterInstanceGroupConfig represents Amazon EMR Cluster InstanceGroupConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig.html
type EMRClusterInstanceGroupConfig struct {
	// An automatic scaling policy for a core instance group or task instance
	// group in an Amazon EMR cluster. An automatic scaling policy defines
	// how an instance group dynamically adds and terminates EC2 instances in
	// response to the value of a CloudWatch metric.
	AutoScalingPolicy *EMRClusterAutoScalingPolicy `json:"AutoScalingPolicy,omitempty"`

	// When launching instances as Spot Instances, the bid price in USD for
	// each EC2 instance in the instance group.
	BidPrice *StringExpr `json:"BidPrice,omitempty"`

	// A list of configurations to apply to this instance group. For more
	// information see, Configuring Applications in the Amazon EMR Release
	// Guide.
	Configurations *EMRClusterConfigurationsList `json:"Configurations,omitempty"`

	// Configures Amazon Elastic Block Store (Amazon EBS) storage volumes to
	// attach to your instances.
	EbsConfiguration *EMREbsConfiguration `json:"EbsConfiguration,omitempty"`

	// The number of instances to launch in the instance group.
	InstanceCount *IntegerExpr `json:"InstanceCount,omitempty"`

	// The EC2 instance type for all instances in the instance group. For
	// more information, see Instance Configurations in the Amazon EMR
	// Management Guide.
	InstanceType *StringExpr `json:"InstanceType,omitempty"`

	// The type of marketplace from which your instances are provisioned into
	// this group, either ON_DEMAND or SPOT. For more information, see Amazon
	// EC2 Purchasing Options.
	Market *StringExpr `json:"Market,omitempty"`

	// A name for the instance group.
	Name *StringExpr `json:"Name,omitempty"`
}

// EMRClusterInstanceGroupConfigList represents a list of EMRClusterInstanceGroupConfig
type EMRClusterInstanceGroupConfigList []EMRClusterInstanceGroupConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterInstanceGroupConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterInstanceGroupConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterInstanceGroupConfigList{item}
		return nil
	}
	list := []EMRClusterInstanceGroupConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterInstanceGroupConfigList(list)
		return nil
	}
	return err
}

// EMRClusterInstanceTypeConfig represents Amazon EMR Cluster InstanceTypeConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancetypeconfig.html
type EMRClusterInstanceTypeConfig struct {
	// The bid price for each EC2 Spot Instance type, as defined by
	// InstanceType. BidPrice is expressed in USD. For more information, see
	// InstanceTypeConfig in the Amazon EMR API Reference.
	BidPrice *StringExpr `json:"BidPrice,omitempty"`

	// The bid price, as a percentage of the On-Demand price, for each EC2
	// Spot instance as defined by InstanceType.
	// BidPriceAsPercentageOfOnDemandPriceis expressed as a number. For more
	// information, see InstanceTypeConfig in the Amazon EMR API Reference.
	BidPriceAsPercentageOfOnDemandPrice interface{} `json:"BidPriceAsPercentageOfOnDemandPrice,omitempty"`

	// A configuration classification that applies when provisioning cluster
	// instances. This can include configurations for applications and
	// software that run on the cluster. Duplicates are not allowed.
	Configurations *EMRClusterConfigurationsList `json:"Configurations,omitempty"`

	// The configuration of Amazon Elastic Block Store (Amazon EBS) that is
	// attached to each instance as defined by InstanceType.
	EbsConfiguration *EMREbsConfiguration `json:"EbsConfiguration,omitempty"`

	// An EC2 instance type, such as m3.xlarge. For constraints, see
	// InstanceTypeConfig in the Amazon EMR API Reference.
	InstanceType *StringExpr `json:"InstanceType,omitempty"`

	// The number of units that a provisioned instance of this type provides
	// toward fulfilling the target capacities defined in
	// InstanceFleetConfig. For more information, see InstanceTypeConfig in
	// the Amazon EMR API Reference.
	WeightedCapacity *IntegerExpr `json:"WeightedCapacity,omitempty"`
}

// EMRClusterInstanceTypeConfigList represents a list of EMRClusterInstanceTypeConfig
type EMRClusterInstanceTypeConfigList []EMRClusterInstanceTypeConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterInstanceTypeConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterInstanceTypeConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterInstanceTypeConfigList{item}
		return nil
	}
	list := []EMRClusterInstanceTypeConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterInstanceTypeConfigList(list)
		return nil
	}
	return err
}

// EMRClusterJobFlowInstancesConfig represents Amazon EMR Cluster JobFlowInstancesConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html
type EMRClusterJobFlowInstancesConfig struct {
	// A list of additional EC2 security group IDs to assign to the master
	// instance (master node) in your Amazon EMR cluster. Use this property
	// to supplement the rules specified by the Amazon EMR managed master
	// security group.
	AdditionalMasterSecurityGroups interface{} `json:"AdditionalMasterSecurityGroups,omitempty"`

	// A list of additional EC2 security group IDs to assign to the slave
	// instances (slave nodes) in your Amazon EMR cluster. Use this property
	// to supplement the rules specified by the Amazon EMR managed slave
	// security group.
	AdditionalSlaveSecurityGroups interface{} `json:"AdditionalSlaveSecurityGroups,omitempty"`

	// The instance fleet settings for the core instances in your Amazon EMR
	// cluster. Use this property with the MasterInstanceFleet property.
	CoreInstanceFleet *EMRClusterInstanceFleetConfig `json:"CoreInstanceFleet,omitempty"`

	// The settings for the core instances in your Amazon EMR cluster. Use
	// this property with the MasterInstanceGroup property.
	CoreInstanceGroup *EMRClusterInstanceGroupConfig `json:"CoreInstanceGroup,omitempty"`

	// The name of an Amazon Elastic Compute Cloud (Amazon EC2) key pair,
	// which you can use to access the instances in your Amazon EMR cluster.
	Ec2KeyName *StringExpr `json:"Ec2KeyName,omitempty"`

	// The ID of the subnet where you want to launch your instances.
	Ec2SubnetId *StringExpr `json:"Ec2SubnetId,omitempty"`

	// The ID of an EC2 security group (managed by Amazon EMR) that is
	// assigned to the master instance (master node) in your Amazon EMR
	// cluster.
	EmrManagedMasterSecurityGroup *StringExpr `json:"EmrManagedMasterSecurityGroup,omitempty"`

	// The ID of an EC2 security group (managed by Amazon EMR) that is
	// assigned to the slave instances (slave nodes) in your Amazon EMR
	// cluster.
	EmrManagedSlaveSecurityGroup *StringExpr `json:"EmrManagedSlaveSecurityGroup,omitempty"`

	// The Hadoop version for the job flow. For valid values, see the
	// HadoopVersion parameter in the Amazon EMR API Reference.
	HadoopVersion *StringExpr `json:"HadoopVersion,omitempty"`

	// The instance fleet settings for the master instance (master node).
	MasterInstanceFleet *EMRClusterInstanceFleetConfig `json:"MasterInstanceFleet,omitempty"`

	// The settings for the master instance (master node).
	MasterInstanceGroup *EMRClusterInstanceGroupConfig `json:"MasterInstanceGroup,omitempty"`

	// The Availability Zone (AZ) in which the job flow runs.
	Placement *EMRClusterPlacement `json:"Placement,omitempty"`

	// The ID of the EC2 security group (managed by Amazon EMR) that services
	// use to access clusters in private subnets.
	ServiceAccessSecurityGroup *StringExpr `json:"ServiceAccessSecurityGroup,omitempty"`

	// Indicates whether to prevent the EC2 instances from being terminated
	// by an API call or user intervention. If you want to delete a stack
	// with protected instances, update this value to false before you delete
	// the stack. By default, AWS CloudFormation sets this property to false.
	TerminationProtected *BoolExpr `json:"TerminationProtected,omitempty"`
}

// EMRClusterJobFlowInstancesConfigList represents a list of EMRClusterJobFlowInstancesConfig
type EMRClusterJobFlowInstancesConfigList []EMRClusterJobFlowInstancesConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterJobFlowInstancesConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterJobFlowInstancesConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterJobFlowInstancesConfigList{item}
		return nil
	}
	list := []EMRClusterJobFlowInstancesConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterJobFlowInstancesConfigList(list)
		return nil
	}
	return err
}

// EMRClusterMetricDimension represents Amazon EMR Cluster MetricDimension
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig-autoscalingpolicy-constraints-scalingrule-scalingtrigger-cloudwatchalarmdefinition-metricdimension.html
type EMRClusterMetricDimension struct {
	// The dimension name.
	Key *StringExpr `json:"Key,omitempty"`

	// The dimension value.
	Value *StringExpr `json:"Value,omitempty"`
}

// EMRClusterMetricDimensionList represents a list of EMRClusterMetricDimension
type EMRClusterMetricDimensionList []EMRClusterMetricDimension

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterMetricDimensionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterMetricDimension{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterMetricDimensionList{item}
		return nil
	}
	list := []EMRClusterMetricDimension{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterMetricDimensionList(list)
		return nil
	}
	return err
}

// EMRClusterPlacement represents Amazon EMR Cluster PlacementType
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-placementtype.html
type EMRClusterPlacement struct {
	// The Amazon Elastic Compute Cloud (Amazon EC2) AZ for the job flow. For
	// more information, see
	// http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
	// in the Amazon EC2 User Guide for Linux Instances.
	AvailabilityZone *StringExpr `json:"AvailabilityZone,omitempty"`
}

// EMRClusterPlacementList represents a list of EMRClusterPlacement
type EMRClusterPlacementList []EMRClusterPlacement

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterPlacementList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterPlacement{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterPlacementList{item}
		return nil
	}
	list := []EMRClusterPlacement{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterPlacementList(list)
		return nil
	}
	return err
}

// EMRClusterScalingAction represents Amazon EMR Cluster ScalingAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingaction.html
type EMRClusterScalingAction struct {
	// Not available for instance groups. Instance groups use the market type
	// specified for the group.
	Market *StringExpr `json:"Market,omitempty"`

	// The type of adjustment the automatic scaling activity makes when
	// triggered, and the periodicity of the adjustment.
	SimpleScalingPolicyConfiguration *EMRClusterSimpleScalingPolicyConfiguration `json:"SimpleScalingPolicyConfiguration,omitempty"`
}

// EMRClusterScalingActionList represents a list of EMRClusterScalingAction
type EMRClusterScalingActionList []EMRClusterScalingAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterScalingActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterScalingAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterScalingActionList{item}
		return nil
	}
	list := []EMRClusterScalingAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterScalingActionList(list)
		return nil
	}
	return err
}

// EMRClusterScalingConstraints represents Amazon EMR Cluster ScalingConstraints
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig-autoscalingpolicy-constraints-scalingconstraints.html
type EMRClusterScalingConstraints struct {
	// The upper boundary of EC2 instances in an instance group beyond which
	// scaling activities are not allowed to grow. Scale-out activities will
	// not add instances beyond this boundary.
	MaxCapacity *IntegerExpr `json:"MaxCapacity,omitempty"`

	// The lower boundary of EC2 instances in an instance group below which
	// scaling activities are not allowed to shrink. Scale-in activities will
	// not terminate instances below this boundary.
	MinCapacity *IntegerExpr `json:"MinCapacity,omitempty"`
}

// EMRClusterScalingConstraintsList represents a list of EMRClusterScalingConstraints
type EMRClusterScalingConstraintsList []EMRClusterScalingConstraints

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterScalingConstraintsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterScalingConstraints{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterScalingConstraintsList{item}
		return nil
	}
	list := []EMRClusterScalingConstraints{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterScalingConstraintsList(list)
		return nil
	}
	return err
}

// EMRClusterScalingRule represents Amazon EMR Cluster ScalingRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig-autoscalingpolicy-constraints-scalingrule.html
type EMRClusterScalingRule struct {
	// The conditions that trigger an automatic scaling activity.
	Action interface{} `json:"Action,omitempty"`

	// A friendly, more verbose description of the automatic scaling rule.
	Description *StringExpr `json:"Description,omitempty"`

	// The name used to identify an automatic scaling rule. Rule names must
	// be unique within a scaling policy.
	Name *StringExpr `json:"Name,omitempty"`

	// The CloudWatch alarm definition that determines when automatic scaling
	// activity is triggered.
	Trigger interface{} `json:"Trigger,omitempty"`
}

// EMRClusterScalingRuleList represents a list of EMRClusterScalingRule
type EMRClusterScalingRuleList []EMRClusterScalingRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterScalingRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterScalingRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterScalingRuleList{item}
		return nil
	}
	list := []EMRClusterScalingRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterScalingRuleList(list)
		return nil
	}
	return err
}

// EMRClusterScalingTrigger represents Amazon EMR Cluster ScalingTrigger
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingtrigger.html
type EMRClusterScalingTrigger struct {
	// The definition of a CloudWatch metric alarm. When the defined alarm
	// conditions are met along with other trigger parameters, scaling
	// activity begins.
	CloudWatchAlarmDefinition *EMRClusterCloudWatchAlarmDefinition `json:"CloudWatchAlarmDefinition,omitempty"`
}

// EMRClusterScalingTriggerList represents a list of EMRClusterScalingTrigger
type EMRClusterScalingTriggerList []EMRClusterScalingTrigger

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterScalingTriggerList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterScalingTrigger{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterScalingTriggerList{item}
		return nil
	}
	list := []EMRClusterScalingTrigger{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterScalingTriggerList(list)
		return nil
	}
	return err
}

// EMRClusterScriptBootstrapActionConfig represents Amazon EMR Cluster ScriptBootstrapActionConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig.html
type EMRClusterScriptBootstrapActionConfig struct {
	// A list of command line arguments to pass to the bootstrap action
	// script.
	Args interface{} `json:"Args,omitempty"`

	// The location of the script that Amazon EMR runs during a bootstrap
	// action. Specify a location in an S3 bucket or your local file system.
	Path *StringExpr `json:"Path,omitempty"`
}

// EMRClusterScriptBootstrapActionConfigList represents a list of EMRClusterScriptBootstrapActionConfig
type EMRClusterScriptBootstrapActionConfigList []EMRClusterScriptBootstrapActionConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterScriptBootstrapActionConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterScriptBootstrapActionConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterScriptBootstrapActionConfigList{item}
		return nil
	}
	list := []EMRClusterScriptBootstrapActionConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterScriptBootstrapActionConfigList(list)
		return nil
	}
	return err
}

// EMRClusterSimpleScalingPolicyConfiguration represents Amazon EMR Cluster SimpleScalingPolicyConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-simplescalingpolicyconfiguration.html
type EMRClusterSimpleScalingPolicyConfiguration struct {
	// The way in which Amazon EC2 instances are added (if ScalingAdjustment
	// is a positive number) or terminated (if ScalingAdjustment is a
	// negative number) each time the scaling activity is triggered.
	// CHANGE_IN_CAPACITY is the default.
	AdjustmentType *StringExpr `json:"AdjustmentType,omitempty"`

	// The amount of time, in seconds, after a scaling activity completes
	// before any further trigger-related scaling activities can start. The
	// default value is 0.
	CoolDown *IntegerExpr `json:"CoolDown,omitempty"`

	// The amount by which to scale in or scale out, based on the specified
	// AdjustmentType. A positive value adds to the instance group's Amazon
	// EC2 instance count while a negative number removes instances. If
	// AdjustmentType is set to EXACT_CAPACITY, the number should only be a
	// positive integer. If AdjustmentType is set to
	// PERCENT_CHANGE_IN_CAPACITY, the value should express the percentage as
	// a decimal.
	ScalingAdjustment *IntegerExpr `json:"ScalingAdjustment,omitempty"`
}

// EMRClusterSimpleScalingPolicyConfigurationList represents a list of EMRClusterSimpleScalingPolicyConfiguration
type EMRClusterSimpleScalingPolicyConfigurationList []EMRClusterSimpleScalingPolicyConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterSimpleScalingPolicyConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterSimpleScalingPolicyConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterSimpleScalingPolicyConfigurationList{item}
		return nil
	}
	list := []EMRClusterSimpleScalingPolicyConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterSimpleScalingPolicyConfigurationList(list)
		return nil
	}
	return err
}

// EMRClusterSpotProvisioningSpecification represents Amazon EMR Cluster SpotProvisioningSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-spotprovisioningspecification.html
type EMRClusterSpotProvisioningSpecification struct {
	// The defined duration for Spot instances (also known as Spot blocks) in
	// minutes. For more information, see SpotProvisioningSpecification in
	// the Amazon EMR API Reference.
	BlockDurationMinutes *IntegerExpr `json:"BlockDurationMinutes,omitempty"`

	// The action to take when TargetSpotCapacity has not been fulfilled when
	// the TimeoutDurationMinutes has expired. For more information, see
	// SpotProvisioningSpecification in the Amazon EMR API Reference.
	TimeoutAction *StringExpr `json:"TimeoutAction,omitempty"`

	// The spot provisioning timeout period in minutes. For more information,
	// see SpotProvisioningSpecification in the Amazon EMR API Reference.
	TimeoutDurationMinutes *IntegerExpr `json:"TimeoutDurationMinutes,omitempty"`
}

// EMRClusterSpotProvisioningSpecificationList represents a list of EMRClusterSpotProvisioningSpecification
type EMRClusterSpotProvisioningSpecificationList []EMRClusterSpotProvisioningSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRClusterSpotProvisioningSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRClusterSpotProvisioningSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRClusterSpotProvisioningSpecificationList{item}
		return nil
	}
	list := []EMRClusterSpotProvisioningSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRClusterSpotProvisioningSpecificationList(list)
		return nil
	}
	return err
}

// EMREbsConfiguration represents Amazon EMR EbsConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration.html
type EMREbsConfiguration struct {
	// Configures the block storage devices that are associated with your EMR
	// instances.
	EbsBlockDeviceConfigs *EMREbsConfigurationEbsBlockDeviceConfigsList `json:"EbsBlockDeviceConfigs,omitempty"`

	// Indicates whether the instances are optimized for Amazon EBS I/O. This
	// optimization provides dedicated throughput to Amazon EBS and an
	// optimized configuration stack to provide optimal EBS I/O performance.
	// For more information about fees and supported instance types, see
	// EBS-Optimized Instances in the Amazon EC2 User Guide for Linux
	// Instances.
	EbsOptimized *BoolExpr `json:"EbsOptimized,omitempty"`
}

// EMREbsConfigurationList represents a list of EMREbsConfiguration
type EMREbsConfigurationList []EMREbsConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMREbsConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMREbsConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMREbsConfigurationList{item}
		return nil
	}
	list := []EMREbsConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMREbsConfigurationList(list)
		return nil
	}
	return err
}

// EMREbsConfigurationEbsBlockDeviceConfigs represents Amazon EMR EbsConfiguration EbsBlockDeviceConfigs
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig.html
type EMREbsConfigurationEbsBlockDeviceConfigs struct {
	// The settings for the Amazon EBS volumes.
	VolumeSpecification *EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecification `json:"VolumeSpecification,omitempty"`

	// The number of Amazon EBS volumes that you want to create for each
	// instance in the EMR cluster or instance group. The number cannot be 0.
	VolumesPerInstance *IntegerExpr `json:"VolumesPerInstance,omitempty"`
}

// EMREbsConfigurationEbsBlockDeviceConfigsList represents a list of EMREbsConfigurationEbsBlockDeviceConfigs
type EMREbsConfigurationEbsBlockDeviceConfigsList []EMREbsConfigurationEbsBlockDeviceConfigs

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMREbsConfigurationEbsBlockDeviceConfigsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMREbsConfigurationEbsBlockDeviceConfigs{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMREbsConfigurationEbsBlockDeviceConfigsList{item}
		return nil
	}
	list := []EMREbsConfigurationEbsBlockDeviceConfigs{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMREbsConfigurationEbsBlockDeviceConfigsList(list)
		return nil
	}
	return err
}

// EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecification represents Amazon EMR EbsConfiguration EbsBlockDeviceConfig VolumeSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification.html
type EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecification struct {
	// The number of I/O operations per second (IOPS) that the volume
	// supports. For more information, see Iops for the EbsBlockDevice action
	// in the Amazon EC2 API Reference.
	Iops *IntegerExpr `json:"Iops,omitempty"`

	// The volume size, in Gibibytes (GiB). For more information about
	// specifying the volume size, see VolumeSize for the EbsBlockDevice
	// action in the Amazon EC2 API Reference.
	SizeInGB *IntegerExpr `json:"SizeInGB,omitempty"`

	// The volume type, such as standard or io1. For more information about
	// specifying the volume type, see VolumeType for the EbsBlockDevice
	// action in the Amazon EC2 API Reference.
	VolumeType *StringExpr `json:"VolumeType,omitempty"`
}

// EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecificationList represents a list of EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecification
type EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecificationList []EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecificationList{item}
		return nil
	}
	list := []EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMREbsConfigurationEbsBlockDeviceConfigVolumeSpecificationList(list)
		return nil
	}
	return err
}

// EMRInstanceFleetConfigConfiguration represents Amazon EMR InstanceFleetConfig Configuration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-configuration.html
type EMRInstanceFleetConfigConfiguration struct {
	// The application-specific configuration file.
	Classification *StringExpr `json:"Classification,omitempty"`

	// Within a configuration classification, a set of properties that
	// represent the settings that you want to change in the configuration
	// file. Duplicates not allowed.
	ConfigurationProperties *StringExpr `json:"ConfigurationProperties,omitempty"`

	// The list of additional configurations to apply within a configuration
	// object. Duplicates not allowed.
	Configurations *EMRInstanceFleetConfigConfigurationList `json:"Configurations,omitempty"`
}

// EMRInstanceFleetConfigConfigurationList represents a list of EMRInstanceFleetConfigConfiguration
type EMRInstanceFleetConfigConfigurationList []EMRInstanceFleetConfigConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceFleetConfigConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceFleetConfigConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceFleetConfigConfigurationList{item}
		return nil
	}
	list := []EMRInstanceFleetConfigConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceFleetConfigConfigurationList(list)
		return nil
	}
	return err
}

// EMRInstanceFleetConfigEbsBlockDeviceConfig represents Amazon EMR InstanceFleetConfig EbsBlockDeviceConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-ebsblockdeviceconfig.html
type EMRInstanceFleetConfigEbsBlockDeviceConfig struct {
	// Amazon EBS volume specifications, such as volume type, IOPS, and size
	// (GiB), for the EBS volume attached to an EC2 instance in the fleet.
	VolumeSpecification *EMRInstanceFleetConfigVolumeSpecification `json:"VolumeSpecification,omitempty"`

	// The number of Amazon EBS volumes with a specific volume configuration
	// that are associated with every instance in the fleet.
	VolumesPerInstance *IntegerExpr `json:"VolumesPerInstance,omitempty"`
}

// EMRInstanceFleetConfigEbsBlockDeviceConfigList represents a list of EMRInstanceFleetConfigEbsBlockDeviceConfig
type EMRInstanceFleetConfigEbsBlockDeviceConfigList []EMRInstanceFleetConfigEbsBlockDeviceConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceFleetConfigEbsBlockDeviceConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceFleetConfigEbsBlockDeviceConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceFleetConfigEbsBlockDeviceConfigList{item}
		return nil
	}
	list := []EMRInstanceFleetConfigEbsBlockDeviceConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceFleetConfigEbsBlockDeviceConfigList(list)
		return nil
	}
	return err
}

// EMRInstanceFleetConfigEbsConfiguration represents Amazon EMR InstanceFleetConfig EbsConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-ebsconfiguration.html
type EMRInstanceFleetConfigEbsConfiguration struct {
	// A list of Amazon EBS volume specifications that are attached to an
	// instance. Duplicates not allowed.
	EbsBlockDeviceConfigs *EMRInstanceFleetConfigEbsBlockDeviceConfigList `json:"EbsBlockDeviceConfigs,omitempty"`

	// Indicates whether an Amazon EBS volume is EBS-optimized.
	EbsOptimized *BoolExpr `json:"EbsOptimized,omitempty"`
}

// EMRInstanceFleetConfigEbsConfigurationList represents a list of EMRInstanceFleetConfigEbsConfiguration
type EMRInstanceFleetConfigEbsConfigurationList []EMRInstanceFleetConfigEbsConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceFleetConfigEbsConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceFleetConfigEbsConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceFleetConfigEbsConfigurationList{item}
		return nil
	}
	list := []EMRInstanceFleetConfigEbsConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceFleetConfigEbsConfigurationList(list)
		return nil
	}
	return err
}

// EMRInstanceFleetConfigInstanceFleetProvisioningSpecifications represents Amazon EMR InstanceFleetConfig InstanceFleetProvisioningSpecifications
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancefleetprovisioningspecifications.html
type EMRInstanceFleetConfigInstanceFleetProvisioningSpecifications struct {
	// The launch specification for Spot Instances in the fleet. This
	// determines the defined duration and provisioning timeout behavior.
	SpotSpecification *EMRInstanceFleetConfigSpotProvisioningSpecification `json:"SpotSpecification,omitempty"`
}

// EMRInstanceFleetConfigInstanceFleetProvisioningSpecificationsList represents a list of EMRInstanceFleetConfigInstanceFleetProvisioningSpecifications
type EMRInstanceFleetConfigInstanceFleetProvisioningSpecificationsList []EMRInstanceFleetConfigInstanceFleetProvisioningSpecifications

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceFleetConfigInstanceFleetProvisioningSpecificationsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceFleetConfigInstanceFleetProvisioningSpecifications{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceFleetConfigInstanceFleetProvisioningSpecificationsList{item}
		return nil
	}
	list := []EMRInstanceFleetConfigInstanceFleetProvisioningSpecifications{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceFleetConfigInstanceFleetProvisioningSpecificationsList(list)
		return nil
	}
	return err
}

// EMRInstanceFleetConfigInstanceTypeConfig represents Amazon EMR InstanceFleetConfig InstanceTypeConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancetypeconfig.html
type EMRInstanceFleetConfigInstanceTypeConfig struct {
	// The bid price for each EC2 Spot Instance type as defined by
	// InstanceType. BidPrice is expressed in USD. For more information, see
	// InstanceTypeConfig in the Amazon EMR API Reference.
	BidPrice *StringExpr `json:"BidPrice,omitempty"`

	// The bid price, as a percentage of the On-Demand price, for each EC2
	// Spot Instance as defined by InstanceType.
	// BidPriceAsPercentageOfOnDemandPrice is expressed as a number. For more
	// information, see InstanceTypeConfig in the Amazon EMR API Reference.
	BidPriceAsPercentageOfOnDemandPrice interface{} `json:"BidPriceAsPercentageOfOnDemandPrice,omitempty"`

	// A configuration classification that applies when provisioning cluster
	// instances. You can use this property to configure applications and
	// software that run on the cluster. Duplicates are not allowed.
	Configurations *EMRInstanceFleetConfigConfigurationList `json:"Configurations,omitempty"`

	// The configuration of Amazon Elastic Block Store (Amazon EBS) that is
	// attached to each instance as defined by InstanceType.
	EbsConfiguration *EMRInstanceFleetConfigEbsConfiguration `json:"EbsConfiguration,omitempty"`

	// An EC2 instance type, such as m3.xlarge. For constraints, see
	// InstanceTypeConfig in the Amazon EMR API Reference.
	InstanceType *StringExpr `json:"InstanceType,omitempty"`

	// The number of units that a provisioned instance of this type provides
	// toward fulfilling the target capacities defined in
	// InstanceFleetConfig. For more information, see InstanceTypeConfig in
	// the Amazon EMR API Reference.
	WeightedCapacity *IntegerExpr `json:"WeightedCapacity,omitempty"`
}

// EMRInstanceFleetConfigInstanceTypeConfigList represents a list of EMRInstanceFleetConfigInstanceTypeConfig
type EMRInstanceFleetConfigInstanceTypeConfigList []EMRInstanceFleetConfigInstanceTypeConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceFleetConfigInstanceTypeConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceFleetConfigInstanceTypeConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceFleetConfigInstanceTypeConfigList{item}
		return nil
	}
	list := []EMRInstanceFleetConfigInstanceTypeConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceFleetConfigInstanceTypeConfigList(list)
		return nil
	}
	return err
}

// EMRInstanceFleetConfigSpotProvisioningSpecification represents Amazon EMR InstanceFleetConfig SpotProvisioningSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-spotprovisioningspecification.html
type EMRInstanceFleetConfigSpotProvisioningSpecification struct {
	// The defined duration for Spot Instances (also known as Spot blocks) in
	// minutes. For more information, see SpotProvisioningSpecification in
	// the Amazon EMR API Reference.
	BlockDurationMinutes *IntegerExpr `json:"BlockDurationMinutes,omitempty"`

	// The action to take when the capacity for the target Spot Instance, as
	// specified in TargetSpotCapacity, has not been fulfilled before the
	// time specified in TimeoutDurationMinutes has expired. For more
	// information, see SpotProvisioningSpecification in the Amazon EMR API
	// Reference.
	TimeoutAction *StringExpr `json:"TimeoutAction,omitempty"`

	// The timeout period for spot provisioning, in minutes. For more
	// information, see SpotProvisioningSpecification in the Amazon EMR API
	// Reference.
	TimeoutDurationMinutes *IntegerExpr `json:"TimeoutDurationMinutes,omitempty"`
}

// EMRInstanceFleetConfigSpotProvisioningSpecificationList represents a list of EMRInstanceFleetConfigSpotProvisioningSpecification
type EMRInstanceFleetConfigSpotProvisioningSpecificationList []EMRInstanceFleetConfigSpotProvisioningSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceFleetConfigSpotProvisioningSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceFleetConfigSpotProvisioningSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceFleetConfigSpotProvisioningSpecificationList{item}
		return nil
	}
	list := []EMRInstanceFleetConfigSpotProvisioningSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceFleetConfigSpotProvisioningSpecificationList(list)
		return nil
	}
	return err
}

// EMRInstanceFleetConfigVolumeSpecification represents Amazon EMR InstanceFleetConfig VolumeSpecification
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-volumespecification.html
type EMRInstanceFleetConfigVolumeSpecification struct {
	// The number of I/O operations per second (IOPS) that the volume
	// supports.
	Iops *IntegerExpr `json:"Iops,omitempty"`

	// The volume size, in gibibytes (GiB). For valid values, see
	// VolumeSpecification in the Amazon EMR API Reference.
	SizeInGB *IntegerExpr `json:"SizeInGB,omitempty"`

	// The volume type. For valid values, see VolumeSpecification in the
	// Amazon EMR API Reference.
	VolumeType *StringExpr `json:"VolumeType,omitempty"`
}

// EMRInstanceFleetConfigVolumeSpecificationList represents a list of EMRInstanceFleetConfigVolumeSpecification
type EMRInstanceFleetConfigVolumeSpecificationList []EMRInstanceFleetConfigVolumeSpecification

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceFleetConfigVolumeSpecificationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceFleetConfigVolumeSpecification{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceFleetConfigVolumeSpecificationList{item}
		return nil
	}
	list := []EMRInstanceFleetConfigVolumeSpecification{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceFleetConfigVolumeSpecificationList(list)
		return nil
	}
	return err
}

// EMRInstanceGroupConfigAutoScalingPolicy represents Amazon EMR InstanceGroupConfig AutoScalingPolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-autoscalingpolicy.html
type EMRInstanceGroupConfigAutoScalingPolicy struct {
	// The upper and lower Amazon EC2 instance limits for an automatic
	// scaling policy. Automatic scaling activity doesn't cause an instance
	// group to grow above or below these limits.
	Constraints *EMRInstanceGroupConfigScalingConstraints `json:"Constraints,omitempty"`

	// The scale-in and scale-out rules that compose the automatic scaling
	// policy.
	Rules *EMRInstanceGroupConfigScalingRuleList `json:"Rules,omitempty"`
}

// EMRInstanceGroupConfigAutoScalingPolicyList represents a list of EMRInstanceGroupConfigAutoScalingPolicy
type EMRInstanceGroupConfigAutoScalingPolicyList []EMRInstanceGroupConfigAutoScalingPolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceGroupConfigAutoScalingPolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceGroupConfigAutoScalingPolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceGroupConfigAutoScalingPolicyList{item}
		return nil
	}
	list := []EMRInstanceGroupConfigAutoScalingPolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceGroupConfigAutoScalingPolicyList(list)
		return nil
	}
	return err
}

// EMRInstanceGroupConfigCloudWatchAlarmDefinition represents Amazon EMR InstanceGroupConfig CloudWatchAlarmDefinition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html
type EMRInstanceGroupConfigCloudWatchAlarmDefinition struct {
	// Determines how the metric specified by MetricName is compared to the
	// value specified by Threshold.
	ComparisonOperator *StringExpr `json:"ComparisonOperator,omitempty"`

	// A list of CloudWatch metric dimensions.
	Dimensions *EMRInstanceGroupConfigMetricDimensionList `json:"Dimensions,omitempty"`

	// The number of periods, expressed in seconds using the Period property,
	// during which the alarm condition must exist before the alarm triggers
	// automatic scaling activity. The default value is 1.
	EvaluationPeriods *IntegerExpr `json:"EvaluationPeriods,omitempty"`

	// The name of the CloudWatch metric that is watched to determine an
	// alarm condition.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// The namespace for the CloudWatch metric. The default is
	// AWS/ElasticMapReduce.
	Namespace *StringExpr `json:"Namespace,omitempty"`

	// The period, in seconds, over which the statistic for applying the
	// metric associated with the alarm is applied. You specify the statistic
	// in the Statistic property. CloudWatch metrics for Amazon EMR are
	// emitted every five minutes (300 seconds). If you specify a CloudWatch
	// metric for Amazon EMR, specify 300.
	Period *IntegerExpr `json:"Period,omitempty"`

	// The statistic to apply to the metric associated with the alarm. The
	// default is AVERAGE.
	Statistic *StringExpr `json:"Statistic,omitempty"`

	// The value against which the specified statistic is compared.
	Threshold interface{} `json:"Threshold,omitempty"`

	// The unit of measure associated with the CloudWatch metric being
	// watched. Specify the unit specified in the CloudWatch metric.
	Unit *StringExpr `json:"Unit,omitempty"`
}

// EMRInstanceGroupConfigCloudWatchAlarmDefinitionList represents a list of EMRInstanceGroupConfigCloudWatchAlarmDefinition
type EMRInstanceGroupConfigCloudWatchAlarmDefinitionList []EMRInstanceGroupConfigCloudWatchAlarmDefinition

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceGroupConfigCloudWatchAlarmDefinitionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceGroupConfigCloudWatchAlarmDefinition{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceGroupConfigCloudWatchAlarmDefinitionList{item}
		return nil
	}
	list := []EMRInstanceGroupConfigCloudWatchAlarmDefinition{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceGroupConfigCloudWatchAlarmDefinitionList(list)
		return nil
	}
	return err
}

// EMRInstanceGroupConfigMetricDimension represents Amazon EMR InstanceGroupConfig MetricDimension
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-metricdimension.html
type EMRInstanceGroupConfigMetricDimension struct {
	// The dimension name.
	Key *StringExpr `json:"Key,omitempty"`

	// The dimension value.
	Value *StringExpr `json:"Value,omitempty"`
}

// EMRInstanceGroupConfigMetricDimensionList represents a list of EMRInstanceGroupConfigMetricDimension
type EMRInstanceGroupConfigMetricDimensionList []EMRInstanceGroupConfigMetricDimension

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceGroupConfigMetricDimensionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceGroupConfigMetricDimension{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceGroupConfigMetricDimensionList{item}
		return nil
	}
	list := []EMRInstanceGroupConfigMetricDimension{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceGroupConfigMetricDimensionList(list)
		return nil
	}
	return err
}

// EMRInstanceGroupConfigScalingAction represents Amazon EMR InstanceGroupConfig ScalingAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingaction.html
type EMRInstanceGroupConfigScalingAction struct {
	// Not available for instance groups. Instance groups use the market type
	// specified for the group.
	Market *StringExpr `json:"Market,omitempty"`

	// The type of adjustment that the automatic scaling activity makes when
	// triggered, and the periodicity of the adjustment.
	SimpleScalingPolicyConfiguration *EMRInstanceGroupConfigSimpleScalingPolicyConfiguration `json:"SimpleScalingPolicyConfiguration,omitempty"`
}

// EMRInstanceGroupConfigScalingActionList represents a list of EMRInstanceGroupConfigScalingAction
type EMRInstanceGroupConfigScalingActionList []EMRInstanceGroupConfigScalingAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceGroupConfigScalingActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceGroupConfigScalingAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceGroupConfigScalingActionList{item}
		return nil
	}
	list := []EMRInstanceGroupConfigScalingAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceGroupConfigScalingActionList(list)
		return nil
	}
	return err
}

// EMRInstanceGroupConfigScalingConstraints represents Amazon EMR InstanceGroupConfig ScalingConstraints
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingconstraints.html
type EMRInstanceGroupConfigScalingConstraints struct {
	// For autoscaling, the maximum number of EC2 instances in an instance
	// group. Scale-out activities add instances only up to this boundary.
	MaxCapacity *IntegerExpr `json:"MaxCapacity,omitempty"`

	// For autoscaling, the minimum number of EC2 instances in an instance
	// group. Scale-in activities do not terminate instances below this
	// boundary.
	MinCapacity *IntegerExpr `json:"MinCapacity,omitempty"`
}

// EMRInstanceGroupConfigScalingConstraintsList represents a list of EMRInstanceGroupConfigScalingConstraints
type EMRInstanceGroupConfigScalingConstraintsList []EMRInstanceGroupConfigScalingConstraints

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceGroupConfigScalingConstraintsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceGroupConfigScalingConstraints{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceGroupConfigScalingConstraintsList{item}
		return nil
	}
	list := []EMRInstanceGroupConfigScalingConstraints{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceGroupConfigScalingConstraintsList(list)
		return nil
	}
	return err
}

// EMRInstanceGroupConfigScalingRule represents Amazon EMR InstanceGroupConfig ScalingRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingrule.html
type EMRInstanceGroupConfigScalingRule struct {
	// The conditions that trigger an automatic scaling activity.
	Action *EMRInstanceGroupConfigScalingAction `json:"Action,omitempty"`

	// A friendly, more verbose description of the automatic scaling rule.
	Description *StringExpr `json:"Description,omitempty"`

	// The identifier of the automatic scaling rule. Rule names must be
	// unique within a scaling policy.
	Name *StringExpr `json:"Name,omitempty"`

	// The CloudWatch alarm definition that determines when automatic scaling
	// activity is triggered.
	Trigger *EMRInstanceGroupConfigScalingTrigger `json:"Trigger,omitempty"`
}

// EMRInstanceGroupConfigScalingRuleList represents a list of EMRInstanceGroupConfigScalingRule
type EMRInstanceGroupConfigScalingRuleList []EMRInstanceGroupConfigScalingRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceGroupConfigScalingRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceGroupConfigScalingRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceGroupConfigScalingRuleList{item}
		return nil
	}
	list := []EMRInstanceGroupConfigScalingRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceGroupConfigScalingRuleList(list)
		return nil
	}
	return err
}

// EMRInstanceGroupConfigScalingTrigger represents Amazon EMR InstanceGroupConfig ScalingTrigger
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingtrigger.html
type EMRInstanceGroupConfigScalingTrigger struct {
	// The definition of a CloudWatch metric alarm. When the defined alarm
	// conditions are met along with other trigger parameters, scaling
	// activity begins.
	CloudWatchAlarmDefinition *EMRInstanceGroupConfigCloudWatchAlarmDefinition `json:"CloudWatchAlarmDefinition,omitempty"`
}

// EMRInstanceGroupConfigScalingTriggerList represents a list of EMRInstanceGroupConfigScalingTrigger
type EMRInstanceGroupConfigScalingTriggerList []EMRInstanceGroupConfigScalingTrigger

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceGroupConfigScalingTriggerList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceGroupConfigScalingTrigger{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceGroupConfigScalingTriggerList{item}
		return nil
	}
	list := []EMRInstanceGroupConfigScalingTrigger{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceGroupConfigScalingTriggerList(list)
		return nil
	}
	return err
}

// EMRInstanceGroupConfigSimpleScalingPolicyConfiguration represents Amazon EMR InstanceGroupConfig SimpleScalingPolicyConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-simplescalingpolicyconfiguration.html
type EMRInstanceGroupConfigSimpleScalingPolicyConfiguration struct {
	// The way in which EC2 instances are added (if ScalingAdjustment is a
	// positive number) or terminated (if ScalingAdjustment is a negative
	// number) when the scaling activity is triggered. CHANGE_IN_CAPACITY is
	// the default value.
	AdjustmentType *StringExpr `json:"AdjustmentType,omitempty"`

	// The amount of time, in seconds, after a scaling activity completes
	// before any further trigger-related scaling activities can start. The
	// default value is 0.
	CoolDown *IntegerExpr `json:"CoolDown,omitempty"`

	// The amount by which to scale the instance group, based on the
	// specified AdjustmentType. A positive value adds to the instance
	// group's EC2 instance count. A negative number removes instances. If
	// AdjustmentType is set to EXACT_CAPACITY, specify only a positive
	// integer. If AdjustmentType is set to PERCENT_CHANGE_IN_CAPACITY,
	// express the value of the percentage as a decimal. For example, -0.20
	// indicates a decrease in 20% increments of cluster capacity.
	ScalingAdjustment *IntegerExpr `json:"ScalingAdjustment,omitempty"`
}

// EMRInstanceGroupConfigSimpleScalingPolicyConfigurationList represents a list of EMRInstanceGroupConfigSimpleScalingPolicyConfiguration
type EMRInstanceGroupConfigSimpleScalingPolicyConfigurationList []EMRInstanceGroupConfigSimpleScalingPolicyConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRInstanceGroupConfigSimpleScalingPolicyConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRInstanceGroupConfigSimpleScalingPolicyConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRInstanceGroupConfigSimpleScalingPolicyConfigurationList{item}
		return nil
	}
	list := []EMRInstanceGroupConfigSimpleScalingPolicyConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRInstanceGroupConfigSimpleScalingPolicyConfigurationList(list)
		return nil
	}
	return err
}

// EMRStepHadoopJarStepConfig represents Amazon EMR Step HadoopJarStepConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-step-hadoopjarstepconfig.html
type EMRStepHadoopJarStepConfig struct {
	// A list of command line arguments passed to the JAR file's main
	// function when the function is executed.
	Args interface{} `json:"Args,omitempty"`

	// A path to the JAR file that Amazon EMR runs for the job flow step.
	Jar *StringExpr `json:"Jar,omitempty"`

	// The name of the main class in the specified JAR file. If you don't
	// specify a value, you must specify a main class in the JAR file's
	// manifest file.
	MainClass *StringExpr `json:"MainClass,omitempty"`

	// A list of Java properties that are set when the job flow step runs.
	// You can use these properties to pass key-value pairs to your main
	// function in the JAR file.
	StepProperties *EMRStepKeyValueList `json:"StepProperties,omitempty"`
}

// EMRStepHadoopJarStepConfigList represents a list of EMRStepHadoopJarStepConfig
type EMRStepHadoopJarStepConfigList []EMRStepHadoopJarStepConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRStepHadoopJarStepConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRStepHadoopJarStepConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRStepHadoopJarStepConfigList{item}
		return nil
	}
	list := []EMRStepHadoopJarStepConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRStepHadoopJarStepConfigList(list)
		return nil
	}
	return err
}

// EMRStepKeyValue represents Amazon EMR Step KeyValue
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-step-hadoopjarstepconfig-keyvalue.html
type EMRStepKeyValue struct {
	// The unique identifier of a key-value pair.
	Key *StringExpr `json:"Key,omitempty"`

	// The value part of the identified key.
	Value *StringExpr `json:"Value,omitempty"`
}

// EMRStepKeyValueList represents a list of EMRStepKeyValue
type EMRStepKeyValueList []EMRStepKeyValue

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EMRStepKeyValueList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EMRStepKeyValue{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EMRStepKeyValueList{item}
		return nil
	}
	list := []EMRStepKeyValue{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EMRStepKeyValueList(list)
		return nil
	}
	return err
}

// GameLiftAliasRoutingStrategy represents Amazon GameLift Alias RoutingStrategy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-alias-routingstrategy.html
type GameLiftAliasRoutingStrategy struct {
	// A unique identifier of a GameLift fleet to associate with the alias.
	FleetId *StringExpr `json:"FleetId,omitempty"`

	// A text message that GameLift displays for the Terminal routing type.
	Message *StringExpr `json:"Message,omitempty"`

	// The type of routing strategy. For the SIMPLE type, traffic is routed
	// to an active GameLift fleet. For the Terminal type, GameLift returns
	// an exception with the message that you specified in the Message
	// property.
	Type *StringExpr `json:"Type,omitempty"`
}

// GameLiftAliasRoutingStrategyList represents a list of GameLiftAliasRoutingStrategy
type GameLiftAliasRoutingStrategyList []GameLiftAliasRoutingStrategy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GameLiftAliasRoutingStrategyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GameLiftAliasRoutingStrategy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GameLiftAliasRoutingStrategyList{item}
		return nil
	}
	list := []GameLiftAliasRoutingStrategy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GameLiftAliasRoutingStrategyList(list)
		return nil
	}
	return err
}

// GameLiftBuildStorageLocation represents Amazon GameLift Build StorageLocation
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-build-storagelocation.html
type GameLiftBuildStorageLocation struct {
	// The S3 bucket where the GameLift build package files are stored.
	Bucket *StringExpr `json:"Bucket,omitempty"`

	// The prefix (folder name) where the GameLift build package files are
	// located.
	Key *StringExpr `json:"Key,omitempty"`

	// An AWS Identity and Access Management (IAM) role Amazon Resource Name
	// (ARN) that GameLift can assume to retrieve the build package files
	// from Amazon Simple Storage Service (Amazon S3).
	RoleArn *StringExpr `json:"RoleArn,omitempty"`
}

// GameLiftBuildStorageLocationList represents a list of GameLiftBuildStorageLocation
type GameLiftBuildStorageLocationList []GameLiftBuildStorageLocation

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GameLiftBuildStorageLocationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GameLiftBuildStorageLocation{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GameLiftBuildStorageLocationList{item}
		return nil
	}
	list := []GameLiftBuildStorageLocation{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GameLiftBuildStorageLocationList(list)
		return nil
	}
	return err
}

// GameLiftFleetEC2InboundPermission represents Amazon GameLift Fleet EC2InboundPermission
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-ec2inboundpermission.html
type GameLiftFleetEC2InboundPermission struct {
	// The starting value for a range of allowed port numbers. This value
	// must be lower than the ToPort value.
	FromPort *IntegerExpr `json:"FromPort,omitempty"`

	// The range of allowed IP addresses in CIDR notation.
	IpRange *StringExpr `json:"IpRange,omitempty"`

	// The network communication protocol that is used by the fleet. For
	// valid values, see the IpPermission data type in the Amazon GameLift
	// API Reference.
	Protocol *StringExpr `json:"Protocol,omitempty"`

	// The ending value for a range of allowed port numbers. This value must
	// be higher than the FromPort value.
	ToPort *IntegerExpr `json:"ToPort,omitempty"`
}

// GameLiftFleetEC2InboundPermissionList represents a list of GameLiftFleetEC2InboundPermission
type GameLiftFleetEC2InboundPermissionList []GameLiftFleetEC2InboundPermission

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GameLiftFleetEC2InboundPermissionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GameLiftFleetEC2InboundPermission{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GameLiftFleetEC2InboundPermissionList{item}
		return nil
	}
	list := []GameLiftFleetEC2InboundPermission{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GameLiftFleetEC2InboundPermissionList(list)
		return nil
	}
	return err
}

// GlueClassifierGrokClassifier represents AWS Glue Classifier GrokClassifier
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-grokclassifier.html
type GlueClassifierGrokClassifier struct {
	// Custom grok patterns that are used by this classifier. It must match
	// the URI address multi-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*
	CustomPatterns interface{} `json:"CustomPatterns,omitempty"`

	// The grok pattern that's used by this classifier. It must match the
	// Logstash grok string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\t]*
	GrokPattern interface{} `json:"GrokPattern,omitempty"`

	// The data form that the classifier matches—such as Twitter, JSON, or
	// Omniture logs.
	Classification interface{} `json:"Classification,omitempty"`

	// The name of the classifier. It must match the single-line string
	// pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Name interface{} `json:"Name,omitempty"`
}

// GlueClassifierGrokClassifierList represents a list of GlueClassifierGrokClassifier
type GlueClassifierGrokClassifierList []GlueClassifierGrokClassifier

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueClassifierGrokClassifierList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueClassifierGrokClassifier{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueClassifierGrokClassifierList{item}
		return nil
	}
	list := []GlueClassifierGrokClassifier{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueClassifierGrokClassifierList(list)
		return nil
	}
	return err
}

// GlueConnectionConnectionInput represents AWS Glue Connection ConnectionInput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-connection-connectioninput.html
type GlueConnectionConnectionInput struct {
	// The description of the connection.
	Description interface{} `json:"Description,omitempty"`

	// The type of the connection. Valid values are JDBC or SFTP.
	ConnectionType interface{} `json:"ConnectionType,omitempty"`

	// A list of UTF-8 strings that specify the criteria that you can use in
	// selecting this connection.
	MatchCriteria interface{} `json:"MatchCriteria,omitempty"`

	// A map of physical connection requirements that are needed to make the
	// connection, such as VPC and SecurityGroup.
	PhysicalConnectionRequirements *GlueConnectionPhysicalConnectionRequirements `json:"PhysicalConnectionRequirements,omitempty"`

	// UTF-8 string–to–UTF-8 string key-value pairs that specify the
	// parameters for this connection.
	ConnectionProperties interface{} `json:"ConnectionProperties,omitempty"`

	// The name of the connection.
	Name interface{} `json:"Name,omitempty"`
}

// GlueConnectionConnectionInputList represents a list of GlueConnectionConnectionInput
type GlueConnectionConnectionInputList []GlueConnectionConnectionInput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueConnectionConnectionInputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueConnectionConnectionInput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueConnectionConnectionInputList{item}
		return nil
	}
	list := []GlueConnectionConnectionInput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueConnectionConnectionInputList(list)
		return nil
	}
	return err
}

// GlueConnectionPhysicalConnectionRequirements represents AWS Glue Connection PhysicalConnectionRequirements
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-connection-physicalconnectionrequirements.html
type GlueConnectionPhysicalConnectionRequirements struct {
	// The connection's Availability Zone. It must match the single-line
	// string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	AvailabilityZone interface{} `json:"AvailabilityZone,omitempty"`

	// A list of UTF-8 strings that specify the security group IDs that are
	// used by the connection.
	SecurityGroupIdList interface{} `json:"SecurityGroupIdList,omitempty"`

	// The subnet ID that's used by the connection. It must match the
	// single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	SubnetId interface{} `json:"SubnetId,omitempty"`
}

// GlueConnectionPhysicalConnectionRequirementsList represents a list of GlueConnectionPhysicalConnectionRequirements
type GlueConnectionPhysicalConnectionRequirementsList []GlueConnectionPhysicalConnectionRequirements

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueConnectionPhysicalConnectionRequirementsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueConnectionPhysicalConnectionRequirements{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueConnectionPhysicalConnectionRequirementsList{item}
		return nil
	}
	list := []GlueConnectionPhysicalConnectionRequirements{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueConnectionPhysicalConnectionRequirementsList(list)
		return nil
	}
	return err
}

// GlueCrawlerJdbcTarget represents AWS Glue Crawler JdbcTarget
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-crawler-jdbctarget.html
type GlueCrawlerJdbcTarget struct {
	// The name of the connection to use for the JDBC target.
	ConnectionName interface{} `json:"ConnectionName,omitempty"`

	// The path of the JDBC target.
	Path interface{} `json:"Path,omitempty"`

	// A list of UTF-8 strings that specify the items to exclude from the
	// crawl.
	Exclusions interface{} `json:"Exclusions,omitempty"`
}

// GlueCrawlerJdbcTargetList represents a list of GlueCrawlerJdbcTarget
type GlueCrawlerJdbcTargetList []GlueCrawlerJdbcTarget

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueCrawlerJdbcTargetList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueCrawlerJdbcTarget{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueCrawlerJdbcTargetList{item}
		return nil
	}
	list := []GlueCrawlerJdbcTarget{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueCrawlerJdbcTargetList(list)
		return nil
	}
	return err
}

// GlueCrawlerS3Target represents AWS Glue Crawler S3Target
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-crawler-s3target.html
type GlueCrawlerS3Target struct {
	// The path to the Amazon S3 target.
	Path interface{} `json:"Path,omitempty"`

	// A list of UTF-8 strings that specify the Amazon S3 objects to exclude
	// from the crawl.
	Exclusions interface{} `json:"Exclusions,omitempty"`
}

// GlueCrawlerS3TargetList represents a list of GlueCrawlerS3Target
type GlueCrawlerS3TargetList []GlueCrawlerS3Target

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueCrawlerS3TargetList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueCrawlerS3Target{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueCrawlerS3TargetList{item}
		return nil
	}
	list := []GlueCrawlerS3Target{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueCrawlerS3TargetList(list)
		return nil
	}
	return err
}

// GlueCrawlerSchedule represents AWS Glue Crawler Schedule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-crawler-schedule.html
type GlueCrawlerSchedule struct {
	// A cron expression that you can use as an Amazon CloudWatch Events
	// event to schedule something. For example, to run something every day
	// at 12:15 UTC, you would specify: cron(15 12 * * ? *).
	ScheduleExpression interface{} `json:"ScheduleExpression,omitempty"`
}

// GlueCrawlerScheduleList represents a list of GlueCrawlerSchedule
type GlueCrawlerScheduleList []GlueCrawlerSchedule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueCrawlerScheduleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueCrawlerSchedule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueCrawlerScheduleList{item}
		return nil
	}
	list := []GlueCrawlerSchedule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueCrawlerScheduleList(list)
		return nil
	}
	return err
}

// GlueCrawlerSchemaChangePolicy represents AWS Glue Crawler SchemaChangePolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-crawler-schemachangepolicy.html
type GlueCrawlerSchemaChangePolicy struct {
	// The update behavior. Valid values are LOG or UPDATE_IN_DATABASE.
	UpdateBehavior interface{} `json:"UpdateBehavior,omitempty"`

	// The deletion behavior. Valid values are LOG, DELETE_FROM_DATABASE, or
	// DEPRECATE_IN_DATABASE.
	DeleteBehavior interface{} `json:"DeleteBehavior,omitempty"`
}

// GlueCrawlerSchemaChangePolicyList represents a list of GlueCrawlerSchemaChangePolicy
type GlueCrawlerSchemaChangePolicyList []GlueCrawlerSchemaChangePolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueCrawlerSchemaChangePolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueCrawlerSchemaChangePolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueCrawlerSchemaChangePolicyList{item}
		return nil
	}
	list := []GlueCrawlerSchemaChangePolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueCrawlerSchemaChangePolicyList(list)
		return nil
	}
	return err
}

// GlueCrawlerTargets represents AWS Glue Crawler Targets
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-crawler-targets.html
type GlueCrawlerTargets struct {
	// The Amazon S3 crawler targets.
	S3Targets *GlueCrawlerS3TargetList `json:"S3Targets,omitempty"`

	// The JDBC crawler targets.
	JdbcTargets *GlueCrawlerJdbcTargetList `json:"JdbcTargets,omitempty"`
}

// GlueCrawlerTargetsList represents a list of GlueCrawlerTargets
type GlueCrawlerTargetsList []GlueCrawlerTargets

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueCrawlerTargetsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueCrawlerTargets{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueCrawlerTargetsList{item}
		return nil
	}
	list := []GlueCrawlerTargets{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueCrawlerTargetsList(list)
		return nil
	}
	return err
}

// GlueDatabaseDatabaseInput represents AWS Glue Database DatabaseInput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-database-databaseinput.html
type GlueDatabaseDatabaseInput struct {
	// The location of the database (for example, an HDFS path). It must
	// match the URI address multi-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*
	LocationUri interface{} `json:"LocationUri,omitempty"`

	// The description of the database. It must match the URI address
	// multi-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*
	Description interface{} `json:"Description,omitempty"`

	// UTF-8 string–to–UTF-8 string key-value pairs that specify the
	// properties that are associated with the database.
	Parameters interface{} `json:"Parameters,omitempty"`

	// The name of the database. It must match the single-line string
	// pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Name interface{} `json:"Name,omitempty"`
}

// GlueDatabaseDatabaseInputList represents a list of GlueDatabaseDatabaseInput
type GlueDatabaseDatabaseInputList []GlueDatabaseDatabaseInput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueDatabaseDatabaseInputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueDatabaseDatabaseInput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueDatabaseDatabaseInputList{item}
		return nil
	}
	list := []GlueDatabaseDatabaseInput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueDatabaseDatabaseInputList(list)
		return nil
	}
	return err
}

// GlueJobConnectionsList represents AWS Glue Job ConnectionsList
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-job-connectionslist.html
type GlueJobConnectionsList struct {
	// A list of UTF-8 strings that specifies the connections that are used
	// by the job.
	Connections interface{} `json:"Connections,omitempty"`
}

// GlueJobConnectionsListList represents a list of GlueJobConnectionsList
type GlueJobConnectionsListList []GlueJobConnectionsList

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueJobConnectionsListList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueJobConnectionsList{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueJobConnectionsListList{item}
		return nil
	}
	list := []GlueJobConnectionsList{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueJobConnectionsListList(list)
		return nil
	}
	return err
}

// GlueJobExecutionProperty represents AWS Glue Job ExecutionProperty
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-job-executionproperty.html
type GlueJobExecutionProperty struct {
	// The maximum number of concurrent runs that are allowed for the job.
	MaxConcurrentRuns interface{} `json:"MaxConcurrentRuns,omitempty"`
}

// GlueJobExecutionPropertyList represents a list of GlueJobExecutionProperty
type GlueJobExecutionPropertyList []GlueJobExecutionProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueJobExecutionPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueJobExecutionProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueJobExecutionPropertyList{item}
		return nil
	}
	list := []GlueJobExecutionProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueJobExecutionPropertyList(list)
		return nil
	}
	return err
}

// GlueJobJobCommand represents AWS Glue Job JobCommand
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-job-jobcommand.html
type GlueJobJobCommand struct {
	// The location of a script that executes a job.
	ScriptLocation interface{} `json:"ScriptLocation,omitempty"`

	// The name of the job command.
	Name interface{} `json:"Name,omitempty"`
}

// GlueJobJobCommandList represents a list of GlueJobJobCommand
type GlueJobJobCommandList []GlueJobJobCommand

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueJobJobCommandList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueJobJobCommand{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueJobJobCommandList{item}
		return nil
	}
	list := []GlueJobJobCommand{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueJobJobCommandList(list)
		return nil
	}
	return err
}

// GluePartitionColumn represents AWS Glue Partition Column
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-column.html
type GluePartitionColumn struct {
	// A free-form text comment. It must match the single-line string
	// pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Comment interface{} `json:"Comment,omitempty"`

	// The data type of the column data. It must match the single-line string
	// pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Type interface{} `json:"Type,omitempty"`

	// The name of the column. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Name interface{} `json:"Name,omitempty"`
}

// GluePartitionColumnList represents a list of GluePartitionColumn
type GluePartitionColumnList []GluePartitionColumn

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GluePartitionColumnList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GluePartitionColumn{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GluePartitionColumnList{item}
		return nil
	}
	list := []GluePartitionColumn{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GluePartitionColumnList(list)
		return nil
	}
	return err
}

// GluePartitionOrder represents AWS Glue Partition Order
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-order.html
type GluePartitionOrder struct {
	// The name of the column. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Column interface{} `json:"Column,omitempty"`

	// Indicates whether the column is sorted in ascending order (1) or
	// descending order (0).
	SortOrder interface{} `json:"SortOrder,omitempty"`
}

// GluePartitionOrderList represents a list of GluePartitionOrder
type GluePartitionOrderList []GluePartitionOrder

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GluePartitionOrderList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GluePartitionOrder{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GluePartitionOrderList{item}
		return nil
	}
	list := []GluePartitionOrder{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GluePartitionOrderList(list)
		return nil
	}
	return err
}

// GluePartitionPartitionInput represents AWS Glue Partition PartitionInput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-partitioninput.html
type GluePartitionPartitionInput struct {
	// UTF-8 string–to–UTF-8 string key-value pairs that specify the
	// parameters for the partition.
	Parameters interface{} `json:"Parameters,omitempty"`

	// Information about the physical storage of the partition.
	StorageDescriptor *GluePartitionStorageDescriptor `json:"StorageDescriptor,omitempty"`

	// A list of UTF-8 strings that specify the values of the partition.
	Values interface{} `json:"Values,omitempty"`
}

// GluePartitionPartitionInputList represents a list of GluePartitionPartitionInput
type GluePartitionPartitionInputList []GluePartitionPartitionInput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GluePartitionPartitionInputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GluePartitionPartitionInput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GluePartitionPartitionInputList{item}
		return nil
	}
	list := []GluePartitionPartitionInput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GluePartitionPartitionInputList(list)
		return nil
	}
	return err
}

// GluePartitionSerdeInfo represents AWS Glue Partition SerdeInfo
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-serdeinfo.html
type GluePartitionSerdeInfo struct {
	// UTF-8 string–to–UTF-8 string key-value pairs that specify the
	// initialization parameters for the SerDe.
	Parameters interface{} `json:"Parameters,omitempty"`

	// The serialization library. This is usually the class that implements
	// the SerDe, such as
	// org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe. It must match
	// the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	SerializationLibrary interface{} `json:"SerializationLibrary,omitempty"`

	// The name of the SerDe. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Name interface{} `json:"Name,omitempty"`
}

// GluePartitionSerdeInfoList represents a list of GluePartitionSerdeInfo
type GluePartitionSerdeInfoList []GluePartitionSerdeInfo

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GluePartitionSerdeInfoList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GluePartitionSerdeInfo{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GluePartitionSerdeInfoList{item}
		return nil
	}
	list := []GluePartitionSerdeInfo{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GluePartitionSerdeInfoList(list)
		return nil
	}
	return err
}

// GluePartitionSkewedInfo represents AWS Glue Partition SkewedInfo
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-skewedinfo.html
type GluePartitionSkewedInfo struct {
	// A list of UTF-8 strings that specify the names of columns that contain
	// skewed values.
	SkewedColumnNames interface{} `json:"SkewedColumnNames,omitempty"`

	// A list of UTF-8 strings that specify values that appear so frequently
	// that they're considered to be skewed.
	SkewedColumnValues interface{} `json:"SkewedColumnValues,omitempty"`

	// UTF-8 string–to–UTF-8 string key-value pairs that map skewed
	// values to the columns that contain them.
	SkewedColumnValueLocationMaps interface{} `json:"SkewedColumnValueLocationMaps,omitempty"`
}

// GluePartitionSkewedInfoList represents a list of GluePartitionSkewedInfo
type GluePartitionSkewedInfoList []GluePartitionSkewedInfo

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GluePartitionSkewedInfoList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GluePartitionSkewedInfo{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GluePartitionSkewedInfoList{item}
		return nil
	}
	list := []GluePartitionSkewedInfo{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GluePartitionSkewedInfoList(list)
		return nil
	}
	return err
}

// GluePartitionStorageDescriptor represents AWS Glue Partition StorageDescriptor
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html
type GluePartitionStorageDescriptor struct {
	// Indicates whether the partition data is stored in subdirectories.
	StoredAsSubDirectories interface{} `json:"StoredAsSubDirectories,omitempty"`

	// UTF-8 string–to–UTF-8 string key-value pairs that specify
	// user-supplied properties.
	Parameters interface{} `json:"Parameters,omitempty"`

	// A list of UTF-8 strings that specify reducer grouping columns,
	// clustering columns, and bucketing columns in the partition.
	BucketColumns interface{} `json:"BucketColumns,omitempty"`

	// Information about values that appear very frequently in a column
	// (skewed values).
	SkewedInfo *GluePartitionSkewedInfo `json:"SkewedInfo,omitempty"`

	// The input format: SequenceFileInputFormat (binary), TextInputFormat,
	// or a custom format. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	InputFormat interface{} `json:"InputFormat,omitempty"`

	// The number of buckets.
	NumberOfBuckets interface{} `json:"NumberOfBuckets,omitempty"`

	// The output format: SequenceFileOutputFormat (binary),
	// IgnoreKeyTextOutputFormat, or a custom format. It must match the
	// single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	OutputFormat interface{} `json:"OutputFormat,omitempty"`

	// The columns in the partition.
	Columns *GluePartitionColumnList `json:"Columns,omitempty"`

	// Information about a serialization/deserialization program (SerDe),
	// which serves as an extractor and loader.
	SerdeInfo *GluePartitionSerdeInfo `json:"SerdeInfo,omitempty"`

	// The sort order of each bucket in the partition.
	SortColumns *GluePartitionOrderList `json:"SortColumns,omitempty"`

	// Indicates whether the data in the partition is compressed.
	Compressed interface{} `json:"Compressed,omitempty"`

	// The physical location of the partition. By default, this takes the
	// form of the warehouse location, followed by the database location in
	// the warehouse, followed by the partition name. It must match the URI
	// address multi-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*
	Location interface{} `json:"Location,omitempty"`
}

// GluePartitionStorageDescriptorList represents a list of GluePartitionStorageDescriptor
type GluePartitionStorageDescriptorList []GluePartitionStorageDescriptor

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GluePartitionStorageDescriptorList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GluePartitionStorageDescriptor{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GluePartitionStorageDescriptorList{item}
		return nil
	}
	list := []GluePartitionStorageDescriptor{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GluePartitionStorageDescriptorList(list)
		return nil
	}
	return err
}

// GlueTableColumn represents AWS Glue Table Column
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-table-column.html
type GlueTableColumn struct {
	// A free-form text comment. It must match the single-line string
	// pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Comment interface{} `json:"Comment,omitempty"`

	// The data type of the column data. It must match the single-line string
	// pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Type interface{} `json:"Type,omitempty"`

	// The name of the column. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Name interface{} `json:"Name,omitempty"`
}

// GlueTableColumnList represents a list of GlueTableColumn
type GlueTableColumnList []GlueTableColumn

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueTableColumnList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueTableColumn{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueTableColumnList{item}
		return nil
	}
	list := []GlueTableColumn{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueTableColumnList(list)
		return nil
	}
	return err
}

// GlueTableOrder represents AWS Glue Table Order
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-table-order.html
type GlueTableOrder struct {
	// The name of the column. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Column interface{} `json:"Column,omitempty"`

	// Indicates whether the column is sorted in ascending order (1) or
	// descending order (0).
	SortOrder interface{} `json:"SortOrder,omitempty"`
}

// GlueTableOrderList represents a list of GlueTableOrder
type GlueTableOrderList []GlueTableOrder

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueTableOrderList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueTableOrder{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueTableOrderList{item}
		return nil
	}
	list := []GlueTableOrder{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueTableOrderList(list)
		return nil
	}
	return err
}

// GlueTableSerdeInfo represents AWS Glue Table SerdeInfo
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-table-serdeinfo.html
type GlueTableSerdeInfo struct {
	// UTF-8 string–to–UTF-8 string key-value pairs that specify the
	// initialization parameters for the SerDe.
	Parameters interface{} `json:"Parameters,omitempty"`

	// The serialization library. This is usually the class that implements
	// the SerDe, such as
	// org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe. It must match
	// the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	SerializationLibrary interface{} `json:"SerializationLibrary,omitempty"`

	// The name of the SerDe. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Name interface{} `json:"Name,omitempty"`
}

// GlueTableSerdeInfoList represents a list of GlueTableSerdeInfo
type GlueTableSerdeInfoList []GlueTableSerdeInfo

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueTableSerdeInfoList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueTableSerdeInfo{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueTableSerdeInfoList{item}
		return nil
	}
	list := []GlueTableSerdeInfo{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueTableSerdeInfoList(list)
		return nil
	}
	return err
}

// GlueTableSkewedInfo represents AWS Glue Table SkewedInfo
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-table-skewedinfo.html
type GlueTableSkewedInfo struct {
	// A list of UTF-8 strings that specify the names of columns that contain
	// skewed values.
	SkewedColumnNames interface{} `json:"SkewedColumnNames,omitempty"`

	// A list of UTF-8 strings that specify values that appear so frequently
	// that they're considered to be skewed.
	SkewedColumnValues interface{} `json:"SkewedColumnValues,omitempty"`

	// UTF-8 string–to–UTF-8 string key-value pairs that map skewed
	// values to the columns that contain them.
	SkewedColumnValueLocationMaps interface{} `json:"SkewedColumnValueLocationMaps,omitempty"`
}

// GlueTableSkewedInfoList represents a list of GlueTableSkewedInfo
type GlueTableSkewedInfoList []GlueTableSkewedInfo

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueTableSkewedInfoList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueTableSkewedInfo{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueTableSkewedInfoList{item}
		return nil
	}
	list := []GlueTableSkewedInfo{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueTableSkewedInfoList(list)
		return nil
	}
	return err
}

// GlueTableStorageDescriptor represents AWS Glue Table StorageDescriptor
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-table-storagedescriptor.html
type GlueTableStorageDescriptor struct {
	// Indicates whether the table data is stored in subdirectories.
	StoredAsSubDirectories interface{} `json:"StoredAsSubDirectories,omitempty"`

	// UTF-8 string–to–UTF-8 string key-value pairs that specify
	// user-supplied properties.
	Parameters interface{} `json:"Parameters,omitempty"`

	// A list of UTF-8 strings that specify reducer grouping columns,
	// clustering columns, and bucketing columns in the table.
	BucketColumns interface{} `json:"BucketColumns,omitempty"`

	// Information about values that appear very frequently in a column
	// (skewed values).
	SkewedInfo *GlueTableSkewedInfo `json:"SkewedInfo,omitempty"`

	// The input format: SequenceFileInputFormat (binary), TextInputFormat,
	// or a custom format. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	InputFormat interface{} `json:"InputFormat,omitempty"`

	// The number of buckets.
	NumberOfBuckets interface{} `json:"NumberOfBuckets,omitempty"`

	// The output format: SequenceFileOutputFormat (binary),
	// IgnoreKeyTextOutputFormat, or a custom format. It must match the
	// single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	OutputFormat interface{} `json:"OutputFormat,omitempty"`

	// The columns in the table.
	Columns *GlueTableColumnList `json:"Columns,omitempty"`

	// Information about a serialization/deserialization program (SerDe),
	// which serves as an extractor and loader.
	SerdeInfo *GlueTableSerdeInfo `json:"SerdeInfo,omitempty"`

	// The sort order of each bucket in the table.
	SortColumns *GlueTableOrderList `json:"SortColumns,omitempty"`

	// Indicates whether the data in the table is compressed.
	Compressed interface{} `json:"Compressed,omitempty"`

	// The physical location of the table. By default, this takes the form of
	// the warehouse location, followed by the database location in the
	// warehouse, followed by the table name. It must match the URI address
	// multi-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*
	Location interface{} `json:"Location,omitempty"`
}

// GlueTableStorageDescriptorList represents a list of GlueTableStorageDescriptor
type GlueTableStorageDescriptorList []GlueTableStorageDescriptor

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueTableStorageDescriptorList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueTableStorageDescriptor{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueTableStorageDescriptorList{item}
		return nil
	}
	list := []GlueTableStorageDescriptor{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueTableStorageDescriptorList(list)
		return nil
	}
	return err
}

// GlueTableTableInput represents AWS Glue Table TableInput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-table-tableinput.html
type GlueTableTableInput struct {
	// The owner of the table. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Owner interface{} `json:"Owner,omitempty"`

	// The original text of the view, if the table is a view. Otherwise, it's
	// null.
	ViewOriginalText interface{} `json:"ViewOriginalText,omitempty"`

	// The description of the table. It must match the URI address multi-line
	// string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*
	Description interface{} `json:"Description,omitempty"`

	// The type of the table, such as EXTERNAL_TABLE or VIRTUAL_VIEW.
	TableType interface{} `json:"TableType,omitempty"`

	// UTF-8 string–to–UTF-8 string key-value pairs that specify the
	// properties that are associated with the table.
	Parameters interface{} `json:"Parameters,omitempty"`

	// The expanded text of the view, if the table is a view. Otherwise it's
	// null.
	ViewExpandedText interface{} `json:"ViewExpandedText,omitempty"`

	// Information about the physical storage of the table.
	StorageDescriptor *GlueTableStorageDescriptor `json:"StorageDescriptor,omitempty"`

	// The columns in the table.
	PartitionKeys *GlueTableColumnList `json:"PartitionKeys,omitempty"`

	// The retention time for the table.
	Retention interface{} `json:"Retention,omitempty"`

	// The name of the table. It must match the single-line string pattern:
	// [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	Name interface{} `json:"Name,omitempty"`
}

// GlueTableTableInputList represents a list of GlueTableTableInput
type GlueTableTableInputList []GlueTableTableInput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueTableTableInputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueTableTableInput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueTableTableInputList{item}
		return nil
	}
	list := []GlueTableTableInput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueTableTableInputList(list)
		return nil
	}
	return err
}

// GlueTriggerAction represents AWS Glue Trigger Action
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-trigger-action.html
type GlueTriggerAction struct {
	// The name of the associated job. It must match the single-line string
	// pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	JobName interface{} `json:"JobName,omitempty"`

	// UTF-8 string–to–UTF-8 string key-value pairs that specify the
	// arguments for the action.
	Arguments interface{} `json:"Arguments,omitempty"`
}

// GlueTriggerActionList represents a list of GlueTriggerAction
type GlueTriggerActionList []GlueTriggerAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueTriggerActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueTriggerAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueTriggerActionList{item}
		return nil
	}
	list := []GlueTriggerAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueTriggerActionList(list)
		return nil
	}
	return err
}

// GlueTriggerCondition represents AWS Glue Trigger Condition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-trigger-condition.html
type GlueTriggerCondition struct {
	// The logical operator for the condition.
	LogicalOperator interface{} `json:"LogicalOperator,omitempty"`

	// The name of the associated job. It must match the single-line string
	// pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*
	JobName interface{} `json:"JobName,omitempty"`

	// The state of the condition.
	State interface{} `json:"State,omitempty"`
}

// GlueTriggerConditionList represents a list of GlueTriggerCondition
type GlueTriggerConditionList []GlueTriggerCondition

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueTriggerConditionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueTriggerCondition{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueTriggerConditionList{item}
		return nil
	}
	list := []GlueTriggerCondition{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueTriggerConditionList(list)
		return nil
	}
	return err
}

// GlueTriggerPredicate represents AWS Glue Trigger Predicate
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-trigger-predicate.html
type GlueTriggerPredicate struct {
	// The logical operator for the predicate.
	Logical interface{} `json:"Logical,omitempty"`

	// The conditions that determine when the trigger fires.
	Conditions *GlueTriggerConditionList `json:"Conditions,omitempty"`
}

// GlueTriggerPredicateList represents a list of GlueTriggerPredicate
type GlueTriggerPredicateList []GlueTriggerPredicate

// UnmarshalJSON sets the object from the provided JSON representation
func (l *GlueTriggerPredicateList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := GlueTriggerPredicate{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = GlueTriggerPredicateList{item}
		return nil
	}
	list := []GlueTriggerPredicate{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = GlueTriggerPredicateList(list)
		return nil
	}
	return err
}

// IAMPolicies represents IAM Policies
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
type IAMPolicies struct {
	// A policy document that describes what actions are allowed on which
	// resources.
	PolicyDocument interface{} `json:"PolicyDocument,omitempty"`

	// The name of the policy.
	PolicyName *StringExpr `json:"PolicyName,omitempty"`
}

// IAMPoliciesList represents a list of IAMPolicies
type IAMPoliciesList []IAMPolicies

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IAMPoliciesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IAMPolicies{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IAMPoliciesList{item}
		return nil
	}
	list := []IAMPolicies{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IAMPoliciesList(list)
		return nil
	}
	return err
}

// IAMUserLoginProfile represents IAM User LoginProfile
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html
type IAMUserLoginProfile struct {
	// The password for the user.
	Password *StringExpr `json:"Password,omitempty"`

	// Specifies whether the user is required to set a new password the next
	// time the user logs in to the AWS Management Console.
	PasswordResetRequired *BoolExpr `json:"PasswordResetRequired,omitempty"`
}

// IAMUserLoginProfileList represents a list of IAMUserLoginProfile
type IAMUserLoginProfileList []IAMUserLoginProfile

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IAMUserLoginProfileList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IAMUserLoginProfile{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IAMUserLoginProfileList{item}
		return nil
	}
	list := []IAMUserLoginProfile{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IAMUserLoginProfileList(list)
		return nil
	}
	return err
}

// IoTTopicRuleAction represents AWS IoT TopicRule Action
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-action.html
type IoTTopicRuleAction struct {
	// Changes the state of a CloudWatch alarm.
	CloudwatchAlarm *IoTTopicRuleCloudwatchAlarmAction `json:"CloudwatchAlarm,omitempty"`

	// Captures a CloudWatch metric.
	CloudwatchMetric *IoTTopicRuleCloudwatchMetricAction `json:"CloudwatchMetric,omitempty"`

	// Writes data to a DynamoDB table.
	DynamoDB *IoTTopicRuleDynamoDBAction `json:"DynamoDB,omitempty"`

	// Writes data to a DynamoDB table.
	DynamoDBv2 *IoTTopicRuleDynamoDBv2Action `json:"DynamoDBv2,omitempty"`

	// Writes data to an Elasticsearch domain.
	Elasticsearch *IoTTopicRuleElasticsearchAction `json:"Elasticsearch,omitempty"`

	// Writes data to a Kinesis Firehose stream.
	Firehose *IoTTopicRuleFirehoseAction `json:"Firehose,omitempty"`

	// Writes data to an Kinesis stream.
	Kinesis *IoTTopicRuleKinesisAction `json:"Kinesis,omitempty"`

	// Invokes a Lambda function.
	Lambda *IoTTopicRuleLambdaAction `json:"Lambda,omitempty"`

	// Publishes data to an MQ Telemetry Transport (MQTT) topic different
	// from the one currently specified.
	Republish *IoTTopicRuleRepublishAction `json:"Republish,omitempty"`

	// Writes data to an S3 bucket.
	S3 *IoTTopicRuleS3Action `json:"S3,omitempty"`

	// Publishes data to an SNS topic.
	Sns *IoTTopicRuleSnsAction `json:"Sns,omitempty"`

	// Publishes data to an SQS queue.
	Sqs *IoTTopicRuleSqsAction `json:"Sqs,omitempty"`
}

// IoTTopicRuleActionList represents a list of IoTTopicRuleAction
type IoTTopicRuleActionList []IoTTopicRuleAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleActionList{item}
		return nil
	}
	list := []IoTTopicRuleAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleCloudwatchAlarmAction represents AWS IoT TopicRule CloudwatchAlarmAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-cloudwatchalarmaction.html
type IoTTopicRuleCloudwatchAlarmAction struct {
	// The CloudWatch alarm name.
	AlarmName *StringExpr `json:"AlarmName,omitempty"`

	// The IAM role that allows access to the CloudWatch alarm.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// The reason for the change of the alarm state.
	StateReason *StringExpr `json:"StateReason,omitempty"`

	// The value of the alarm state.
	StateValue *StringExpr `json:"StateValue,omitempty"`
}

// IoTTopicRuleCloudwatchAlarmActionList represents a list of IoTTopicRuleCloudwatchAlarmAction
type IoTTopicRuleCloudwatchAlarmActionList []IoTTopicRuleCloudwatchAlarmAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleCloudwatchAlarmActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleCloudwatchAlarmAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleCloudwatchAlarmActionList{item}
		return nil
	}
	list := []IoTTopicRuleCloudwatchAlarmAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleCloudwatchAlarmActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleCloudwatchMetricAction represents AWS IoT TopicRule CloudwatchMetricAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-cloudwatchmetricaction.html
type IoTTopicRuleCloudwatchMetricAction struct {
	// The name of the CloudWatch metric.
	MetricName *StringExpr `json:"MetricName,omitempty"`

	// The name of the CloudWatch metric namespace.
	MetricNamespace *StringExpr `json:"MetricNamespace,omitempty"`

	// An optional Unix timestamp.
	MetricTimestamp *StringExpr `json:"MetricTimestamp,omitempty"`

	// The metric unit supported by Amazon CloudWatch.
	MetricUnit *StringExpr `json:"MetricUnit,omitempty"`

	// The value to publish to the metric. For example, if you count the
	// occurrences of a particular term such as Error, the value will be 1
	// for each occurrence.
	MetricValue *StringExpr `json:"MetricValue,omitempty"`

	// The ARN of the IAM role that grants access to the CloudWatch metric.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`
}

// IoTTopicRuleCloudwatchMetricActionList represents a list of IoTTopicRuleCloudwatchMetricAction
type IoTTopicRuleCloudwatchMetricActionList []IoTTopicRuleCloudwatchMetricAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleCloudwatchMetricActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleCloudwatchMetricAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleCloudwatchMetricActionList{item}
		return nil
	}
	list := []IoTTopicRuleCloudwatchMetricAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleCloudwatchMetricActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleDynamoDBAction represents AWS IoT TopicRule DynamoDBAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-dynamodbaction.html
type IoTTopicRuleDynamoDBAction struct {
	// The name of the hash key.
	HashKeyField *StringExpr `json:"HashKeyField,omitempty"`

	// The data type of the hash key (also called the partition key). Valid
	// values are: "STRING" or "NUMBER".
	HashKeyType *StringExpr `json:"HashKeyType,omitempty"`

	// The value of the hash key.
	HashKeyValue *StringExpr `json:"HashKeyValue,omitempty"`

	// The name of the column in the DynamoDB table that contains the result
	// of the query. You can customize this name.
	PayloadField *StringExpr `json:"PayloadField,omitempty"`

	// The name of the range key.
	RangeKeyField *StringExpr `json:"RangeKeyField,omitempty"`

	// The data type of the range key (also called the sort key). Valid
	// values are: "STRING" or "NUMBER".
	RangeKeyType *StringExpr `json:"RangeKeyType,omitempty"`

	// The value of the range key.
	RangeKeyValue *StringExpr `json:"RangeKeyValue,omitempty"`

	// The ARN of the IAM role that grants access to the DynamoDB table.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// The name of the DynamoDB table.
	TableName *StringExpr `json:"TableName,omitempty"`
}

// IoTTopicRuleDynamoDBActionList represents a list of IoTTopicRuleDynamoDBAction
type IoTTopicRuleDynamoDBActionList []IoTTopicRuleDynamoDBAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleDynamoDBActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleDynamoDBAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleDynamoDBActionList{item}
		return nil
	}
	list := []IoTTopicRuleDynamoDBAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleDynamoDBActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleDynamoDBv2Action represents AWS IoT TopicRule DynamoDBv2Action
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-dynamodbv2action.html
type IoTTopicRuleDynamoDBv2Action struct {
	// Specifies the database table to which to write the item for an AWS IoT
	// topic rule.
	PutItem *IoTTopicRulePutItemInput `json:"PutItem,omitempty"`

	// The IAM role that allows access to the DynamoDB table. At a minimum,
	// the role must allow the dynamoDB:PutItem IAM action.
	RoleArn interface{} `json:"RoleArn,omitempty"`
}

// IoTTopicRuleDynamoDBv2ActionList represents a list of IoTTopicRuleDynamoDBv2Action
type IoTTopicRuleDynamoDBv2ActionList []IoTTopicRuleDynamoDBv2Action

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleDynamoDBv2ActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleDynamoDBv2Action{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleDynamoDBv2ActionList{item}
		return nil
	}
	list := []IoTTopicRuleDynamoDBv2Action{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleDynamoDBv2ActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleElasticsearchAction represents AWS IoT TopicRule ElasticsearchAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-elasticsearchaction.html
type IoTTopicRuleElasticsearchAction struct {
	// The endpoint of your Elasticsearch domain.
	Endpoint *StringExpr `json:"Endpoint,omitempty"`

	// A unique identifier for the stored data.
	Id *StringExpr `json:"Id,omitempty"`

	// The Elasticsearch index where the data is stored.
	Index *StringExpr `json:"Index,omitempty"`

	// The ARN of the IAM role that grants access to Elasticsearch.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// The type of stored data.
	Type *StringExpr `json:"Type,omitempty"`
}

// IoTTopicRuleElasticsearchActionList represents a list of IoTTopicRuleElasticsearchAction
type IoTTopicRuleElasticsearchActionList []IoTTopicRuleElasticsearchAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleElasticsearchActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleElasticsearchAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleElasticsearchActionList{item}
		return nil
	}
	list := []IoTTopicRuleElasticsearchAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleElasticsearchActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleFirehoseAction represents AWS IoT TopicRule FirehoseAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-firehoseaction.html
type IoTTopicRuleFirehoseAction struct {
	// The delivery stream name.
	DeliveryStreamName *StringExpr `json:"DeliveryStreamName,omitempty"`

	// The Amazon Resource Name (ARN) of the IAM role that grants access to
	// the Kinesis Firehose stream.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// A character separator that's used to separate records written to the
	// Kinesis Firehose stream. For valid values, see Firehose Action in the
	// AWS IoT Developer Guide.
	Separator *StringExpr `json:"Separator,omitempty"`
}

// IoTTopicRuleFirehoseActionList represents a list of IoTTopicRuleFirehoseAction
type IoTTopicRuleFirehoseActionList []IoTTopicRuleFirehoseAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleFirehoseActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleFirehoseAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleFirehoseActionList{item}
		return nil
	}
	list := []IoTTopicRuleFirehoseAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleFirehoseActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleKinesisAction represents AWS IoT TopicRule KinesisAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-kinesisaction.html
type IoTTopicRuleKinesisAction struct {
	// The partition key (the grouping of data by shard within an Kinesis
	// stream).
	PartitionKey *StringExpr `json:"PartitionKey,omitempty"`

	// The ARN of the IAM role that grants access to an Kinesis stream.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// The name of the Kinesis stream.
	StreamName *StringExpr `json:"StreamName,omitempty"`
}

// IoTTopicRuleKinesisActionList represents a list of IoTTopicRuleKinesisAction
type IoTTopicRuleKinesisActionList []IoTTopicRuleKinesisAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleKinesisActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleKinesisAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleKinesisActionList{item}
		return nil
	}
	list := []IoTTopicRuleKinesisAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleKinesisActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleLambdaAction represents AWS IoT TopicRule LambdaAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-lambdaaction.html
type IoTTopicRuleLambdaAction struct {
	// The ARN of the Lambda function.
	FunctionArn *StringExpr `json:"FunctionArn,omitempty"`
}

// IoTTopicRuleLambdaActionList represents a list of IoTTopicRuleLambdaAction
type IoTTopicRuleLambdaActionList []IoTTopicRuleLambdaAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleLambdaActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleLambdaAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleLambdaActionList{item}
		return nil
	}
	list := []IoTTopicRuleLambdaAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleLambdaActionList(list)
		return nil
	}
	return err
}

// IoTTopicRulePutItemInput represents AWS IoT TopicRule PutItemInput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-putiteminput.html
type IoTTopicRulePutItemInput struct {
	// The name of the DynamoDB table.
	TableName interface{} `json:"TableName,omitempty"`
}

// IoTTopicRulePutItemInputList represents a list of IoTTopicRulePutItemInput
type IoTTopicRulePutItemInputList []IoTTopicRulePutItemInput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRulePutItemInputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRulePutItemInput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRulePutItemInputList{item}
		return nil
	}
	list := []IoTTopicRulePutItemInput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRulePutItemInputList(list)
		return nil
	}
	return err
}

// IoTTopicRuleRepublishAction represents AWS IoT TopicRule RepublishAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-republishaction.html
type IoTTopicRuleRepublishAction struct {
	// The ARN of the IAM role that grants publishing access.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// The name of the MQTT topic topic different from the one currently
	// specified.
	Topic *StringExpr `json:"Topic,omitempty"`
}

// IoTTopicRuleRepublishActionList represents a list of IoTTopicRuleRepublishAction
type IoTTopicRuleRepublishActionList []IoTTopicRuleRepublishAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleRepublishActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleRepublishAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleRepublishActionList{item}
		return nil
	}
	list := []IoTTopicRuleRepublishAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleRepublishActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleS3Action represents AWS IoT TopicRule S3Action
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-s3action.html
type IoTTopicRuleS3Action struct {
	// The name of the S3 bucket.
	BucketName *StringExpr `json:"BucketName,omitempty"`

	// The object key (the name of an object in the S3 bucket).
	Key *StringExpr `json:"Key,omitempty"`

	// The ARN of the IAM role that grants access to Amazon S3.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`
}

// IoTTopicRuleS3ActionList represents a list of IoTTopicRuleS3Action
type IoTTopicRuleS3ActionList []IoTTopicRuleS3Action

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleS3ActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleS3Action{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleS3ActionList{item}
		return nil
	}
	list := []IoTTopicRuleS3Action{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleS3ActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleSnsAction represents AWS IoT TopicRule SnsAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-snsaction.html
type IoTTopicRuleSnsAction struct {
	// The format of the published message. Amazon SNS uses this setting to
	// determine whether it should parse the payload and extract the
	// platform-specific bits from the payload.
	MessageFormat *StringExpr `json:"MessageFormat,omitempty"`

	// The ARN of the IAM role that grants access to Amazon SNS.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// The ARN of the Amazon SNS topic.
	TargetArn *StringExpr `json:"TargetArn,omitempty"`
}

// IoTTopicRuleSnsActionList represents a list of IoTTopicRuleSnsAction
type IoTTopicRuleSnsActionList []IoTTopicRuleSnsAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleSnsActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleSnsAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleSnsActionList{item}
		return nil
	}
	list := []IoTTopicRuleSnsAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleSnsActionList(list)
		return nil
	}
	return err
}

// IoTTopicRuleSqsAction represents AWS IoT TopicRule SqsAction
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-sqsaction.html
type IoTTopicRuleSqsAction struct {
	// The URL of the Amazon Simple Queue Service (Amazon SQS) queue.
	QueueUrl *StringExpr `json:"QueueUrl,omitempty"`

	// The ARN of the IAM role that grants access to Amazon SQS.
	RoleArn *StringExpr `json:"RoleArn,omitempty"`

	// Specifies whether Base64 encoding should be used.
	UseBase64 *BoolExpr `json:"UseBase64,omitempty"`
}

// IoTTopicRuleSqsActionList represents a list of IoTTopicRuleSqsAction
type IoTTopicRuleSqsActionList []IoTTopicRuleSqsAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleSqsActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleSqsAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleSqsActionList{item}
		return nil
	}
	list := []IoTTopicRuleSqsAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleSqsActionList(list)
		return nil
	}
	return err
}

// IoTThingAttributePayload represents AWS IoT Thing AttributePayload
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-thing-attributepayload.html
type IoTThingAttributePayload struct {
	// A string that contains up to three key–value pairs. Maximum length
	// of 800. Duplicates not allowed.
	Attributes *StringExpr `json:"Attributes,omitempty"`
}

// IoTThingAttributePayloadList represents a list of IoTThingAttributePayload
type IoTThingAttributePayloadList []IoTThingAttributePayload

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTThingAttributePayloadList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTThingAttributePayload{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTThingAttributePayloadList{item}
		return nil
	}
	list := []IoTThingAttributePayload{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTThingAttributePayloadList(list)
		return nil
	}
	return err
}

// IoTTopicRuleTopicRulePayload represents AWS IoT TopicRule TopicRulePayload
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-topicrulepayload.html
type IoTTopicRuleTopicRulePayload struct {
	// The actions associated with the rule.
	Actions *IoTTopicRuleActionList `json:"Actions,omitempty"`

	// The version of the SQL rules engine to use when evaluating the rule.
	AwsIotSqlVersion *StringExpr `json:"AwsIotSqlVersion,omitempty"`

	// The description of the rule.
	Description *StringExpr `json:"Description,omitempty"`

	// Specifies whether the rule is disabled.
	RuleDisabled *BoolExpr `json:"RuleDisabled,omitempty"`

	// The SQL statement that queries the topic. For more information, see
	// Rules for AWS IoT in the AWS IoT Developer Guide.
	Sql *StringExpr `json:"Sql,omitempty"`
}

// IoTTopicRuleTopicRulePayloadList represents a list of IoTTopicRuleTopicRulePayload
type IoTTopicRuleTopicRulePayloadList []IoTTopicRuleTopicRulePayload

// UnmarshalJSON sets the object from the provided JSON representation
func (l *IoTTopicRuleTopicRulePayloadList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := IoTTopicRuleTopicRulePayload{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = IoTTopicRuleTopicRulePayloadList{item}
		return nil
	}
	list := []IoTTopicRuleTopicRulePayload{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = IoTTopicRuleTopicRulePayloadList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationCSVMappingParameters represents Amazon Kinesis Analytics Application CSVMappingParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-csvmappingparameters.html
type KinesisAnalyticsApplicationCSVMappingParameters struct {
	// The column delimiter. For example, in a CSV format, a comma (",") is
	// the typical column delimiter.
	RecordColumnDelimiter interface{} `json:"RecordColumnDelimiter,omitempty"`

	// The row delimiter. For example, in a CSV format, "\n" is the typical
	// row delimiter.
	RecordRowDelimiter interface{} `json:"RecordRowDelimiter,omitempty"`
}

// KinesisAnalyticsApplicationCSVMappingParametersList represents a list of KinesisAnalyticsApplicationCSVMappingParameters
type KinesisAnalyticsApplicationCSVMappingParametersList []KinesisAnalyticsApplicationCSVMappingParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationCSVMappingParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationCSVMappingParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationCSVMappingParametersList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationCSVMappingParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationCSVMappingParametersList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationInput represents Amazon Kinesis Analytics Application Input
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-input.html
type KinesisAnalyticsApplicationInput struct {
	// The name prefix to use when creating the in-application streams.
	NamePrefix interface{} `json:"NamePrefix,omitempty"`

	// Describes the number of in-application streams to create.
	InputParallelism *KinesisAnalyticsApplicationInputParallelism `json:"InputParallelism,omitempty"`

	// Describes the format of the data in the streaming source, and how each
	// data element maps to corresponding columns in the in-application
	// stream that is being created.
	InputSchema *KinesisAnalyticsApplicationInputSchema `json:"InputSchema,omitempty"`

	// If the streaming source is an Amazon Kinesis Firehose delivery stream,
	// identifies the delivery stream's Amazon Resource Name (ARN) and an IAM
	// role that enables Kinesis Analytics to access the stream on your
	// behalf.
	KinesisFirehoseInput *KinesisAnalyticsApplicationKinesisFirehoseInput `json:"KinesisFirehoseInput,omitempty"`

	// If the streaming source is an Amazon Kinesis stream, identifies the
	// stream's ARN and an IAM role that enables Kinesis Analytics to access
	// the stream on your behalf.
	KinesisStreamsInput *KinesisAnalyticsApplicationKinesisStreamsInput `json:"KinesisStreamsInput,omitempty"`

	// The input processing configuration for the input. An input processor
	// transforms records as they are received from the stream, before the
	// application's SQL code executes. Currently, the only input processing
	// configuration available is InputLambdaProcessor.
	InputProcessingConfiguration *KinesisAnalyticsApplicationInputProcessingConfiguration `json:"InputProcessingConfiguration,omitempty"`
}

// KinesisAnalyticsApplicationInputList represents a list of KinesisAnalyticsApplicationInput
type KinesisAnalyticsApplicationInputList []KinesisAnalyticsApplicationInput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationInputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationInput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationInputList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationInput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationInputList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationInputLambdaProcessor represents Amazon Kinesis Analytics Application InputLambdaProcessor
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-inputlambdaprocessor.html
type KinesisAnalyticsApplicationInputLambdaProcessor struct {
	// The ARN of the AWS Lambda function that operates on records in the
	// stream.
	ResourceARN interface{} `json:"ResourceARN,omitempty"`

	// The ARN of the IAM role that is used to access the AWS Lambda
	// function.
	RoleARN interface{} `json:"RoleARN,omitempty"`
}

// KinesisAnalyticsApplicationInputLambdaProcessorList represents a list of KinesisAnalyticsApplicationInputLambdaProcessor
type KinesisAnalyticsApplicationInputLambdaProcessorList []KinesisAnalyticsApplicationInputLambdaProcessor

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationInputLambdaProcessorList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationInputLambdaProcessor{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationInputLambdaProcessorList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationInputLambdaProcessor{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationInputLambdaProcessorList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationInputParallelism represents Amazon Kinesis Analytics Application InputParallelism
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-inputparallelism.html
type KinesisAnalyticsApplicationInputParallelism struct {
	// The number of in-application streams to create.
	Count interface{} `json:"Count,omitempty"`
}

// KinesisAnalyticsApplicationInputParallelismList represents a list of KinesisAnalyticsApplicationInputParallelism
type KinesisAnalyticsApplicationInputParallelismList []KinesisAnalyticsApplicationInputParallelism

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationInputParallelismList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationInputParallelism{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationInputParallelismList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationInputParallelism{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationInputParallelismList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationInputProcessingConfiguration represents Amazon Kinesis Analytics Application InputProcessingConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-inputprocessingconfiguration.html
type KinesisAnalyticsApplicationInputProcessingConfiguration struct {
	// The InputLambdaProcessor that is used to preprocess the records in the
	// stream before they are processed by your application code.
	InputLambdaProcessor *KinesisAnalyticsApplicationInputLambdaProcessor `json:"InputLambdaProcessor,omitempty"`
}

// KinesisAnalyticsApplicationInputProcessingConfigurationList represents a list of KinesisAnalyticsApplicationInputProcessingConfiguration
type KinesisAnalyticsApplicationInputProcessingConfigurationList []KinesisAnalyticsApplicationInputProcessingConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationInputProcessingConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationInputProcessingConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationInputProcessingConfigurationList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationInputProcessingConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationInputProcessingConfigurationList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationInputSchema represents Amazon Kinesis Analytics Application InputSchema
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-inputschema.html
type KinesisAnalyticsApplicationInputSchema struct {
	// A list of RecordColumn objects.
	RecordColumns *KinesisAnalyticsApplicationRecordColumnList `json:"RecordColumns,omitempty"`

	// Specifies the encoding of the records in the streaming source; for
	// example, UTF-8.
	RecordEncoding interface{} `json:"RecordEncoding,omitempty"`

	// Specifies the format of the records on the streaming source.
	RecordFormat *KinesisAnalyticsApplicationRecordFormat `json:"RecordFormat,omitempty"`
}

// KinesisAnalyticsApplicationInputSchemaList represents a list of KinesisAnalyticsApplicationInputSchema
type KinesisAnalyticsApplicationInputSchemaList []KinesisAnalyticsApplicationInputSchema

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationInputSchemaList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationInputSchema{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationInputSchemaList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationInputSchema{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationInputSchemaList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationJSONMappingParameters represents Amazon Kinesis Analytics Application JSONMappingParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-jsonmappingparameters.html
type KinesisAnalyticsApplicationJSONMappingParameters struct {
	// The path to the top-level parent that contains the records (e.g.,
	// "$".)
	RecordRowPath interface{} `json:"RecordRowPath,omitempty"`
}

// KinesisAnalyticsApplicationJSONMappingParametersList represents a list of KinesisAnalyticsApplicationJSONMappingParameters
type KinesisAnalyticsApplicationJSONMappingParametersList []KinesisAnalyticsApplicationJSONMappingParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationJSONMappingParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationJSONMappingParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationJSONMappingParametersList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationJSONMappingParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationJSONMappingParametersList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationKinesisFirehoseInput represents Amazon Kinesis Analytics Application KinesisFirehoseInput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-kinesisfirehoseinput.html
type KinesisAnalyticsApplicationKinesisFirehoseInput struct {
	// The Amazon Resource Name (ARN) of the input Kinesis Firehose delivery
	// stream.
	ResourceARN interface{} `json:"ResourceARN,omitempty"`

	// The ARN of the IAM role that Kinesis Analytics can assume to access
	// the stream on your behalf.
	RoleARN interface{} `json:"RoleARN,omitempty"`
}

// KinesisAnalyticsApplicationKinesisFirehoseInputList represents a list of KinesisAnalyticsApplicationKinesisFirehoseInput
type KinesisAnalyticsApplicationKinesisFirehoseInputList []KinesisAnalyticsApplicationKinesisFirehoseInput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationKinesisFirehoseInputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationKinesisFirehoseInput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationKinesisFirehoseInputList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationKinesisFirehoseInput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationKinesisFirehoseInputList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationKinesisStreamsInput represents Amazon Kinesis Analytics Application KinesisStreamsInput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-kinesisstreamsinput.html
type KinesisAnalyticsApplicationKinesisStreamsInput struct {
	// The Amazon Resource Name (ARN) of the input Amazon Kinesis stream to
	// read.
	ResourceARN interface{} `json:"ResourceARN,omitempty"`

	// The ARN of the IAM role that Kinesis Analytics can assume to access
	// the stream on your behalf.
	RoleARN interface{} `json:"RoleARN,omitempty"`
}

// KinesisAnalyticsApplicationKinesisStreamsInputList represents a list of KinesisAnalyticsApplicationKinesisStreamsInput
type KinesisAnalyticsApplicationKinesisStreamsInputList []KinesisAnalyticsApplicationKinesisStreamsInput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationKinesisStreamsInputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationKinesisStreamsInput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationKinesisStreamsInputList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationKinesisStreamsInput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationKinesisStreamsInputList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationMappingParameters represents Amazon Kinesis Analytics Application MappingParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-mappingparameters.html
type KinesisAnalyticsApplicationMappingParameters struct {
	// Provides additional mapping information when the record format uses
	// delimiters (for example, CSV).
	CSVMappingParameters *KinesisAnalyticsApplicationCSVMappingParameters `json:"CSVMappingParameters,omitempty"`

	// Provides additional mapping information when JSON is the record format
	// on the streaming source.
	JSONMappingParameters *KinesisAnalyticsApplicationJSONMappingParameters `json:"JSONMappingParameters,omitempty"`
}

// KinesisAnalyticsApplicationMappingParametersList represents a list of KinesisAnalyticsApplicationMappingParameters
type KinesisAnalyticsApplicationMappingParametersList []KinesisAnalyticsApplicationMappingParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationMappingParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationMappingParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationMappingParametersList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationMappingParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationMappingParametersList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationRecordColumn represents Amazon Kinesis Analytics Application RecordColumn
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-recordcolumn.html
type KinesisAnalyticsApplicationRecordColumn struct {
	// Reference to the data element in the streaming input of the reference
	// data source.
	Mapping interface{} `json:"Mapping,omitempty"`

	// The name of the column created in the in-application input stream or
	// reference table.
	Name interface{} `json:"Name,omitempty"`

	// The type of column created in the in-application input stream or
	// reference table.
	SqlType interface{} `json:"SqlType,omitempty"`
}

// KinesisAnalyticsApplicationRecordColumnList represents a list of KinesisAnalyticsApplicationRecordColumn
type KinesisAnalyticsApplicationRecordColumnList []KinesisAnalyticsApplicationRecordColumn

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationRecordColumnList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationRecordColumn{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationRecordColumnList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationRecordColumn{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationRecordColumnList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationRecordFormat represents Amazon Kinesis Analytics Application RecordFormat
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-application-recordformat.html
type KinesisAnalyticsApplicationRecordFormat struct {
	// When configuring application input at the time of creating or updating
	// an application, provides additional mapping information specific to
	// the record format (such as JSON, CSV, or record fields delimited by
	// some delimiter) on the streaming source.
	MappingParameters *KinesisAnalyticsApplicationMappingParameters `json:"MappingParameters,omitempty"`

	// The type of record format (e.g CSV or JSON.)
	RecordFormatType interface{} `json:"RecordFormatType,omitempty"`
}

// KinesisAnalyticsApplicationRecordFormatList represents a list of KinesisAnalyticsApplicationRecordFormat
type KinesisAnalyticsApplicationRecordFormatList []KinesisAnalyticsApplicationRecordFormat

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationRecordFormatList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationRecordFormat{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationRecordFormatList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationRecordFormat{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationRecordFormatList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationOutputDestinationSchema represents Amazon Kinesis Analytics ApplicationOutput DestinationSchema
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationoutput-destinationschema.html
type KinesisAnalyticsApplicationOutputDestinationSchema struct {
	// Specifies the format of the records on the output stream.
	RecordFormatType interface{} `json:"RecordFormatType,omitempty"`
}

// KinesisAnalyticsApplicationOutputDestinationSchemaList represents a list of KinesisAnalyticsApplicationOutputDestinationSchema
type KinesisAnalyticsApplicationOutputDestinationSchemaList []KinesisAnalyticsApplicationOutputDestinationSchema

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationOutputDestinationSchemaList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationOutputDestinationSchema{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationOutputDestinationSchemaList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationOutputDestinationSchema{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationOutputDestinationSchemaList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationOutputKinesisFirehoseOutput represents Amazon Kinesis Analytics ApplicationOutput KinesisFirehoseOutput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationoutput-kinesisfirehoseoutput.html
type KinesisAnalyticsApplicationOutputKinesisFirehoseOutput struct {
	// The Amazon Resource Name (ARN) of the destination Amazon Kinesis
	// Firehose delivery stream to write to.
	ResourceARN interface{} `json:"ResourceARN,omitempty"`

	// The ARN of the IAM role that Amazon Kinesis Analytics can assume to
	// write to the destination stream on your behalf.
	RoleARN interface{} `json:"RoleARN,omitempty"`
}

// KinesisAnalyticsApplicationOutputKinesisFirehoseOutputList represents a list of KinesisAnalyticsApplicationOutputKinesisFirehoseOutput
type KinesisAnalyticsApplicationOutputKinesisFirehoseOutputList []KinesisAnalyticsApplicationOutputKinesisFirehoseOutput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationOutputKinesisFirehoseOutputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationOutputKinesisFirehoseOutput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationOutputKinesisFirehoseOutputList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationOutputKinesisFirehoseOutput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationOutputKinesisFirehoseOutputList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationOutputKinesisStreamsOutput represents Amazon Kinesis Analytics ApplicationOutput KinesisStreamsOutput
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationoutput-kinesisstreamsoutput.html
type KinesisAnalyticsApplicationOutputKinesisStreamsOutput struct {
	// The Amazon Resource Name (ARN) of the destination Amazon Kinesis
	// stream to write to.
	ResourceARN interface{} `json:"ResourceARN,omitempty"`

	// The ARN of the IAM role that Amazon Kinesis Analytics can assume to
	// write to the destination stream on your behalf.
	RoleARN interface{} `json:"RoleARN,omitempty"`
}

// KinesisAnalyticsApplicationOutputKinesisStreamsOutputList represents a list of KinesisAnalyticsApplicationOutputKinesisStreamsOutput
type KinesisAnalyticsApplicationOutputKinesisStreamsOutputList []KinesisAnalyticsApplicationOutputKinesisStreamsOutput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationOutputKinesisStreamsOutputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationOutputKinesisStreamsOutput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationOutputKinesisStreamsOutputList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationOutputKinesisStreamsOutput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationOutputKinesisStreamsOutputList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationOutputOutput represents Amazon Kinesis Analytics ApplicationOutput Output
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationoutput-output.html
type KinesisAnalyticsApplicationOutputOutput struct {
	// The data format when records are written to the destination.
	DestinationSchema *KinesisAnalyticsApplicationOutputDestinationSchema `json:"DestinationSchema,omitempty"`

	// Identifies an Amazon Kinesis Firehose delivery stream as the
	// destination.
	KinesisFirehoseOutput *KinesisAnalyticsApplicationOutputKinesisFirehoseOutput `json:"KinesisFirehoseOutput,omitempty"`

	// Identifies an Amazon Kinesis stream as the destination.
	KinesisStreamsOutput *KinesisAnalyticsApplicationOutputKinesisStreamsOutput `json:"KinesisStreamsOutput,omitempty"`

	// The name of the in-application stream.
	Name interface{} `json:"Name,omitempty"`
}

// KinesisAnalyticsApplicationOutputOutputList represents a list of KinesisAnalyticsApplicationOutputOutput
type KinesisAnalyticsApplicationOutputOutputList []KinesisAnalyticsApplicationOutputOutput

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationOutputOutputList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationOutputOutput{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationOutputOutputList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationOutputOutput{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationOutputOutputList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParameters represents Amazon Kinesis Analytics ApplicationReferenceDataSource CSVMappingParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationreferencedatasource-csvmappingparameters.html
type KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParameters struct {
	// The column delimiter. For example, in a CSV format, a comma (",") is
	// the typical column delimiter.
	RecordColumnDelimiter interface{} `json:"RecordColumnDelimiter,omitempty"`

	// The row delimiter. For example, in a CSV format, "\n" is the typical
	// row delimiter.
	RecordRowDelimiter interface{} `json:"RecordRowDelimiter,omitempty"`
}

// KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParametersList represents a list of KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParameters
type KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParametersList []KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParametersList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParametersList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParameters represents Amazon Kinesis Analytics ApplicationReferenceDataSource JSONMappingParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationreferencedatasource-jsonmappingparameters.html
type KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParameters struct {
	// Path to the top-level parent that contains the records (e.g., "$".)
	RecordRowPath interface{} `json:"RecordRowPath,omitempty"`
}

// KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParametersList represents a list of KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParameters
type KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParametersList []KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParametersList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParametersList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationReferenceDataSourceMappingParameters represents Amazon Kinesis Analytics ApplicationReferenceDataSource MappingParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationreferencedatasource-mappingparameters.html
type KinesisAnalyticsApplicationReferenceDataSourceMappingParameters struct {
	// Provides additional mapping information when the record format uses
	// delimiters (for example, CSV).
	CSVMappingParameters *KinesisAnalyticsApplicationReferenceDataSourceCSVMappingParameters `json:"CSVMappingParameters,omitempty"`

	// Provides additional mapping information when JSON is the record format
	// on the streaming source.
	JSONMappingParameters *KinesisAnalyticsApplicationReferenceDataSourceJSONMappingParameters `json:"JSONMappingParameters,omitempty"`
}

// KinesisAnalyticsApplicationReferenceDataSourceMappingParametersList represents a list of KinesisAnalyticsApplicationReferenceDataSourceMappingParameters
type KinesisAnalyticsApplicationReferenceDataSourceMappingParametersList []KinesisAnalyticsApplicationReferenceDataSourceMappingParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationReferenceDataSourceMappingParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationReferenceDataSourceMappingParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceMappingParametersList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationReferenceDataSourceMappingParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceMappingParametersList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationReferenceDataSourceRecordColumn represents Amazon Kinesis Analytics ApplicationReferenceDataSource RecordColumn
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationreferencedatasource-recordcolumn.html
type KinesisAnalyticsApplicationReferenceDataSourceRecordColumn struct {
	// The reference to the data element in the streaming input of the
	// reference data source.
	Mapping interface{} `json:"Mapping,omitempty"`

	// The name of the column created in the in-application input stream or
	// reference table.
	Name interface{} `json:"Name,omitempty"`

	// The SQL data type of the column created in the in-application input
	// stream or reference table.
	SqlType interface{} `json:"SqlType,omitempty"`
}

// KinesisAnalyticsApplicationReferenceDataSourceRecordColumnList represents a list of KinesisAnalyticsApplicationReferenceDataSourceRecordColumn
type KinesisAnalyticsApplicationReferenceDataSourceRecordColumnList []KinesisAnalyticsApplicationReferenceDataSourceRecordColumn

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationReferenceDataSourceRecordColumnList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationReferenceDataSourceRecordColumn{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceRecordColumnList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationReferenceDataSourceRecordColumn{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceRecordColumnList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationReferenceDataSourceRecordFormat represents Amazon Kinesis Analytics ApplicationReferenceDataSource RecordFormat
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationreferencedatasource-recordformat.html
type KinesisAnalyticsApplicationReferenceDataSourceRecordFormat struct {
	// When configuring application input at the time of creating or updating
	// an application, provides additional mapping information specific to
	// the record format (such as JSON, CSV, or record fields delimited by
	// some delimiter) on the streaming source.
	MappingParameters *KinesisAnalyticsApplicationReferenceDataSourceMappingParameters `json:"MappingParameters,omitempty"`

	// The type of record format (CSV or JSON).
	RecordFormatType interface{} `json:"RecordFormatType,omitempty"`
}

// KinesisAnalyticsApplicationReferenceDataSourceRecordFormatList represents a list of KinesisAnalyticsApplicationReferenceDataSourceRecordFormat
type KinesisAnalyticsApplicationReferenceDataSourceRecordFormatList []KinesisAnalyticsApplicationReferenceDataSourceRecordFormat

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationReferenceDataSourceRecordFormatList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationReferenceDataSourceRecordFormat{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceRecordFormatList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationReferenceDataSourceRecordFormat{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceRecordFormatList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSource represents Amazon Kinesis Analytics ApplicationReferenceDataSource ReferenceDataSource
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationreferencedatasource-referencedatasource.html
type KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSource struct {
	// The name of the in-application table to create.
	TableName interface{} `json:"TableName,omitempty"`

	// Identifies the Amazon S3 bucket and object that contains the reference
	// data. Also identifies the IAM role that Amazon Kinesis Analytics can
	// assume to read this object on your behalf.
	S3ReferenceDataSource *KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSource `json:"S3ReferenceDataSource,omitempty"`

	// Describes the format of the data in the streaming source, and how each
	// data element maps to corresponding columns that are created in the
	// in-application stream.
	ReferenceSchema *KinesisAnalyticsApplicationReferenceDataSourceReferenceSchema `json:"ReferenceSchema,omitempty"`
}

// KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSourceList represents a list of KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSource
type KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSourceList []KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSource

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSourceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSource{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSourceList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSource{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceReferenceDataSourceList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationReferenceDataSourceReferenceSchema represents Amazon Kinesis Analytics ApplicationReferenceDataSource ReferenceSchema
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationreferencedatasource-referenceschema.html
type KinesisAnalyticsApplicationReferenceDataSourceReferenceSchema struct {
	// A list of Amazon Kinesis Analytics ApplicationReferenceDataSource
	// RecordColumn objects.
	RecordColumns *KinesisAnalyticsApplicationReferenceDataSourceRecordColumnList `json:"RecordColumns,omitempty"`

	// Specifies the encoding of the records in the streaming source; For
	// example, UTF-8.
	RecordEncoding interface{} `json:"RecordEncoding,omitempty"`

	// Specifies the format of the records on the streaming source.
	RecordFormat *KinesisAnalyticsApplicationReferenceDataSourceRecordFormat `json:"RecordFormat,omitempty"`
}

// KinesisAnalyticsApplicationReferenceDataSourceReferenceSchemaList represents a list of KinesisAnalyticsApplicationReferenceDataSourceReferenceSchema
type KinesisAnalyticsApplicationReferenceDataSourceReferenceSchemaList []KinesisAnalyticsApplicationReferenceDataSourceReferenceSchema

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationReferenceDataSourceReferenceSchemaList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationReferenceDataSourceReferenceSchema{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceReferenceSchemaList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationReferenceDataSourceReferenceSchema{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceReferenceSchemaList(list)
		return nil
	}
	return err
}

// KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSource represents Amazon Kinesis Analytics ApplicationReferenceDataSource S3ReferenceDataSource
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationreferencedatasource-s3referencedatasource.html
type KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSource struct {
	// The Amazon Resource Name (ARN) of the Amazon S3 bucket.
	BucketARN interface{} `json:"BucketARN,omitempty"`

	// The object key name containing reference data.
	FileKey interface{} `json:"FileKey,omitempty"`

	// The ARN of the IAM role that the service can assume to read data on
	// your behalf.
	ReferenceRoleARN interface{} `json:"ReferenceRoleARN,omitempty"`
}

// KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSourceList represents a list of KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSource
type KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSourceList []KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSource

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSourceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSource{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSourceList{item}
		return nil
	}
	list := []KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSource{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisAnalyticsApplicationReferenceDataSourceS3ReferenceDataSourceList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamBufferingHints represents Amazon Kinesis Firehose DeliveryStream BufferingHints
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-bufferinghints.html
type KinesisFirehoseDeliveryStreamBufferingHints struct {
	// The length of time, in seconds, that Kinesis Firehose buffers incoming
	// data before delivering it to the destination. For valid values, see
	// the IntervalInSeconds content for the BufferingHints data type in the
	// Amazon Kinesis Firehose API Reference.
	IntervalInSeconds *IntegerExpr `json:"IntervalInSeconds,omitempty"`

	// The size of the buffer, in MBs, that Kinesis Firehose uses for
	// incoming data before delivering it to the destination. For valid
	// values, see the SizeInMBs content for the BufferingHints data type in
	// the Amazon Kinesis Firehose API Reference.
	SizeInMBs *IntegerExpr `json:"SizeInMBs,omitempty"`
}

// KinesisFirehoseDeliveryStreamBufferingHintsList represents a list of KinesisFirehoseDeliveryStreamBufferingHints
type KinesisFirehoseDeliveryStreamBufferingHintsList []KinesisFirehoseDeliveryStreamBufferingHints

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamBufferingHintsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamBufferingHints{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamBufferingHintsList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamBufferingHints{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamBufferingHintsList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamCloudWatchLoggingOptions represents Amazon Kinesis Firehose DeliveryStream CloudWatchLoggingOptions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-cloudwatchloggingoptions.html
type KinesisFirehoseDeliveryStreamCloudWatchLoggingOptions struct {
	// Indicates whether CloudWatch Logs logging is enabled.
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// The name of the CloudWatch Logs log group that contains the log stream
	// that Kinesis Firehose will use.
	LogGroupName *StringExpr `json:"LogGroupName,omitempty"`

	// The name of the CloudWatch Logs log stream that Kinesis Firehose uses
	// to send logs about data delivery.
	LogStreamName *StringExpr `json:"LogStreamName,omitempty"`
}

// KinesisFirehoseDeliveryStreamCloudWatchLoggingOptionsList represents a list of KinesisFirehoseDeliveryStreamCloudWatchLoggingOptions
type KinesisFirehoseDeliveryStreamCloudWatchLoggingOptionsList []KinesisFirehoseDeliveryStreamCloudWatchLoggingOptions

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamCloudWatchLoggingOptionsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamCloudWatchLoggingOptions{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamCloudWatchLoggingOptionsList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamCloudWatchLoggingOptions{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamCloudWatchLoggingOptionsList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamCopyCommand represents Amazon Kinesis Firehose DeliveryStream CopyCommand
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-copycommand.html
type KinesisFirehoseDeliveryStreamCopyCommand struct {
	// Parameters to use with the Amazon Redshift COPY command. For examples,
	// see the CopyOptions content for the CopyCommand data type in the
	// Amazon Kinesis Firehose API Reference.
	CopyOptions *StringExpr `json:"CopyOptions,omitempty"`

	// A comma-separated list of the column names in the table that Kinesis
	// Firehose copies data to.
	DataTableColumns *StringExpr `json:"DataTableColumns,omitempty"`

	// The name of the table where Kinesis Firehose adds the copied data.
	DataTableName *StringExpr `json:"DataTableName,omitempty"`
}

// KinesisFirehoseDeliveryStreamCopyCommandList represents a list of KinesisFirehoseDeliveryStreamCopyCommand
type KinesisFirehoseDeliveryStreamCopyCommandList []KinesisFirehoseDeliveryStreamCopyCommand

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamCopyCommandList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamCopyCommand{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamCopyCommandList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamCopyCommand{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamCopyCommandList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamElasticsearchBufferingHints represents Amazon Kinesis Firehose DeliveryStream ElasticsearchBufferingHints
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-elasticsearchbufferinghints.html
type KinesisFirehoseDeliveryStreamElasticsearchBufferingHints struct {
	// The length of time, in seconds, that Kinesis Firehose buffers incoming
	// data before delivering it to the destination. For valid values, see
	// the IntervalInSeconds content for the BufferingHints data type in the
	// Amazon Kinesis Firehose API Reference.
	IntervalInSeconds *IntegerExpr `json:"IntervalInSeconds,omitempty"`

	// The size of the buffer, in MBs, that Kinesis Firehose uses for
	// incoming data before delivering it to the destination. For valid
	// values, see the SizeInMBs content for the BufferingHints data type in
	// the Amazon Kinesis Firehose API Reference.
	SizeInMBs *IntegerExpr `json:"SizeInMBs,omitempty"`
}

// KinesisFirehoseDeliveryStreamElasticsearchBufferingHintsList represents a list of KinesisFirehoseDeliveryStreamElasticsearchBufferingHints
type KinesisFirehoseDeliveryStreamElasticsearchBufferingHintsList []KinesisFirehoseDeliveryStreamElasticsearchBufferingHints

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamElasticsearchBufferingHintsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamElasticsearchBufferingHints{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamElasticsearchBufferingHintsList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamElasticsearchBufferingHints{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamElasticsearchBufferingHintsList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamElasticsearchDestinationConfiguration represents Amazon Kinesis Firehose DeliveryStream ElasticsearchDestinationConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-elasticsearchdestinationconfiguration.html
type KinesisFirehoseDeliveryStreamElasticsearchDestinationConfiguration struct {
	// Configures how Kinesis Firehose buffers incoming data while delivering
	// it to the Amazon ES domain.
	BufferingHints *KinesisFirehoseDeliveryStreamElasticsearchBufferingHints `json:"BufferingHints,omitempty"`

	// The Amazon CloudWatch Logs logging options for the delivery stream.
	CloudWatchLoggingOptions *KinesisFirehoseDeliveryStreamCloudWatchLoggingOptions `json:"CloudWatchLoggingOptions,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon ES domain that Kinesis
	// Firehose delivers data to.
	DomainARN *StringExpr `json:"DomainARN,omitempty"`

	// The name of the Elasticsearch index to which Kinesis Firehose adds
	// data for indexing.
	IndexName *StringExpr `json:"IndexName,omitempty"`

	// The frequency of Elasticsearch index rotation. If you enable index
	// rotation, Kinesis Firehose appends a portion of the UTC arrival
	// timestamp to the specified index name, and rotates the appended
	// timestamp accordingly. For more information, see Index Rotation for
	// the Amazon ES Destination in the Amazon Kinesis Firehose Developer
	// Guide.
	IndexRotationPeriod *StringExpr `json:"IndexRotationPeriod,omitempty"`

	// The data processing configuration for the Kinesis Firehose delivery
	// stream.
	ProcessingConfiguration *KinesisFirehoseDeliveryStreamProcessingConfiguration `json:"ProcessingConfiguration,omitempty"`

	// The retry behavior when Kinesis Firehose is unable to deliver data to
	// Amazon ES.
	RetryOptions *KinesisFirehoseDeliveryStreamElasticsearchRetryOptions `json:"RetryOptions,omitempty"`

	// The ARN of the AWS Identity and Access Management (IAM) role that
	// grants Kinesis Firehose access to your Amazon S3 bucket, AWS KMS (if
	// you enable data encryption), and Amazon CloudWatch Logs (if you enable
	// logging).
	RoleARN *StringExpr `json:"RoleARN,omitempty"`

	// The condition under which Kinesis Firehose delivers data to Amazon
	// Simple Storage Service (Amazon S3). You can send Amazon S3 all
	// documents (all data) or only the documents that Kinesis Firehose could
	// not deliver to the Amazon ES destination. For more information and
	// valid values, see the S3BackupMode content for the
	// ElasticsearchDestinationConfiguration data type in the Amazon Kinesis
	// Firehose API Reference.
	S3BackupMode *StringExpr `json:"S3BackupMode,omitempty"`

	// The S3 bucket where Kinesis Firehose backs up incoming data.
	S3Configuration *KinesisFirehoseDeliveryStreamS3DestinationConfiguration `json:"S3Configuration,omitempty"`

	// The Elasticsearch type name that Amazon ES adds to documents when
	// indexing data.
	TypeName *StringExpr `json:"TypeName,omitempty"`
}

// KinesisFirehoseDeliveryStreamElasticsearchDestinationConfigurationList represents a list of KinesisFirehoseDeliveryStreamElasticsearchDestinationConfiguration
type KinesisFirehoseDeliveryStreamElasticsearchDestinationConfigurationList []KinesisFirehoseDeliveryStreamElasticsearchDestinationConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamElasticsearchDestinationConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamElasticsearchDestinationConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamElasticsearchDestinationConfigurationList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamElasticsearchDestinationConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamElasticsearchDestinationConfigurationList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamElasticsearchRetryOptions represents Amazon Kinesis Firehose DeliveryStream ElasticsearchRetryOptions
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-elasticsearchretryoptions.html
type KinesisFirehoseDeliveryStreamElasticsearchRetryOptions struct {
	// After an initial failure to deliver to Amazon ES, the total amount of
	// time during which Kinesis Firehose re-attempts delivery (including the
	// first attempt). If Kinesis Firehose can't deliver the data within the
	// specified time, it writes the data to the backup S3 bucket. For valid
	// values, see the DurationInSeconds content for the
	// ElasticsearchRetryOptions data type in the Amazon Kinesis Firehose API
	// Reference.
	DurationInSeconds *IntegerExpr `json:"DurationInSeconds,omitempty"`
}

// KinesisFirehoseDeliveryStreamElasticsearchRetryOptionsList represents a list of KinesisFirehoseDeliveryStreamElasticsearchRetryOptions
type KinesisFirehoseDeliveryStreamElasticsearchRetryOptionsList []KinesisFirehoseDeliveryStreamElasticsearchRetryOptions

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamElasticsearchRetryOptionsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamElasticsearchRetryOptions{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamElasticsearchRetryOptionsList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamElasticsearchRetryOptions{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamElasticsearchRetryOptionsList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamEncryptionConfiguration represents Amazon Kinesis Firehose DeliveryStream EncryptionConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-encryptionconfiguration.html
type KinesisFirehoseDeliveryStreamEncryptionConfiguration struct {
	// The AWS Key Management Service (AWS KMS) encryption key that Amazon S3
	// uses to encrypt your data.
	KMSEncryptionConfig *KinesisFirehoseDeliveryStreamKMSEncryptionConfig `json:"KMSEncryptionConfig,omitempty"`

	// Disables encryption. For valid values, see the NoEncryptionConfig
	// content for the EncryptionConfiguration data type in the Amazon
	// Kinesis Firehose API Reference.
	NoEncryptionConfig *StringExpr `json:"NoEncryptionConfig,omitempty"`
}

// KinesisFirehoseDeliveryStreamEncryptionConfigurationList represents a list of KinesisFirehoseDeliveryStreamEncryptionConfiguration
type KinesisFirehoseDeliveryStreamEncryptionConfigurationList []KinesisFirehoseDeliveryStreamEncryptionConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamEncryptionConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamEncryptionConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamEncryptionConfigurationList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamEncryptionConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamEncryptionConfigurationList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamExtendedS3DestinationConfiguration represents Amazon Kinesis Firehose DeliveryStream ExtendedS3DestinationConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-extendeds3destinationconfiguration.html
type KinesisFirehoseDeliveryStreamExtendedS3DestinationConfiguration struct {
	// The Amazon Resource Name (ARN) of the Amazon S3 bucket. For
	// constraints, see ExtendedS3DestinationConfiguration in the Amazon
	// Kinesis Firehose API Reference.
	BucketARN *StringExpr `json:"BucketARN,omitempty"`

	// The buffering option.
	BufferingHints *KinesisFirehoseDeliveryStreamBufferingHints `json:"BufferingHints,omitempty"`

	// The CloudWatch logging options for the Kinesis Firehose delivery
	// stream.
	CloudWatchLoggingOptions *KinesisFirehoseDeliveryStreamCloudWatchLoggingOptions `json:"CloudWatchLoggingOptions,omitempty"`

	// The compression format for the Kinesis Firehose delivery stream. The
	// default value is UNCOMPRESSED. For valid values, see
	// ExtendedS3DestinationConfiguration in the Amazon Kinesis Firehose API
	// Reference.
	CompressionFormat *StringExpr `json:"CompressionFormat,omitempty"`

	// The encryption configuration for the Kinesis Firehose delivery stream.
	// The default value is NoEncryption.
	EncryptionConfiguration *KinesisFirehoseDeliveryStreamEncryptionConfiguration `json:"EncryptionConfiguration,omitempty"`

	// The YYYY/MM/DD/HH time format prefix is automatically used for
	// delivered Amazon S3 files. For more information, see
	// ExtendedS3DestinationConfiguration in the Amazon Kinesis Firehose API
	// Reference.
	Prefix *StringExpr `json:"Prefix,omitempty"`

	// The data processing configuration for the Kinesis Firehose delivery
	// stream.
	ProcessingConfiguration *KinesisFirehoseDeliveryStreamProcessingConfiguration `json:"ProcessingConfiguration,omitempty"`

	// The ARN of the AWS credentials. For constraints, see
	// ExtendedS3DestinationConfiguration in the Amazon Kinesis Firehose API
	// Reference.
	RoleARN *StringExpr `json:"RoleARN,omitempty"`

	// The configuration for backup in Amazon S3.
	S3BackupConfiguration *KinesisFirehoseDeliveryStreamS3DestinationConfiguration `json:"S3BackupConfiguration,omitempty"`

	// The Amazon S3 backup mode. For valid values, see
	// ExtendedS3DestinationConfiguration in the Amazon Kinesis Firehose API
	// Reference.
	S3BackupMode *StringExpr `json:"S3BackupMode,omitempty"`
}

// KinesisFirehoseDeliveryStreamExtendedS3DestinationConfigurationList represents a list of KinesisFirehoseDeliveryStreamExtendedS3DestinationConfiguration
type KinesisFirehoseDeliveryStreamExtendedS3DestinationConfigurationList []KinesisFirehoseDeliveryStreamExtendedS3DestinationConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamExtendedS3DestinationConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamExtendedS3DestinationConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamExtendedS3DestinationConfigurationList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamExtendedS3DestinationConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamExtendedS3DestinationConfigurationList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamKinesisStreamSourceConfiguration represents Amazon Kinesis Firehose DeliveryStream KinesisStreamSourceConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-kinesisstreamsourceconfiguration.html
type KinesisFirehoseDeliveryStreamKinesisStreamSourceConfiguration struct {
	// The Amazon Resource Name (ARN) of the source Kinesis stream.
	KinesisStreamARN interface{} `json:"KinesisStreamARN,omitempty"`

	// The Amazon Resource Name (ARN) of the role that provides access to the
	// source Kinesis stream.
	RoleARN interface{} `json:"RoleARN,omitempty"`
}

// KinesisFirehoseDeliveryStreamKinesisStreamSourceConfigurationList represents a list of KinesisFirehoseDeliveryStreamKinesisStreamSourceConfiguration
type KinesisFirehoseDeliveryStreamKinesisStreamSourceConfigurationList []KinesisFirehoseDeliveryStreamKinesisStreamSourceConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamKinesisStreamSourceConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamKinesisStreamSourceConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamKinesisStreamSourceConfigurationList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamKinesisStreamSourceConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamKinesisStreamSourceConfigurationList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamKMSEncryptionConfig represents Amazon Kinesis Firehose DeliveryStream KMSEncryptionConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-kmsencryptionconfig.html
type KinesisFirehoseDeliveryStreamKMSEncryptionConfig struct {
	// The Amazon Resource Name (ARN) of the AWS KMS encryption key that
	// Amazon S3 uses to encrypt data delivered by the Kinesis Firehose
	// stream. The key must belong to the same region as the destination S3
	// bucket.
	AWSKMSKeyARN *StringExpr `json:"AWSKMSKeyARN,omitempty"`
}

// KinesisFirehoseDeliveryStreamKMSEncryptionConfigList represents a list of KinesisFirehoseDeliveryStreamKMSEncryptionConfig
type KinesisFirehoseDeliveryStreamKMSEncryptionConfigList []KinesisFirehoseDeliveryStreamKMSEncryptionConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamKMSEncryptionConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamKMSEncryptionConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamKMSEncryptionConfigList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamKMSEncryptionConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamKMSEncryptionConfigList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamProcessingConfiguration represents Amazon Kinesis Firehose DeliveryStream ProcessingConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-processingconfiguration.html
type KinesisFirehoseDeliveryStreamProcessingConfiguration struct {
	// Indicates whether data processing is enabled (true) or disabled
	// (false).
	Enabled *BoolExpr `json:"Enabled,omitempty"`

	// The data processors.
	Processors *KinesisFirehoseDeliveryStreamProcessorList `json:"Processors,omitempty"`
}

// KinesisFirehoseDeliveryStreamProcessingConfigurationList represents a list of KinesisFirehoseDeliveryStreamProcessingConfiguration
type KinesisFirehoseDeliveryStreamProcessingConfigurationList []KinesisFirehoseDeliveryStreamProcessingConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamProcessingConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamProcessingConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamProcessingConfigurationList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamProcessingConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamProcessingConfigurationList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamProcessor represents Amazon Kinesis Firehose DeliveryStream Processor
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-processor.html
type KinesisFirehoseDeliveryStreamProcessor struct {
	// The processor parameters.
	Parameters *KinesisFirehoseDeliveryStreamProcessorParameterList `json:"Parameters,omitempty"`

	// The type of processor. Valid values: Lambda.
	Type *StringExpr `json:"Type,omitempty"`
}

// KinesisFirehoseDeliveryStreamProcessorList represents a list of KinesisFirehoseDeliveryStreamProcessor
type KinesisFirehoseDeliveryStreamProcessorList []KinesisFirehoseDeliveryStreamProcessor

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamProcessorList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamProcessor{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamProcessorList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamProcessor{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamProcessorList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamProcessorParameter represents Amazon Kinesis Firehose DeliveryStream ProcessorParameter
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-processorparameter.html
type KinesisFirehoseDeliveryStreamProcessorParameter struct {
	// The name of the parameter.
	ParameterName *StringExpr `json:"ParameterName,omitempty"`

	// The parameter value.
	ParameterValue *StringExpr `json:"ParameterValue,omitempty"`
}

// KinesisFirehoseDeliveryStreamProcessorParameterList represents a list of KinesisFirehoseDeliveryStreamProcessorParameter
type KinesisFirehoseDeliveryStreamProcessorParameterList []KinesisFirehoseDeliveryStreamProcessorParameter

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamProcessorParameterList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamProcessorParameter{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamProcessorParameterList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamProcessorParameter{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamProcessorParameterList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamRedshiftDestinationConfiguration represents Amazon Kinesis Firehose DeliveryStream RedshiftDestinationConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-redshiftdestinationconfiguration.html
type KinesisFirehoseDeliveryStreamRedshiftDestinationConfiguration struct {
	// The Amazon CloudWatch Logs logging options for the delivery stream.
	CloudWatchLoggingOptions *KinesisFirehoseDeliveryStreamCloudWatchLoggingOptions `json:"CloudWatchLoggingOptions,omitempty"`

	// The connection string that Kinesis Firehose uses to connect to the
	// Amazon Redshift cluster.
	ClusterJDBCURL *StringExpr `json:"ClusterJDBCURL,omitempty"`

	// Configures the Amazon Redshift COPY command that Kinesis Firehose uses
	// to load data into the cluster from the Amazon S3 bucket.
	CopyCommand *KinesisFirehoseDeliveryStreamCopyCommand `json:"CopyCommand,omitempty"`

	// The password for the Amazon Redshift user that you specified in the
	// Username property.
	Password *StringExpr `json:"Password,omitempty"`

	// The data processing configuration for the Kinesis Firehose delivery
	// stream.
	ProcessingConfiguration *KinesisFirehoseDeliveryStreamProcessingConfiguration `json:"ProcessingConfiguration,omitempty"`

	// The ARN of the AWS Identity and Access Management (IAM) role that
	// grants Kinesis Firehose access to your Amazon S3 bucket and AWS KMS
	// (if you enable data encryption).
	RoleARN *StringExpr `json:"RoleARN,omitempty"`

	// The S3 bucket where Kinesis Firehose first delivers data. After the
	// data is in the bucket, Kinesis Firehose uses the COPY command to load
	// the data into the Amazon Redshift cluster. For the Amazon S3 bucket's
	// compression format, don't specify SNAPPY or ZIP because the Amazon
	// Redshift COPY command doesn't support them.
	S3Configuration *KinesisFirehoseDeliveryStreamS3DestinationConfiguration `json:"S3Configuration,omitempty"`

	// The Amazon Redshift user that has permission to access the Amazon
	// Redshift cluster. This user must have INSERT privileges for copying
	// data from the Amazon S3 bucket to the cluster.
	Username *StringExpr `json:"Username,omitempty"`
}

// KinesisFirehoseDeliveryStreamRedshiftDestinationConfigurationList represents a list of KinesisFirehoseDeliveryStreamRedshiftDestinationConfiguration
type KinesisFirehoseDeliveryStreamRedshiftDestinationConfigurationList []KinesisFirehoseDeliveryStreamRedshiftDestinationConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamRedshiftDestinationConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamRedshiftDestinationConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamRedshiftDestinationConfigurationList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamRedshiftDestinationConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamRedshiftDestinationConfigurationList(list)
		return nil
	}
	return err
}

// KinesisFirehoseDeliveryStreamS3DestinationConfiguration represents Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-s3destinationconfiguration.html
type KinesisFirehoseDeliveryStreamS3DestinationConfiguration struct {
	// The Amazon Resource Name (ARN) of the Amazon S3 bucket to send data
	// to.
	BucketARN *StringExpr `json:"BucketARN,omitempty"`

	// Configures how Kinesis Firehose buffers incoming data while delivering
	// it to the Amazon S3 bucket.
	BufferingHints *KinesisFirehoseDeliveryStreamBufferingHints `json:"BufferingHints,omitempty"`

	// The Amazon CloudWatch Logs logging options for the delivery stream.
	CloudWatchLoggingOptions *KinesisFirehoseDeliveryStreamCloudWatchLoggingOptions `json:"CloudWatchLoggingOptions,omitempty"`

	// The type of compression that Kinesis Firehose uses to compress the
	// data that it delivers to the Amazon S3 bucket. For valid values, see
	// the CompressionFormat content for the S3DestinationConfiguration data
	// type in the Amazon Kinesis Firehose API Reference.
	CompressionFormat *StringExpr `json:"CompressionFormat,omitempty"`

	// Configures Amazon Simple Storage Service (Amazon S3) server-side
	// encryption. Kinesis Firehose uses AWS Key Management Service (AWS KMS)
	// to encrypt the data that it delivers to your Amazon S3 bucket.
	EncryptionConfiguration *KinesisFirehoseDeliveryStreamEncryptionConfiguration `json:"EncryptionConfiguration,omitempty"`

	// A prefix that Kinesis Firehose adds to the files that it delivers to
	// the Amazon S3 bucket. The prefix helps you identify the files that
	// Kinesis Firehose delivered.
	Prefix *StringExpr `json:"Prefix,omitempty"`

	// The ARN of an AWS Identity and Access Management (IAM) role that
	// grants Kinesis Firehose access to your Amazon S3 bucket and AWS KMS
	// (if you enable data encryption).
	RoleARN *StringExpr `json:"RoleARN,omitempty"`
}

// KinesisFirehoseDeliveryStreamS3DestinationConfigurationList represents a list of KinesisFirehoseDeliveryStreamS3DestinationConfiguration
type KinesisFirehoseDeliveryStreamS3DestinationConfigurationList []KinesisFirehoseDeliveryStreamS3DestinationConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *KinesisFirehoseDeliveryStreamS3DestinationConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := KinesisFirehoseDeliveryStreamS3DestinationConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = KinesisFirehoseDeliveryStreamS3DestinationConfigurationList{item}
		return nil
	}
	list := []KinesisFirehoseDeliveryStreamS3DestinationConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = KinesisFirehoseDeliveryStreamS3DestinationConfigurationList(list)
		return nil
	}
	return err
}

// LambdaAliasAliasRoutingConfiguration represents AWS Lambda Alias AliasRoutingConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-aliasroutingconfiguration.html
type LambdaAliasAliasRoutingConfiguration struct {
	// The percentage of traffic that will invoke the updated function
	// version.
	AdditionalVersionWeights *LambdaAliasVersionWeightList `json:"AdditionalVersionWeights,omitempty"`
}

// LambdaAliasAliasRoutingConfigurationList represents a list of LambdaAliasAliasRoutingConfiguration
type LambdaAliasAliasRoutingConfigurationList []LambdaAliasAliasRoutingConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *LambdaAliasAliasRoutingConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := LambdaAliasAliasRoutingConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = LambdaAliasAliasRoutingConfigurationList{item}
		return nil
	}
	list := []LambdaAliasAliasRoutingConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = LambdaAliasAliasRoutingConfigurationList(list)
		return nil
	}
	return err
}

// LambdaAliasVersionWeight represents AWS Lambda Alias VersionWeight
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-versionweight.html
type LambdaAliasVersionWeight struct {
	// Function version to which the alias points.
	FunctionVersion interface{} `json:"FunctionVersion,omitempty"`

	// The percentage of traffic that will invoke the function version.
	FunctionWeight interface{} `json:"FunctionWeight,omitempty"`
}

// LambdaAliasVersionWeightList represents a list of LambdaAliasVersionWeight
type LambdaAliasVersionWeightList []LambdaAliasVersionWeight

// UnmarshalJSON sets the object from the provided JSON representation
func (l *LambdaAliasVersionWeightList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := LambdaAliasVersionWeight{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = LambdaAliasVersionWeightList{item}
		return nil
	}
	list := []LambdaAliasVersionWeight{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = LambdaAliasVersionWeightList(list)
		return nil
	}
	return err
}

// LambdaFunctionDeadLetterConfig represents AWS Lambda Function DeadLetterConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html
type LambdaFunctionDeadLetterConfig struct {
	// The Amazon Resource Name (ARN) of a resource where Lambda delivers
	// unprocessed events, such as an Amazon SNS topic or Amazon Simple Queue
	// Service (Amazon SQS) queue. For the Lambda function execution role,
	// you must explicitly provide the relevant permissions so that access to
	// your DLQ resource is part of the execution role for your Lambda
	// function.
	TargetArn *StringExpr `json:"TargetArn,omitempty"`
}

// LambdaFunctionDeadLetterConfigList represents a list of LambdaFunctionDeadLetterConfig
type LambdaFunctionDeadLetterConfigList []LambdaFunctionDeadLetterConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *LambdaFunctionDeadLetterConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := LambdaFunctionDeadLetterConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = LambdaFunctionDeadLetterConfigList{item}
		return nil
	}
	list := []LambdaFunctionDeadLetterConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = LambdaFunctionDeadLetterConfigList(list)
		return nil
	}
	return err
}

// LambdaFunctionEnvironment represents AWS Lambda Function Environment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html
type LambdaFunctionEnvironment struct {
	// A map of key-value pairs that the Lambda function can access.
	Variables interface{} `json:"Variables,omitempty"`
}

// LambdaFunctionEnvironmentList represents a list of LambdaFunctionEnvironment
type LambdaFunctionEnvironmentList []LambdaFunctionEnvironment

// UnmarshalJSON sets the object from the provided JSON representation
func (l *LambdaFunctionEnvironmentList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := LambdaFunctionEnvironment{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = LambdaFunctionEnvironmentList{item}
		return nil
	}
	list := []LambdaFunctionEnvironment{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = LambdaFunctionEnvironmentList(list)
		return nil
	}
	return err
}

// LambdaFunctionCode represents AWS Lambda Function Code
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html
type LambdaFunctionCode struct {
	// The name of the Amazon S3 bucket where the .zip file that contains
	// your deployment package is stored. This bucket must reside in the same
	// AWS Region that you're creating the Lambda function in. You can
	// specify a bucket from another AWS account as long as the Lambda
	// function and the bucket are in the same region.
	S3Bucket *StringExpr `json:"S3Bucket,omitempty"`

	// The location and name of the .zip file that contains your source code.
	// If you specify this property, you must also specify the S3Bucket
	// property.
	S3Key *StringExpr `json:"S3Key,omitempty"`

	// If you have S3 versioning enabled, the version ID of the.zip file that
	// contains your source code. You can specify this property only if you
	// specify the S3Bucket and S3Key properties.
	S3ObjectVersion *StringExpr `json:"S3ObjectVersion,omitempty"`

	// For nodejs4.3, nodejs6.10, python2.7, and python3.6 runtime
	// environments, the source code of your Lambda function. You can't use
	// this property with other runtime environments.
	ZipFile *StringExpr `json:"ZipFile,omitempty"`
}

// LambdaFunctionCodeList represents a list of LambdaFunctionCode
type LambdaFunctionCodeList []LambdaFunctionCode

// UnmarshalJSON sets the object from the provided JSON representation
func (l *LambdaFunctionCodeList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := LambdaFunctionCode{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = LambdaFunctionCodeList{item}
		return nil
	}
	list := []LambdaFunctionCode{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = LambdaFunctionCodeList(list)
		return nil
	}
	return err
}

// LambdaFunctionTracingConfig represents AWS Lambda Function TracingConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html
type LambdaFunctionTracingConfig struct {
	// Specifies how Lambda traces a request. The default mode is
	// PassThrough. For more information, see TracingConfig in the AWS Lambda
	// Developer Guide.
	Mode *StringExpr `json:"Mode,omitempty"`
}

// LambdaFunctionTracingConfigList represents a list of LambdaFunctionTracingConfig
type LambdaFunctionTracingConfigList []LambdaFunctionTracingConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *LambdaFunctionTracingConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := LambdaFunctionTracingConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = LambdaFunctionTracingConfigList{item}
		return nil
	}
	list := []LambdaFunctionTracingConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = LambdaFunctionTracingConfigList(list)
		return nil
	}
	return err
}

// LambdaFunctionVpcConfig represents AWS Lambda Function VpcConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html
type LambdaFunctionVpcConfig struct {
	// A list of one or more security groups IDs in the VPC that includes the
	// resources to which your Lambda function requires access.
	SecurityGroupIds interface{} `json:"SecurityGroupIds,omitempty"`

	// A list of one or more subnet IDs in the VPC that includes the
	// resources to which your Lambda function requires access.
	SubnetIds interface{} `json:"SubnetIds,omitempty"`
}

// LambdaFunctionVpcConfigList represents a list of LambdaFunctionVpcConfig
type LambdaFunctionVpcConfigList []LambdaFunctionVpcConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *LambdaFunctionVpcConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := LambdaFunctionVpcConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = LambdaFunctionVpcConfigList{item}
		return nil
	}
	list := []LambdaFunctionVpcConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = LambdaFunctionVpcConfigList(list)
		return nil
	}
	return err
}

// Name represents Name Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html
type Name struct {
}

// NameList represents a list of Name
type NameList []Name

// UnmarshalJSON sets the object from the provided JSON representation
func (l *NameList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Name{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = NameList{item}
		return nil
	}
	list := []Name{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = NameList(list)
		return nil
	}
	return err
}

// OpsWorksAppDataSource represents AWS OpsWorks App DataSource
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-datasource.html
type OpsWorksAppDataSource struct {
	// The ARN of the data source.
	Arn *StringExpr `json:"Arn,omitempty"`

	// The name of the database.
	DatabaseName *StringExpr `json:"DatabaseName,omitempty"`

	// The type of the data source, such as AutoSelectOpsworksMysqlInstance,
	// OpsworksMysqlInstance, or RdsDbInstance. For valid values, see the
	// DataSource type in the AWS OpsWorks Stacks API Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// OpsWorksAppDataSourceList represents a list of OpsWorksAppDataSource
type OpsWorksAppDataSourceList []OpsWorksAppDataSource

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksAppDataSourceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksAppDataSource{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksAppDataSourceList{item}
		return nil
	}
	list := []OpsWorksAppDataSource{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksAppDataSourceList(list)
		return nil
	}
	return err
}

// OpsWorksAppEnvironment represents AWS OpsWorks App Environment
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-environment.html
type OpsWorksAppEnvironment struct {
	// The name of the environment variable, which can consist of up to 64
	// characters. You can use upper and lowercase letters, numbers, and
	// underscores (_), but the name must start with a letter or underscore.
	Key *StringExpr `json:"Key,omitempty"`

	// Indicates whether the value of the environment variable is concealed,
	// such as with a DescribeApps response. To conceal an environment
	// variable's value, set the value to true.
	Secure *BoolExpr `json:"Secure,omitempty"`

	// The value of the environment variable, which can be empty. You can
	// specify a value of up to 256 characters.
	Value *StringExpr `json:"Value,omitempty"`
}

// OpsWorksAppEnvironmentList represents a list of OpsWorksAppEnvironment
type OpsWorksAppEnvironmentList []OpsWorksAppEnvironment

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksAppEnvironmentList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksAppEnvironment{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksAppEnvironmentList{item}
		return nil
	}
	list := []OpsWorksAppEnvironment{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksAppEnvironmentList(list)
		return nil
	}
	return err
}

// OpsWorksAutoScalingThresholds represents AWS OpsWorks AutoScalingThresholds Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds.html
type OpsWorksAutoScalingThresholds struct {
	// The percentage of CPU utilization that triggers the starting or
	// stopping of instances (scaling).
	CpuThreshold *IntegerExpr `json:"CpuThreshold,omitempty"`

	// The amount of time (in minutes) after a scaling event occurs that AWS
	// OpsWorks should ignore metrics and not start any additional scaling
	// events.
	IgnoreMetricsTime *IntegerExpr `json:"IgnoreMetricsTime,omitempty"`

	// The number of instances to add or remove when the load exceeds a
	// threshold.
	InstanceCount *IntegerExpr `json:"InstanceCount,omitempty"`

	// The degree of system load that triggers the starting or stopping of
	// instances (scaling). For more information about how load is computed,
	// see Load (computing).
	LoadThreshold *IntegerExpr `json:"LoadThreshold,omitempty"`

	// The percentage of memory consumption that triggers the starting or
	// stopping of instances (scaling).
	MemoryThreshold *IntegerExpr `json:"MemoryThreshold,omitempty"`

	// The amount of time, in minutes, that the load must exceed a threshold
	// before instances are added or removed.
	ThresholdsWaitTime *IntegerExpr `json:"ThresholdsWaitTime,omitempty"`
}

// OpsWorksAutoScalingThresholdsList represents a list of OpsWorksAutoScalingThresholds
type OpsWorksAutoScalingThresholdsList []OpsWorksAutoScalingThresholds

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksAutoScalingThresholdsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksAutoScalingThresholds{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksAutoScalingThresholdsList{item}
		return nil
	}
	list := []OpsWorksAutoScalingThresholds{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksAutoScalingThresholdsList(list)
		return nil
	}
	return err
}

// OpsWorksChefConfiguration represents AWS OpsWorks ChefConfiguration Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-chefconfiguration.html
type OpsWorksChefConfiguration struct {
	// The Berkshelf version.
	BerkshelfVersion *StringExpr `json:"BerkshelfVersion,omitempty"`

	// Whether to enable Berkshelf.
	ManageBerkshelf *BoolExpr `json:"ManageBerkshelf,omitempty"`
}

// OpsWorksChefConfigurationList represents a list of OpsWorksChefConfiguration
type OpsWorksChefConfigurationList []OpsWorksChefConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksChefConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksChefConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksChefConfigurationList{item}
		return nil
	}
	list := []OpsWorksChefConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksChefConfigurationList(list)
		return nil
	}
	return err
}

// OpsWorksLayerLifeCycleConfiguration represents AWS OpsWorks Layer LifeCycleConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-lifecycleeventconfiguration.html
type OpsWorksLayerLifeCycleConfiguration struct {
	// Specifies the shutdown event configuration for a layer.
	ShutdownEventConfiguration *OpsWorksLayerLifeCycleConfigurationShutdownEventConfiguration `json:"ShutdownEventConfiguration,omitempty"`
}

// OpsWorksLayerLifeCycleConfigurationList represents a list of OpsWorksLayerLifeCycleConfiguration
type OpsWorksLayerLifeCycleConfigurationList []OpsWorksLayerLifeCycleConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksLayerLifeCycleConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksLayerLifeCycleConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksLayerLifeCycleConfigurationList{item}
		return nil
	}
	list := []OpsWorksLayerLifeCycleConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksLayerLifeCycleConfigurationList(list)
		return nil
	}
	return err
}

// OpsWorksLayerLifeCycleConfigurationShutdownEventConfiguration represents AWS OpsWorks Layer LifeCycleConfiguration ShutdownEventConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration.html
type OpsWorksLayerLifeCycleConfigurationShutdownEventConfiguration struct {
	// Indicates whether to wait for connections to drain from the Elastic
	// Load Balancing load balancers.
	DelayUntilElbConnectionsDrained *BoolExpr `json:"DelayUntilElbConnectionsDrained,omitempty"`

	// The time, in seconds, that AWS OpsWorks waits after a shutdown event
	// has been triggered before shutting down an instance.
	ExecutionTimeout *IntegerExpr `json:"ExecutionTimeout,omitempty"`
}

// OpsWorksLayerLifeCycleConfigurationShutdownEventConfigurationList represents a list of OpsWorksLayerLifeCycleConfigurationShutdownEventConfiguration
type OpsWorksLayerLifeCycleConfigurationShutdownEventConfigurationList []OpsWorksLayerLifeCycleConfigurationShutdownEventConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksLayerLifeCycleConfigurationShutdownEventConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksLayerLifeCycleConfigurationShutdownEventConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksLayerLifeCycleConfigurationShutdownEventConfigurationList{item}
		return nil
	}
	list := []OpsWorksLayerLifeCycleConfigurationShutdownEventConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksLayerLifeCycleConfigurationShutdownEventConfigurationList(list)
		return nil
	}
	return err
}

// OpsWorksLoadBasedAutoScaling represents AWS OpsWorks LoadBasedAutoScaling Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-loadbasedautoscaling.html
type OpsWorksLoadBasedAutoScaling struct {
	// The threshold below which the instances are scaled down (stopped). If
	// the load falls below this threshold for a specified amount of time,
	// AWS OpsWorks stops a specified number of instances.
	DownScaling *OpsWorksAutoScalingThresholds `json:"DownScaling,omitempty"`

	// Whether to enable automatic load-based scaling for the layer.
	Enable *BoolExpr `json:"Enable,omitempty"`

	// The threshold above which the instances are scaled up (added). If the
	// load exceeds this thresholds for a specified amount of time, AWS
	// OpsWorks starts a specified number of instances.
	UpScaling *OpsWorksAutoScalingThresholds `json:"UpScaling,omitempty"`
}

// OpsWorksLoadBasedAutoScalingList represents a list of OpsWorksLoadBasedAutoScaling
type OpsWorksLoadBasedAutoScalingList []OpsWorksLoadBasedAutoScaling

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksLoadBasedAutoScalingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksLoadBasedAutoScaling{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksLoadBasedAutoScalingList{item}
		return nil
	}
	list := []OpsWorksLoadBasedAutoScaling{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksLoadBasedAutoScalingList(list)
		return nil
	}
	return err
}

// OpsWorksInstanceBlockDeviceMapping represents AWS OpsWorks Instance BlockDeviceMapping
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-instance-blockdevicemapping.html
type OpsWorksInstanceBlockDeviceMapping struct {
	// The name of the device that is exposed to the instance, such as
	// /dev/dsh or xvdh. For the root device, you can use the explicit device
	// name or you can set this parameter to ROOT_DEVICE. If you set the
	// parameter to ROOT_DEVICE, AWS OpsWorks provides the correct device
	// name.
	DeviceName *StringExpr `json:"DeviceName,omitempty"`

	// Configuration information about the Amazon Elastic Block Store (Amazon
	// EBS) volume.
	Ebs *OpsWorksInstanceBlockDeviceMappingEbsBlockDevice `json:"Ebs,omitempty"`

	// Suppresses the device that is specified in the block device mapping of
	// the AWS OpsWorks instance Amazon Machine Image (AMI).
	NoDevice *StringExpr `json:"NoDevice,omitempty"`

	// The name of the virtual device. The name must be in the form
	// ephemeralX, where X is a number equal to or greater than zero (0), for
	// example, ephemeral0.
	VirtualName *StringExpr `json:"VirtualName,omitempty"`
}

// OpsWorksInstanceBlockDeviceMappingList represents a list of OpsWorksInstanceBlockDeviceMapping
type OpsWorksInstanceBlockDeviceMappingList []OpsWorksInstanceBlockDeviceMapping

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksInstanceBlockDeviceMappingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksInstanceBlockDeviceMapping{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksInstanceBlockDeviceMappingList{item}
		return nil
	}
	list := []OpsWorksInstanceBlockDeviceMapping{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksInstanceBlockDeviceMappingList(list)
		return nil
	}
	return err
}

// OpsWorksInstanceBlockDeviceMappingEbsBlockDevice represents AWS OpsWorks Instance BlockDeviceMapping EbsBlockDevice
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-instance-blockdevicemapping-ebsblockdevice.html
type OpsWorksInstanceBlockDeviceMappingEbsBlockDevice struct {
	// Indicates whether to delete the volume when the instance is
	// terminated.
	DeleteOnTermination *BoolExpr `json:"DeleteOnTermination,omitempty"`

	// The number of I/O operations per second (IOPS) that the volume
	// supports. For more information, see Iops for the EbsBlockDevice action
	// in the Amazon EC2 API Reference.
	Iops *IntegerExpr `json:"Iops,omitempty"`

	// The snapshot ID of the volume that you want to use. If you specify
	// both the SnapshotId and VolumeSize properties, VolumeSize must be
	// equal to or greater than the size of the snapshot.
	SnapshotId *StringExpr `json:"SnapshotId,omitempty"`

	// The volume size, in Gibibytes (GiB). If you specify both the
	// SnapshotId and VolumeSize properties, VolumeSize must be equal to or
	// greater than the size of the snapshot. For more information about
	// specifying volume size, see VolumeSize for the EbsBlockDevice action
	// in the Amazon EC2 API Reference.
	VolumeSize *IntegerExpr `json:"VolumeSize,omitempty"`

	// The volume type. For more information about specifying the volume
	// type, see VolumeType for the EbsBlockDevice action in the Amazon EC2
	// API Reference.
	VolumeType *StringExpr `json:"VolumeType,omitempty"`
}

// OpsWorksInstanceBlockDeviceMappingEbsBlockDeviceList represents a list of OpsWorksInstanceBlockDeviceMappingEbsBlockDevice
type OpsWorksInstanceBlockDeviceMappingEbsBlockDeviceList []OpsWorksInstanceBlockDeviceMappingEbsBlockDevice

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksInstanceBlockDeviceMappingEbsBlockDeviceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksInstanceBlockDeviceMappingEbsBlockDevice{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksInstanceBlockDeviceMappingEbsBlockDeviceList{item}
		return nil
	}
	list := []OpsWorksInstanceBlockDeviceMappingEbsBlockDevice{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksInstanceBlockDeviceMappingEbsBlockDeviceList(list)
		return nil
	}
	return err
}

// OpsWorksRecipes represents AWS OpsWorks Recipes Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-recipes.html
type OpsWorksRecipes struct {
	// Custom recipe names to be run following a Configure event. The event
	// occurs on all of the stack's instances when an instance enters or
	// leaves the online state.
	Configure interface{} `json:"Configure,omitempty"`

	// Custom recipe names to be run following a Deploy event. The event
	// occurs when you run a deploy command, typically to deploy an
	// application to a set of application server instances.
	Deploy interface{} `json:"Deploy,omitempty"`

	// Custom recipe names to be run following a Setup event. This event
	// occurs on a new instance after it successfully boots.
	Setup interface{} `json:"Setup,omitempty"`

	// Custom recipe names to be run following a Shutdown event. This event
	// occurs after you direct AWS OpsWorks to shut an instance down before
	// the associated Amazon EC2 instance is actually terminated.
	Shutdown interface{} `json:"Shutdown,omitempty"`

	// Custom recipe names to be run following a Undeploy event. This event
	// occurs when you delete an app or run an undeploy command to remove an
	// app from a set of application server instances.
	Undeploy interface{} `json:"Undeploy,omitempty"`
}

// OpsWorksRecipesList represents a list of OpsWorksRecipes
type OpsWorksRecipesList []OpsWorksRecipes

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksRecipesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksRecipes{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksRecipesList{item}
		return nil
	}
	list := []OpsWorksRecipes{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksRecipesList(list)
		return nil
	}
	return err
}

// OpsWorksSource represents AWS OpsWorks Source Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-source.html
type OpsWorksSource struct {
	// This parameter depends on the repository type. For Amazon S3 bundles,
	// set Password to the appropriate IAM secret access key. For HTTP
	// bundles, Git repositories, and Subversion repositories, set Password
	// to the appropriate password.
	Password *StringExpr `json:"Password,omitempty"`

	// The application's version. With AWS OpsWorks, you can deploy new
	// versions of an application. One of the simplest approaches is to have
	// branches or revisions in your repository that represent different
	// versions that can potentially be deployed.
	Revision *StringExpr `json:"Revision,omitempty"`

	// The repository's SSH key. For more information, see Using Git
	// Repository SSH Keys in the AWS OpsWorks User Guide.
	SshKey *StringExpr `json:"SshKey,omitempty"`

	// The repository type.
	Type *StringExpr `json:"Type,omitempty"`

	// The source URL.
	Url *StringExpr `json:"Url,omitempty"`

	// This parameter depends on the repository type. For Amazon S3 bundles,
	// set Username to the appropriate IAM access key ID. For HTTP bundles,
	// Git repositories, and Subversion repositories, set Username to the
	// appropriate user name.
	Username *StringExpr `json:"Username,omitempty"`
}

// OpsWorksSourceList represents a list of OpsWorksSource
type OpsWorksSourceList []OpsWorksSource

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksSourceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksSource{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksSourceList{item}
		return nil
	}
	list := []OpsWorksSource{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksSourceList(list)
		return nil
	}
	return err
}

// OpsWorksSslConfiguration represents AWS OpsWorks SslConfiguration Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-sslconfiguration.html
type OpsWorksSslConfiguration struct {
	// The contents of the certificate's domain.crt file.
	Certificate *StringExpr `json:"Certificate,omitempty"`

	// An intermediate certificate authority key or client authentication.
	Chain *StringExpr `json:"Chain,omitempty"`

	// The private key; the contents of the certificate's domain.kex file.
	PrivateKey *StringExpr `json:"PrivateKey,omitempty"`
}

// OpsWorksSslConfigurationList represents a list of OpsWorksSslConfiguration
type OpsWorksSslConfigurationList []OpsWorksSslConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksSslConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksSslConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksSslConfigurationList{item}
		return nil
	}
	list := []OpsWorksSslConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksSslConfigurationList(list)
		return nil
	}
	return err
}

// OpsWorksStackElasticIp represents AWS OpsWorks Stack ElasticIp
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-elasticip.html
type OpsWorksStackElasticIp struct {
	// The Elastic IP address.
	Ip *StringExpr `json:"Ip,omitempty"`

	// A name for the Elastic IP address.
	Name *StringExpr `json:"Name,omitempty"`
}

// OpsWorksStackElasticIpList represents a list of OpsWorksStackElasticIp
type OpsWorksStackElasticIpList []OpsWorksStackElasticIp

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksStackElasticIpList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksStackElasticIp{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksStackElasticIpList{item}
		return nil
	}
	list := []OpsWorksStackElasticIp{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksStackElasticIpList(list)
		return nil
	}
	return err
}

// OpsWorksStackRdsDbInstance represents AWS OpsWorks Stack RdsDbInstance
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-rdsdbinstance.html
type OpsWorksStackRdsDbInstance struct {
	// The password of the registered database.
	DbPassword *StringExpr `json:"DbPassword,omitempty"`

	// The master user name of the registered database.
	DbUser *StringExpr `json:"DbUser,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon RDS DB instance to
	// register with the AWS OpsWorks stack.
	RdsDbInstanceArn *StringExpr `json:"RdsDbInstanceArn,omitempty"`
}

// OpsWorksStackRdsDbInstanceList represents a list of OpsWorksStackRdsDbInstance
type OpsWorksStackRdsDbInstanceList []OpsWorksStackRdsDbInstance

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksStackRdsDbInstanceList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksStackRdsDbInstance{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksStackRdsDbInstanceList{item}
		return nil
	}
	list := []OpsWorksStackRdsDbInstance{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksStackRdsDbInstanceList(list)
		return nil
	}
	return err
}

// OpsWorksStackConfigurationManager represents AWS OpsWorks StackConfigurationManager Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-stackconfigmanager.html
type OpsWorksStackConfigurationManager struct {
	// The name of the configuration manager.
	Name *StringExpr `json:"Name,omitempty"`

	// The Chef version.
	Version *StringExpr `json:"Version,omitempty"`
}

// OpsWorksStackConfigurationManagerList represents a list of OpsWorksStackConfigurationManager
type OpsWorksStackConfigurationManagerList []OpsWorksStackConfigurationManager

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksStackConfigurationManagerList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksStackConfigurationManager{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksStackConfigurationManagerList{item}
		return nil
	}
	list := []OpsWorksStackConfigurationManager{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksStackConfigurationManagerList(list)
		return nil
	}
	return err
}

// OpsWorksTimeBasedAutoScaling represents AWS OpsWorks TimeBasedAutoScaling Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-instance-timebasedautoscaling.html
type OpsWorksTimeBasedAutoScaling struct {
	// The schedule for Friday.
	Friday *StringExpr `json:"Friday,omitempty"`

	// The schedule for Monday.
	Monday *StringExpr `json:"Monday,omitempty"`

	// The schedule for Saturday.
	Saturday *StringExpr `json:"Saturday,omitempty"`

	// The schedule for Sunday.
	Sunday *StringExpr `json:"Sunday,omitempty"`

	// The schedule for Thursday.
	Thursday *StringExpr `json:"Thursday,omitempty"`

	// The schedule for Tuesday.
	Tuesday *StringExpr `json:"Tuesday,omitempty"`

	// The schedule for Wednesday.
	Wednesday *StringExpr `json:"Wednesday,omitempty"`
}

// OpsWorksTimeBasedAutoScalingList represents a list of OpsWorksTimeBasedAutoScaling
type OpsWorksTimeBasedAutoScalingList []OpsWorksTimeBasedAutoScaling

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksTimeBasedAutoScalingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksTimeBasedAutoScaling{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksTimeBasedAutoScalingList{item}
		return nil
	}
	list := []OpsWorksTimeBasedAutoScaling{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksTimeBasedAutoScalingList(list)
		return nil
	}
	return err
}

// OpsWorksVolumeConfiguration represents AWS OpsWorks VolumeConfiguration Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-volumeconfig.html
type OpsWorksVolumeConfiguration struct {
	// The number of I/O operations per second (IOPS) to provision for the
	// volume.
	Iops *IntegerExpr `json:"Iops,omitempty"`

	// The volume mount point, such as /dev/sdh.
	MountPoint *StringExpr `json:"MountPoint,omitempty"`

	// The number of disks in the volume.
	NumberOfDisks *IntegerExpr `json:"NumberOfDisks,omitempty"`

	// The volume RAID level.
	RaidLevel *IntegerExpr `json:"RaidLevel,omitempty"`

	// The volume size.
	Size *IntegerExpr `json:"Size,omitempty"`

	// The type of volume, such as magnetic or SSD. For valid values, see
	// VolumeConfiguration in the AWS OpsWorks Stacks API Reference.
	VolumeType *StringExpr `json:"VolumeType,omitempty"`
}

// OpsWorksVolumeConfigurationList represents a list of OpsWorksVolumeConfiguration
type OpsWorksVolumeConfigurationList []OpsWorksVolumeConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *OpsWorksVolumeConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := OpsWorksVolumeConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = OpsWorksVolumeConfigurationList{item}
		return nil
	}
	list := []OpsWorksVolumeConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = OpsWorksVolumeConfigurationList(list)
		return nil
	}
	return err
}

// RedshiftParameter represents Amazon Redshift Parameter Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html
type RedshiftParameter struct {
	// The name of the parameter.
	ParameterName *StringExpr `json:"ParameterName,omitempty"`

	// The value of the parameter.
	ParameterValue *StringExpr `json:"ParameterValue,omitempty"`
}

// RedshiftParameterList represents a list of RedshiftParameter
type RedshiftParameterList []RedshiftParameter

// UnmarshalJSON sets the object from the provided JSON representation
func (l *RedshiftParameterList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := RedshiftParameter{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = RedshiftParameterList{item}
		return nil
	}
	list := []RedshiftParameter{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = RedshiftParameterList(list)
		return nil
	}
	return err
}

// RedshiftLoggingProperties represents Amazon Redshift LoggingProperties
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-loggingproperties.html
type RedshiftLoggingProperties struct {
	// The name of an existing S3 bucket where the log files are to be
	// stored.
	BucketName *StringExpr `json:"BucketName,omitempty"`

	// The prefix applied to the log file names.
	S3KeyPrefix *StringExpr `json:"S3KeyPrefix,omitempty"`
}

// RedshiftLoggingPropertiesList represents a list of RedshiftLoggingProperties
type RedshiftLoggingPropertiesList []RedshiftLoggingProperties

// UnmarshalJSON sets the object from the provided JSON representation
func (l *RedshiftLoggingPropertiesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := RedshiftLoggingProperties{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = RedshiftLoggingPropertiesList{item}
		return nil
	}
	list := []RedshiftLoggingProperties{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = RedshiftLoggingPropertiesList(list)
		return nil
	}
	return err
}

// ResourceTag represents AWS CloudFormation Resource Tags Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html
type ResourceTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127
	// Unicode characters in length and cannot be prefixed with aws:. You can
	// use any of the following characters: the set of Unicode letters,
	// digits, whitespace, _, ., /, =, +, and -.
	Key *StringExpr `json:"Key,omitempty"`

	// The value for the tag. You can specify a value that is 1 to 255
	// Unicode characters in length and cannot be prefixed with aws:. You can
	// use any of the following characters: the set of Unicode letters,
	// digits, whitespace, _, ., /, =, +, and -.
	Value *StringExpr `json:"Value,omitempty"`
}

// ResourceTagList represents a list of ResourceTag
type ResourceTagList []ResourceTag

// UnmarshalJSON sets the object from the provided JSON representation
func (l *ResourceTagList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := ResourceTag{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = ResourceTagList{item}
		return nil
	}
	list := []ResourceTag{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = ResourceTagList(list)
		return nil
	}
	return err
}

// RelationalDatabaseServiceOptionGroupOptionConfiguration represents Amazon Relational Database Service OptionGroup OptionConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-optiongroup-optionconfigurations.html
type RelationalDatabaseServiceOptionGroupOptionConfiguration struct {
	// A list of database security group names for this option. If the option
	// requires access to a port, the security groups must allow access to
	// that port. If you specify this property, don't specify the
	// VPCSecurityGroupMemberships property.
	DBSecurityGroupMemberships interface{} `json:"DBSecurityGroupMemberships,omitempty"`

	// The name of the option. For more information about options, see
	// Working with Option Groups in the Amazon Relational Database Service
	// User Guide.
	OptionName *StringExpr `json:"OptionName,omitempty"`

	// The settings for this option.
	OptionSettings *RelationalDatabaseServiceOptionGroupOptionSettingList `json:"OptionSettings,omitempty"`

	// The version for the option.
	OptionVersion *StringExpr `json:"OptionVersion,omitempty"`

	// The port number that this option uses.
	Port *IntegerExpr `json:"Port,omitempty"`

	// A list of VPC security group IDs for this option. If the option
	// requires access to a port, the security groups must allow access to
	// that port. If you specify this property, don't specify the
	// DBSecurityGroupMemberships property.
	VpcSecurityGroupMemberships interface{} `json:"VpcSecurityGroupMemberships,omitempty"`
}

// RelationalDatabaseServiceOptionGroupOptionConfigurationList represents a list of RelationalDatabaseServiceOptionGroupOptionConfiguration
type RelationalDatabaseServiceOptionGroupOptionConfigurationList []RelationalDatabaseServiceOptionGroupOptionConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *RelationalDatabaseServiceOptionGroupOptionConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := RelationalDatabaseServiceOptionGroupOptionConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = RelationalDatabaseServiceOptionGroupOptionConfigurationList{item}
		return nil
	}
	list := []RelationalDatabaseServiceOptionGroupOptionConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = RelationalDatabaseServiceOptionGroupOptionConfigurationList(list)
		return nil
	}
	return err
}

// RelationalDatabaseServiceOptionGroupOptionSetting represents Amazon Relational Database Service OptionGroup OptionSetting
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-optiongroup-optionconfigurations-optionsettings.html
type RelationalDatabaseServiceOptionGroupOptionSetting struct {
	// The name of the option setting that you want to specify.
	Name *StringExpr `json:"Name,omitempty"`

	// The value of the option setting.
	Value *StringExpr `json:"Value,omitempty"`
}

// RelationalDatabaseServiceOptionGroupOptionSettingList represents a list of RelationalDatabaseServiceOptionGroupOptionSetting
type RelationalDatabaseServiceOptionGroupOptionSettingList []RelationalDatabaseServiceOptionGroupOptionSetting

// UnmarshalJSON sets the object from the provided JSON representation
func (l *RelationalDatabaseServiceOptionGroupOptionSettingList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := RelationalDatabaseServiceOptionGroupOptionSetting{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = RelationalDatabaseServiceOptionGroupOptionSettingList{item}
		return nil
	}
	list := []RelationalDatabaseServiceOptionGroupOptionSetting{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = RelationalDatabaseServiceOptionGroupOptionSettingList(list)
		return nil
	}
	return err
}

// RDSSecurityGroupRule represents Amazon RDS Security Group Rule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group-rule.html
type RDSSecurityGroupRule struct {
	// The IP range to authorize.
	CIDRIP *StringExpr `json:"CIDRIP,omitempty"`

	// Id of the VPC or EC2 Security Group to authorize.
	EC2SecurityGroupId *StringExpr `json:"EC2SecurityGroupId,omitempty"`

	// Name of the EC2 Security Group to authorize.
	EC2SecurityGroupName *StringExpr `json:"EC2SecurityGroupName,omitempty"`

	// AWS Account Number of the owner of the EC2 Security Group specified in
	// the EC2SecurityGroupName parameter. The AWS Access Key ID is not an
	// acceptable value.
	EC2SecurityGroupOwnerId *StringExpr `json:"EC2SecurityGroupOwnerId,omitempty"`
}

// RDSSecurityGroupRuleList represents a list of RDSSecurityGroupRule
type RDSSecurityGroupRuleList []RDSSecurityGroupRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *RDSSecurityGroupRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := RDSSecurityGroupRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = RDSSecurityGroupRuleList{item}
		return nil
	}
	list := []RDSSecurityGroupRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = RDSSecurityGroupRuleList(list)
		return nil
	}
	return err
}

// Route53AliasTargetProperty represents Route 53 AliasTarget Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html
type Route53AliasTargetProperty struct {
	// The DNS name of the load balancer, the domain name of the CloudFront
	// distribution, the website endpoint of the Amazon S3 bucket, or another
	// record set in the same hosted zone that is the target of the alias.
	DNSName *StringExpr `json:"DNSName,omitempty"`

	// Whether Amazon Route 53 checks the health of the resource record sets
	// in the alias target when responding to DNS queries. For more
	// information about using this property, see EvaluateTargetHealth in the
	// Amazon Route 53 API Reference.
	EvaluateTargetHealth *BoolExpr `json:"EvaluateTargetHealth,omitempty"`

	// The hosted zone ID. For load balancers, use the canonical hosted zone
	// ID of the load balancer. For Amazon S3, use the hosted zone ID for
	// your bucket's website endpoint. For CloudFront, use Z2FDTNDATAQYW2.
	// For a list of hosted zone IDs of other services, see the relevant
	// service in the AWS Regions and Endpoints.
	HostedZoneId *StringExpr `json:"HostedZoneId,omitempty"`
}

// Route53AliasTargetPropertyList represents a list of Route53AliasTargetProperty
type Route53AliasTargetPropertyList []Route53AliasTargetProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53AliasTargetPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53AliasTargetProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53AliasTargetPropertyList{item}
		return nil
	}
	list := []Route53AliasTargetProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53AliasTargetPropertyList(list)
		return nil
	}
	return err
}

// Route53RecordSetGeoLocationProperty represents Amazon Route 53 Record Set GeoLocation Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html
type Route53RecordSetGeoLocationProperty struct {
	// All DNS queries from the continent that you specified are routed to
	// this resource record set. If you specify this property, omit the
	// CountryCode and SubdivisionCode properties.
	ContinentCode *StringExpr `json:"ContinentCode,omitempty"`

	// All DNS queries from the country that you specified are routed to this
	// resource record set. If you specify this property, omit the
	// ContinentCode property.
	CountryCode *StringExpr `json:"CountryCode,omitempty"`

	// If you specified US for the country code, you can specify a state in
	// the United States. All DNS queries from the state that you specified
	// are routed to this resource record set. If you specify this property,
	// you must specify US for the CountryCode and omit the ContinentCode
	// property.
	SubdivisionCode *StringExpr `json:"SubdivisionCode,omitempty"`
}

// Route53RecordSetGeoLocationPropertyList represents a list of Route53RecordSetGeoLocationProperty
type Route53RecordSetGeoLocationPropertyList []Route53RecordSetGeoLocationProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53RecordSetGeoLocationPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53RecordSetGeoLocationProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53RecordSetGeoLocationPropertyList{item}
		return nil
	}
	list := []Route53RecordSetGeoLocationProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53RecordSetGeoLocationPropertyList(list)
		return nil
	}
	return err
}

// Route53HealthCheckConfig represents Amazon Route 53 HealthCheckConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html
type Route53HealthCheckConfig struct {
	// Identifies the CloudWatch alarm that you want Amazon Route 53 health
	// checkers to use to determine whether this health check is healthy.
	AlarmIdentifier *Route53AlarmIdentifier `json:"AlarmIdentifier,omitempty"`

	// (CALCULATED Health Checks Only) A complex type that contains one
	// ChildHealthCheck element for each health check that you want to
	// associate with a CALCULATED health check.
	ChildHealthChecks interface{} `json:"ChildHealthChecks,omitempty"`

	// Specifies whether you want Amazon Route 53 to send the value of
	// FullyQualifiedDomainName to the endpoint in the client_hello message
	// during TLS negotiation. This allows the endpoint to respond to HTTPS
	// health check requests with the applicable SSL/TLS certificate. For
	// more information, see
	// http://docs.aws.amazon.com/Route53/latest/APIReference/API_HealthCheckConfig.html.
	EnableSNI *BoolExpr `json:"EnableSNI,omitempty"`

	// The number of consecutive health checks that an endpoint must pass or
	// fail for Amazon Route 53 to change the current status of the endpoint
	// from unhealthy to healthy or healthy to unhealthy. For more
	// information, see How Amazon Route 53 Determines Whether an Endpoint
	// Is Healthy in the Amazon Route 53 Developer Guide.
	FailureThreshold *IntegerExpr `json:"FailureThreshold,omitempty"`

	// If you specified the IPAddress property, the value that you want
	// Amazon Route 53 to pass in the host header in all health checks
	// except for TCP health checks. If you don't specify an IP address, the
	// domain that Amazon Route 53 sends a DNS request to. Amazon Route 53
	// uses the IP address that the DNS returns to check the health of the
	// endpoint.
	FullyQualifiedDomainName *StringExpr `json:"FullyQualifiedDomainName,omitempty"`

	// The number of child health checks that are associated with a
	// CALCULATED health that Amazon Route 53 must consider healthy for the
	// CALCULATED health check to be considered healthy.
	HealthThreshold *IntegerExpr `json:"HealthThreshold,omitempty"`

	// When Amazon CloudWatch has insufficient data about the metric to
	// determine the alarm state, the status that you want Amazon Route 53
	// to assign to the health check (Healthy, Unhealthy, or
	// LastKnownStatus).
	InsufficientDataHealthStatus *StringExpr `json:"InsufficientDataHealthStatus,omitempty"`

	// Specifies whether you want Amazon Route 53 to invert the status of a
	// health check, for example, to consider a health check unhealthy when
	// it otherwise would be considered healthy.
	Inverted *BoolExpr `json:"Inverted,omitempty"`

	// The IPv4 IP address of the endpoint on which you want Amazon Route 53
	// to perform health checks. If you don't specify an IP address, Amazon
	// Route 53 sends a DNS request to resolve the domain name that you
	// specify in the FullyQualifiedDomainName property.
	IPAddress *StringExpr `json:"IPAddress,omitempty"`

	// Specifies whether you want Amazon Route 53 to measure the latency
	// between health checkers in multiple AWS regions and your endpoint and
	// display CloudWatch latency graphs on the Health Checks page in the
	// Amazon Route 53 console.
	MeasureLatency *BoolExpr `json:"MeasureLatency,omitempty"`

	// The port on the endpoint on which you want Amazon Route 53 to perform
	// health checks.
	Port *IntegerExpr `json:"Port,omitempty"`

	// The number of seconds between the time that Amazon Route 53 gets a
	// response from your endpoint and the time that it sends the next health
	// check request. Each Amazon Route 53 health checker makes requests at
	// this interval. For valid values, see the RequestInterval element in
	// the Amazon Route 53 API Reference.
	RequestInterval *IntegerExpr `json:"RequestInterval,omitempty"`

	// The path that you want Amazon Route 53 to request when performing
	// health checks. The path can be any value for which your endpoint
	// returns an HTTP status code of 2xx or 3xx when the endpoint is
	// healthy, such as /docs/route53-health-check.html.
	ResourcePath *StringExpr `json:"ResourcePath,omitempty"`

	// If the value of the Type property is HTTP_STR_MATCH or
	// HTTPS_STR_MATCH, the string that you want Amazon Route 53 to search
	// for in the response body from the specified resource. If the string
	// appears in the response body, Amazon Route 53 considers the resource
	// healthy.
	SearchString *StringExpr `json:"SearchString,omitempty"`

	// The type of health check that you want to create. This indicates how
	// Amazon Route 53 determines whether an endpoint is healthy. You can
	// specify HTTP, HTTPS, HTTP_STR_MATCH, HTTPS_STR_MATCH, or TCP. For
	// information about the different types, see the Type element in the
	// Amazon Route 53 API Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// Route53HealthCheckConfigList represents a list of Route53HealthCheckConfig
type Route53HealthCheckConfigList []Route53HealthCheckConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53HealthCheckConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53HealthCheckConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53HealthCheckConfigList{item}
		return nil
	}
	list := []Route53HealthCheckConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53HealthCheckConfigList(list)
		return nil
	}
	return err
}

// Route53AlarmIdentifier represents Amazon Route 53 AlarmIdentifier
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig-alarmidentifier.html
type Route53AlarmIdentifier struct {
	// The name of the Amazon CloudWatch alarm that you want Amazon Route 53
	// health checkers to use to determine whether this health check is
	// healthy.
	Name *StringExpr `json:"Name,omitempty"`

	// A complex type that identifies the CloudWatch alarm that you want
	// Amazon Route 53 health checkers to use to determine whether this
	// health check is healthy. For example, us-west-2.
	Region *StringExpr `json:"Region,omitempty"`
}

// Route53AlarmIdentifierList represents a list of Route53AlarmIdentifier
type Route53AlarmIdentifierList []Route53AlarmIdentifier

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53AlarmIdentifierList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53AlarmIdentifier{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53AlarmIdentifierList{item}
		return nil
	}
	list := []Route53AlarmIdentifier{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53AlarmIdentifierList(list)
		return nil
	}
	return err
}

// Route53HealthCheckTags represents Amazon Route 53 HealthCheckTags
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktags.html
type Route53HealthCheckTags struct {
	// The key name of the tag.
	Key *StringExpr `json:"Key,omitempty"`

	// The value for the tag.
	Value *StringExpr `json:"Value,omitempty"`
}

// Route53HealthCheckTagsList represents a list of Route53HealthCheckTags
type Route53HealthCheckTagsList []Route53HealthCheckTags

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53HealthCheckTagsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53HealthCheckTags{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53HealthCheckTagsList{item}
		return nil
	}
	list := []Route53HealthCheckTags{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53HealthCheckTagsList(list)
		return nil
	}
	return err
}

// Route53HostedZoneConfigProperty represents Amazon Route 53 HostedZoneConfig Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzoneconfig.html
type Route53HostedZoneConfigProperty struct {
	// Any comments that you want to include about the hosted zone.
	Comment *StringExpr `json:"Comment,omitempty"`
}

// Route53HostedZoneConfigPropertyList represents a list of Route53HostedZoneConfigProperty
type Route53HostedZoneConfigPropertyList []Route53HostedZoneConfigProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53HostedZoneConfigPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53HostedZoneConfigProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53HostedZoneConfigPropertyList{item}
		return nil
	}
	list := []Route53HostedZoneConfigProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53HostedZoneConfigPropertyList(list)
		return nil
	}
	return err
}

// Route53HostedZoneTags represents Amazon Route 53 HostedZoneTags
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetags.html
type Route53HostedZoneTags struct {
	// The key name of the tag.
	Key *StringExpr `json:"Key,omitempty"`

	// The value for the tag.
	Value *StringExpr `json:"Value,omitempty"`
}

// Route53HostedZoneTagsList represents a list of Route53HostedZoneTags
type Route53HostedZoneTagsList []Route53HostedZoneTags

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53HostedZoneTagsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53HostedZoneTags{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53HostedZoneTagsList{item}
		return nil
	}
	list := []Route53HostedZoneTags{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53HostedZoneTagsList(list)
		return nil
	}
	return err
}

// Route53QueryLoggingConfig represents Amazon Route 53 QueryLoggingConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-queryloggingconfig.html
type Route53QueryLoggingConfig struct {
	// The Amazon Resource Name (ARN) for the log group that you want Amazon
	// Route 53 to send query logs to. This is the format of the ARN:
	CloudWatchLogsLogGroupArn *StringExpr `json:"CloudWatchLogsLogGroupArn,omitempty"`
}

// Route53QueryLoggingConfigList represents a list of Route53QueryLoggingConfig
type Route53QueryLoggingConfigList []Route53QueryLoggingConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53QueryLoggingConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53QueryLoggingConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53QueryLoggingConfigList{item}
		return nil
	}
	list := []Route53QueryLoggingConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53QueryLoggingConfigList(list)
		return nil
	}
	return err
}

// Route53HostedZoneVPCs represents Amazon Route 53 HostedZoneVPCs
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone-hostedzonevpcs.html
type Route53HostedZoneVPCs struct {
	// The ID of the Amazon VPC that you want to associate with the hosted
	// zone.
	VPCId *StringExpr `json:"VPCId,omitempty"`

	// The region in which the Amazon VPC was created as specified in the
	// VPCId property.
	VPCRegion *StringExpr `json:"VPCRegion,omitempty"`
}

// Route53HostedZoneVPCsList represents a list of Route53HostedZoneVPCs
type Route53HostedZoneVPCsList []Route53HostedZoneVPCs

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53HostedZoneVPCsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53HostedZoneVPCs{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53HostedZoneVPCsList{item}
		return nil
	}
	list := []Route53HostedZoneVPCs{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53HostedZoneVPCsList(list)
		return nil
	}
	return err
}

// S3BucketAbortIncompleteMultipartUpload represents Amazon S3 Bucket AbortIncompleteMultipartUpload
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-abortincompletemultipartupload.html
type S3BucketAbortIncompleteMultipartUpload struct {
	// The number of days after the upload is initiated before aborting the
	// upload.
	DaysAfterInitiation interface{} `json:"DaysAfterInitiation,omitempty"`
}

// S3BucketAbortIncompleteMultipartUploadList represents a list of S3BucketAbortIncompleteMultipartUpload
type S3BucketAbortIncompleteMultipartUploadList []S3BucketAbortIncompleteMultipartUpload

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketAbortIncompleteMultipartUploadList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketAbortIncompleteMultipartUpload{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketAbortIncompleteMultipartUploadList{item}
		return nil
	}
	list := []S3BucketAbortIncompleteMultipartUpload{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketAbortIncompleteMultipartUploadList(list)
		return nil
	}
	return err
}

// S3BucketAccelerateConfiguration represents Amazon S3 Bucket AccelerateConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html
type S3BucketAccelerateConfiguration struct {
	// Sets the transfer acceleration state of the bucket.
	AccelerationStatus interface{} `json:"AccelerationStatus,omitempty"`
}

// S3BucketAccelerateConfigurationList represents a list of S3BucketAccelerateConfiguration
type S3BucketAccelerateConfigurationList []S3BucketAccelerateConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketAccelerateConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketAccelerateConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketAccelerateConfigurationList{item}
		return nil
	}
	list := []S3BucketAccelerateConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketAccelerateConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketAnalyticsConfiguration represents Amazon S3 Bucket AnalyticsConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html
type S3BucketAnalyticsConfiguration struct {
	// The ID that identifies the analytics configuration.
	Id interface{} `json:"Id,omitempty"`

	// The prefix that an object must have to be included in the analytics
	// results.
	Prefix interface{} `json:"Prefix,omitempty"`

	// Contains data related to access patterns to be collected and made
	// available to analyze the tradeoffs between different storage classes.
	StorageClassAnalysis *S3BucketStorageClassAnalysis `json:"StorageClassAnalysis,omitempty"`

	// The tags to use when evaluating an analytics filter.
	TagFilters *S3BucketTagFilterList `json:"TagFilters,omitempty"`
}

// S3BucketAnalyticsConfigurationList represents a list of S3BucketAnalyticsConfiguration
type S3BucketAnalyticsConfigurationList []S3BucketAnalyticsConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketAnalyticsConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketAnalyticsConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketAnalyticsConfigurationList{item}
		return nil
	}
	list := []S3BucketAnalyticsConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketAnalyticsConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketCorsConfiguration represents Amazon S3 Bucket CorsConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html
type S3BucketCorsConfiguration struct {
	// A set of origins and methods that you allow.
	CorsRules *S3BucketCorsRuleList `json:"CorsRules,omitempty"`
}

// S3BucketCorsConfigurationList represents a list of S3BucketCorsConfiguration
type S3BucketCorsConfigurationList []S3BucketCorsConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketCorsConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketCorsConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketCorsConfigurationList{item}
		return nil
	}
	list := []S3BucketCorsConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketCorsConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketCorsRule represents Amazon S3 Bucket CorsRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html
type S3BucketCorsRule struct {
	// Headers that are specified in the Access-Control-Request-Headers
	// header. These headers are allowed in a preflight OPTIONS request. In
	// response to any preflight OPTIONS request, Amazon S3 returns any
	// requested headers that are allowed.
	AllowedHeaders interface{} `json:"AllowedHeaders,omitempty"`

	// An HTTP method that you allow the origin to execute. The valid values
	// are GET, PUT, HEAD, POST, and DELETE.
	AllowedMethods interface{} `json:"AllowedMethods,omitempty"`

	// An origin that you allow to send cross-domain requests.
	AllowedOrigins interface{} `json:"AllowedOrigins,omitempty"`

	// One or more headers in the response that are accessible to client
	// applications (for example, from a JavaScript XMLHttpRequest object).
	ExposedHeaders interface{} `json:"ExposedHeaders,omitempty"`

	// A unique identifier for this rule. The value cannot be more than 255
	// characters.
	Id *StringExpr `json:"Id,omitempty"`

	// The time in seconds that your browser is to cache the preflight
	// response for the specified resource.
	MaxAge *IntegerExpr `json:"MaxAge,omitempty"`
}

// S3BucketCorsRuleList represents a list of S3BucketCorsRule
type S3BucketCorsRuleList []S3BucketCorsRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketCorsRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketCorsRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketCorsRuleList{item}
		return nil
	}
	list := []S3BucketCorsRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketCorsRuleList(list)
		return nil
	}
	return err
}

// S3BucketDataExport represents Amazon S3 Bucket DataExport
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html
type S3BucketDataExport struct {
	// Information about where to publish the analytics results.
	Destination *S3BucketDestination `json:"Destination,omitempty"`

	// The version of the output schema to use when exporting data. Must be
	// V_1.
	OutputSchemaVersion interface{} `json:"OutputSchemaVersion,omitempty"`
}

// S3BucketDataExportList represents a list of S3BucketDataExport
type S3BucketDataExportList []S3BucketDataExport

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketDataExportList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketDataExport{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketDataExportList{item}
		return nil
	}
	list := []S3BucketDataExport{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketDataExportList(list)
		return nil
	}
	return err
}

// S3BucketDestination represents Amazon S3 Bucket Destination
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html
type S3BucketDestination struct {
	// The ID of the account that owns the destination bucket where the
	// analytics is published.
	BucketAccountId interface{} `json:"BucketAccountId,omitempty"`

	// The Amazon Resource Name (ARN) of the bucket where analytics results
	// are published. This destination bucket must be in the same region as
	// the bucket used for the analytics or inventory configuration.
	BucketArn interface{} `json:"BucketArn,omitempty"`

	// Specifies the output format of the analytics or inventory results.
	// Currently, Amazon S3 supports the comma-separated value (CSV) format.
	Format interface{} `json:"Format,omitempty"`

	// The prefix that is prepended to all analytics results.
	Prefix interface{} `json:"Prefix,omitempty"`
}

// S3BucketDestinationList represents a list of S3BucketDestination
type S3BucketDestinationList []S3BucketDestination

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketDestinationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketDestination{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketDestinationList{item}
		return nil
	}
	list := []S3BucketDestination{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketDestinationList(list)
		return nil
	}
	return err
}

// S3BucketFilterRule represents Amazon S3 Bucket FilterRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html
type S3BucketFilterRule struct {
	// Whether the filter matches the prefix or suffix of object key names.
	// For valid values, see the Name request element of the PUT Bucket
	// notification action in the Amazon Simple Storage Service API
	// Reference.
	Name *StringExpr `json:"Name,omitempty"`

	// The value that the filter searches for in object key names.
	Value *StringExpr `json:"Value,omitempty"`
}

// S3BucketFilterRuleList represents a list of S3BucketFilterRule
type S3BucketFilterRuleList []S3BucketFilterRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketFilterRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketFilterRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketFilterRuleList{item}
		return nil
	}
	list := []S3BucketFilterRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketFilterRuleList(list)
		return nil
	}
	return err
}

// S3BucketInventoryConfiguration represents Amazon S3 Bucket InventoryConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html
type S3BucketInventoryConfiguration struct {
	// Information about where to publish the inventory results.
	Destination *S3BucketDestination `json:"Destination,omitempty"`

	// Specifies whether the inventory is enabled or disabled. If set to
	// True, an inventory list is generated. If set to False, no inventory
	// list is generated.
	Enabled interface{} `json:"Enabled,omitempty"`

	// The ID that identifies the inventory configuration.
	Id interface{} `json:"Id,omitempty"`

	// Object versions to include in the inventory list. If set to All, the
	// list includes all the object versions, which adds the version related
	// fields VersionId, IsLatest, and DeleteMarker to the list. If set to
	// Current, the list does not contain these version related fields.
	IncludedObjectVersions interface{} `json:"IncludedObjectVersions,omitempty"`

	// The optional fields that are included in the inventory results.
	OptionalFields interface{} `json:"OptionalFields,omitempty"`

	// The prefix that is prepended to all inventory results.
	Prefix interface{} `json:"Prefix,omitempty"`

	// The frequency of inventory results generation.
	ScheduleFrequency interface{} `json:"ScheduleFrequency,omitempty"`
}

// S3BucketInventoryConfigurationList represents a list of S3BucketInventoryConfiguration
type S3BucketInventoryConfigurationList []S3BucketInventoryConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketInventoryConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketInventoryConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketInventoryConfigurationList{item}
		return nil
	}
	list := []S3BucketInventoryConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketInventoryConfigurationList(list)
		return nil
	}
	return err
}

// SimpleStorageServiceBucketLambdaConfiguration represents Amazon Simple Storage Service Bucket LambdaConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html
type SimpleStorageServiceBucketLambdaConfiguration struct {
	// The S3 bucket event for which to invoke the Lambda function. For more
	// information, see Supported Event Types in the Amazon Simple Storage
	// Service Developer Guide.
	Event *StringExpr `json:"Event,omitempty"`

	// The filtering rules that determine which objects invoke the Lambda
	// function. For example, you can create a filter so that only image
	// files with a .jpg extension invoke the function when they are added to
	// the S3 bucket.
	Filter *S3BucketNotificationFilter `json:"Filter,omitempty"`

	// The Amazon Resource Name (ARN) of the Lambda function that Amazon S3
	// invokes when the specified event type occurs.
	Function *StringExpr `json:"Function,omitempty"`
}

// SimpleStorageServiceBucketLambdaConfigurationList represents a list of SimpleStorageServiceBucketLambdaConfiguration
type SimpleStorageServiceBucketLambdaConfigurationList []SimpleStorageServiceBucketLambdaConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *SimpleStorageServiceBucketLambdaConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := SimpleStorageServiceBucketLambdaConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = SimpleStorageServiceBucketLambdaConfigurationList{item}
		return nil
	}
	list := []SimpleStorageServiceBucketLambdaConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = SimpleStorageServiceBucketLambdaConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketLifecycleConfiguration represents Amazon S3 Bucket LifecycleConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html
type S3BucketLifecycleConfiguration struct {
	// A lifecycle rule for individual objects in an S3 bucket.
	Rules *S3BucketRuleList `json:"Rules,omitempty"`
}

// S3BucketLifecycleConfigurationList represents a list of S3BucketLifecycleConfiguration
type S3BucketLifecycleConfigurationList []S3BucketLifecycleConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketLifecycleConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketLifecycleConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketLifecycleConfigurationList{item}
		return nil
	}
	list := []S3BucketLifecycleConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketLifecycleConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketLoggingConfiguration represents Amazon S3 Bucket LoggingConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html
type S3BucketLoggingConfiguration struct {
	// The name of an Amazon S3 bucket where Amazon S3 store server access
	// log files. You can store log files in any bucket that you own. By
	// default, logs are stored in the bucket where the LoggingConfiguration
	// property is defined.
	DestinationBucketName *StringExpr `json:"DestinationBucketName,omitempty"`

	// A prefix for the all log object keys. If you store log files from
	// multiple Amazon S3 buckets in a single bucket, you can use a prefix to
	// distinguish which log files came from which bucket.
	LogFilePrefix *StringExpr `json:"LogFilePrefix,omitempty"`
}

// S3BucketLoggingConfigurationList represents a list of S3BucketLoggingConfiguration
type S3BucketLoggingConfigurationList []S3BucketLoggingConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketLoggingConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketLoggingConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketLoggingConfigurationList{item}
		return nil
	}
	list := []S3BucketLoggingConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketLoggingConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketMetricsConfiguration represents Amazon S3 Bucket MetricsConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html
type S3BucketMetricsConfiguration struct {
	// The ID used to identify the metrics configuration.
	Id interface{} `json:"Id,omitempty"`

	// The prefix that an object must have to be included in the metrics
	// results.
	Prefix interface{} `json:"Prefix,omitempty"`

	// Specifies a list of tag filters to use as a metrics configuration
	// filter. The metrics configuration includes only objects that meet the
	// filter's criteria.
	TagFilters *S3BucketTagFilterList `json:"TagFilters,omitempty"`
}

// S3BucketMetricsConfigurationList represents a list of S3BucketMetricsConfiguration
type S3BucketMetricsConfigurationList []S3BucketMetricsConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketMetricsConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketMetricsConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketMetricsConfigurationList{item}
		return nil
	}
	list := []S3BucketMetricsConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketMetricsConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketNoncurrentVersionTransition represents Amazon S3 Bucket NoncurrentVersionTransition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html
type S3BucketNoncurrentVersionTransition struct {
	// The storage class to which you want the object to transition, such as
	// GLACIER. For valid values, see the StorageClass request element of the
	// PUT Bucket lifecycle action in the Amazon Simple Storage Service API
	// Reference.
	StorageClass *StringExpr `json:"StorageClass,omitempty"`

	// The number of days between the time that a new version of the object
	// is uploaded to the bucket and when old versions of the object are
	// transitioned to the specified storage class.
	TransitionInDays *IntegerExpr `json:"TransitionInDays,omitempty"`
}

// S3BucketNoncurrentVersionTransitionList represents a list of S3BucketNoncurrentVersionTransition
type S3BucketNoncurrentVersionTransitionList []S3BucketNoncurrentVersionTransition

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketNoncurrentVersionTransitionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketNoncurrentVersionTransition{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketNoncurrentVersionTransitionList{item}
		return nil
	}
	list := []S3BucketNoncurrentVersionTransition{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketNoncurrentVersionTransitionList(list)
		return nil
	}
	return err
}

// S3BucketNotificationConfiguration represents Amazon S3 Bucket NotificationConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html
type S3BucketNotificationConfiguration struct {
	// The AWS Lambda functions to invoke and the events for which to invoke
	// the functions.
	LambdaConfigurations *SimpleStorageServiceBucketLambdaConfigurationList `json:"LambdaConfigurations,omitempty"`

	// The Amazon Simple Queue Service queues to publish messages to and the
	// events for which to publish messages.
	QueueConfigurations *SimpleStorageServiceBucketQueueConfigurationList `json:"QueueConfigurations,omitempty"`

	// The topic to which notifications are sent and the events for which
	// notification are generated.
	TopicConfigurations *SimpleStorageServiceBucketTopicConfigurationList `json:"TopicConfigurations,omitempty"`
}

// S3BucketNotificationConfigurationList represents a list of S3BucketNotificationConfiguration
type S3BucketNotificationConfigurationList []S3BucketNotificationConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketNotificationConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketNotificationConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketNotificationConfigurationList{item}
		return nil
	}
	list := []S3BucketNotificationConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketNotificationConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketNotificationFilter represents Amazon S3 Bucket NotificationFilter
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html
type S3BucketNotificationFilter struct {
	// Amazon S3 filtering rules that describe for which object key names to
	// send notifications.
	S3Key *S3BucketS3KeyFilter `json:"S3Key,omitempty"`
}

// S3BucketNotificationFilterList represents a list of S3BucketNotificationFilter
type S3BucketNotificationFilterList []S3BucketNotificationFilter

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketNotificationFilterList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketNotificationFilter{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketNotificationFilterList{item}
		return nil
	}
	list := []S3BucketNotificationFilter{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketNotificationFilterList(list)
		return nil
	}
	return err
}

// SimpleStorageServiceBucketQueueConfiguration represents Amazon Simple Storage Service Bucket QueueConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html
type SimpleStorageServiceBucketQueueConfiguration struct {
	// The S3 bucket event about which you want to publish messages to Amazon
	// Simple Queue Service ( Amazon SQS). For more information, see
	// Supported Event Types in the Amazon Simple Storage Service Developer
	// Guide.
	Event *StringExpr `json:"Event,omitempty"`

	// The filtering rules that determine for which objects to send
	// notifications. For example, you can create a filter so that Amazon
	// Simple Storage Service (Amazon S3) sends notifications only when image
	// files with a .jpg extension are added to the bucket.
	Filter *S3BucketNotificationFilter `json:"Filter,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon SQS queue that Amazon S3
	// publishes messages to when the specified event type occurs.
	Queue *StringExpr `json:"Queue,omitempty"`
}

// SimpleStorageServiceBucketQueueConfigurationList represents a list of SimpleStorageServiceBucketQueueConfiguration
type SimpleStorageServiceBucketQueueConfigurationList []SimpleStorageServiceBucketQueueConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *SimpleStorageServiceBucketQueueConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := SimpleStorageServiceBucketQueueConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = SimpleStorageServiceBucketQueueConfigurationList{item}
		return nil
	}
	list := []SimpleStorageServiceBucketQueueConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = SimpleStorageServiceBucketQueueConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketReplicationConfiguration represents Amazon S3 Bucket ReplicationConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html
type S3BucketReplicationConfiguration struct {
	// The Amazon Resource Name (ARN) of an AWS Identity and Access
	// Management (IAM) role that Amazon S3 assumes when replicating objects.
	// For more information, see How to Set Up Cross-Region Replication in
	// the Amazon Simple Storage Service Developer Guide.
	Role *StringExpr `json:"Role,omitempty"`

	// A replication rule that specifies which objects to replicate and where
	// they are stored.
	Rules *S3BucketReplicationRuleList `json:"Rules,omitempty"`
}

// S3BucketReplicationConfigurationList represents a list of S3BucketReplicationConfiguration
type S3BucketReplicationConfigurationList []S3BucketReplicationConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketReplicationConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketReplicationConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketReplicationConfigurationList{item}
		return nil
	}
	list := []S3BucketReplicationConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketReplicationConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketReplicationDestination represents Amazon S3 Bucket ReplicationDestination
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html
type S3BucketReplicationDestination struct {
	// The Amazon resource name (ARN) of an S3 bucket where Amazon S3 stores
	// replicated objects. This destination bucket must be in a different
	// region than your source bucket.
	Bucket *StringExpr `json:"Bucket,omitempty"`

	// The storage class to use when replicating objects, such as standard or
	// reduced redundancy. By default, Amazon S3 uses the storage class of
	// the source object to create object replica. For valid values, see the
	// StorageClass element of the PUT Bucket replication action in the
	// Amazon Simple Storage Service API Reference.
	StorageClass *StringExpr `json:"StorageClass,omitempty"`
}

// S3BucketReplicationDestinationList represents a list of S3BucketReplicationDestination
type S3BucketReplicationDestinationList []S3BucketReplicationDestination

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketReplicationDestinationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketReplicationDestination{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketReplicationDestinationList{item}
		return nil
	}
	list := []S3BucketReplicationDestination{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketReplicationDestinationList(list)
		return nil
	}
	return err
}

// S3BucketReplicationRule represents Amazon S3 Bucket ReplicationRule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html
type S3BucketReplicationRule struct {
	// Defines the destination where Amazon S3 stores replicated objects.
	Destination *S3BucketReplicationDestination `json:"Destination,omitempty"`

	// A unique identifier for the rule. If you don't specify a value, AWS
	// CloudFormation generates a random ID.
	Id *StringExpr `json:"Id,omitempty"`

	// An object prefix. This rule applies to all Amazon S3 objects with this
	// prefix. To specify all objects in an S3 bucket, specify an empty
	// string.
	Prefix *StringExpr `json:"Prefix,omitempty"`

	// Whether the rule is enabled. For valid values, see the Status element
	// of the PUT Bucket replication action in the Amazon Simple Storage
	// Service API Reference.
	Status *StringExpr `json:"Status,omitempty"`
}

// S3BucketReplicationRuleList represents a list of S3BucketReplicationRule
type S3BucketReplicationRuleList []S3BucketReplicationRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketReplicationRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketReplicationRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketReplicationRuleList{item}
		return nil
	}
	list := []S3BucketReplicationRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketReplicationRuleList(list)
		return nil
	}
	return err
}

// S3BucketRule represents Amazon S3 Bucket Rule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html
type S3BucketRule struct {
	// Specifies a lifecycle rule that aborts incomplete multipart uploads to
	// an Amazon S3 bucket.
	AbortIncompleteMultipartUpload *S3BucketAbortIncompleteMultipartUpload `json:"AbortIncompleteMultipartUpload,omitempty"`

	// Indicates when objects are deleted from Amazon S3 and Amazon Glacier.
	// The date value must be in ISO 8601 format. The time is always midnight
	// UTC. If you specify an expiration and transition time, you must use
	// the same time unit for both properties (either in days or by date).
	// The expiration time must also be later than the transition time.
	ExpirationDate *StringExpr `json:"ExpirationDate,omitempty"`

	// Indicates the number of days after creation when objects are deleted
	// from Amazon S3 and Amazon Glacier. If you specify an expiration and
	// transition time, you must use the same time unit for both properties
	// (either in days or by date). The expiration time must also be later
	// than the transition time.
	ExpirationInDays *IntegerExpr `json:"ExpirationInDays,omitempty"`

	// A unique identifier for this rule. The value cannot be more than 255
	// characters.
	Id *StringExpr `json:"Id,omitempty"`

	// For buckets with versioning enabled (or suspended), specifies the
	// time, in days, between when a new version of the object is uploaded to
	// the bucket and when old versions of the object expire. When object
	// versions expire, Amazon S3 permanently deletes them. If you specify a
	// transition and expiration time, the expiration time must be later than
	// the transition time.
	NoncurrentVersionExpirationInDays *IntegerExpr `json:"NoncurrentVersionExpirationInDays,omitempty"`

	// For buckets with versioning enabled (or suspended), specifies when
	// non-current objects transition to a specified storage class. If you
	// specify a transition and expiration time, the expiration time must be
	// later than the transition time. If you specify this property, don't
	// specify the NoncurrentVersionTransitions property.
	NoncurrentVersionTransitionXXDeprecatedX *S3BucketNoncurrentVersionTransition `json:"NoncurrentVersionTransition (deprecated),omitempty"`

	// For buckets with versioning enabled (or suspended), one or more
	// transition rules that specify when non-current objects transition to a
	// specified storage class. If you specify a transition and expiration
	// time, the expiration time must be later than the transition time. If
	// you specify this property, don't specify the
	// NoncurrentVersionTransition property.
	NoncurrentVersionTransitions *S3BucketNoncurrentVersionTransitionList `json:"NoncurrentVersionTransitions,omitempty"`

	// Object key prefix that identifies one or more objects to which this
	// rule applies.
	Prefix *StringExpr `json:"Prefix,omitempty"`

	// Specify either Enabled or Disabled. If you specify Enabled, Amazon S3
	// executes this rule as scheduled. If you specify Disabled, Amazon S3
	// ignores this rule.
	Status *StringExpr `json:"Status,omitempty"`

	// Tags to use to identify a subset of objects to which the lifecycle
	// rule applies.
	TagFilters *S3BucketTagFilterList `json:"TagFilters,omitempty"`

	// Specifies when an object transitions to a specified storage class. If
	// you specify an expiration and transition time, you must use the same
	// time unit for both properties (either in days or by date). The
	// expiration time must also be later than the transition time. If you
	// specify this property, don't specify the Transitions property.
	TransitionXXDeprecatedX *S3BucketTransition `json:"Transition (deprecated),omitempty"`

	// One or more transition rules that specify when an object transitions
	// to a specified storage class. If you specify an expiration and
	// transition time, you must use the same time unit for both properties
	// (either in days or by date). The expiration time must also be later
	// than the transition time. If you specify this property, don't specify
	// the Transition property.
	Transitions *S3BucketTransitionList `json:"Transitions,omitempty"`
}

// S3BucketRuleList represents a list of S3BucketRule
type S3BucketRuleList []S3BucketRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketRuleList{item}
		return nil
	}
	list := []S3BucketRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketRuleList(list)
		return nil
	}
	return err
}

// S3BucketS3KeyFilter represents Amazon S3 Bucket S3KeyFilter
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html
type S3BucketS3KeyFilter struct {
	// The object key name to filter on and whether to filter on the suffix
	// or prefix of the key name.
	Rules *S3BucketFilterRuleList `json:"Rules,omitempty"`
}

// S3BucketS3KeyFilterList represents a list of S3BucketS3KeyFilter
type S3BucketS3KeyFilterList []S3BucketS3KeyFilter

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketS3KeyFilterList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketS3KeyFilter{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketS3KeyFilterList{item}
		return nil
	}
	list := []S3BucketS3KeyFilter{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketS3KeyFilterList(list)
		return nil
	}
	return err
}

// S3BucketStorageClassAnalysis represents Amazon S3 Bucket StorageClassAnalysis
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-storageclassanalysis.html
type S3BucketStorageClassAnalysis struct {
	// Describes how data related to the storage class analysis should be
	// exported.
	DataExport *S3BucketDataExport `json:"DataExport,omitempty"`
}

// S3BucketStorageClassAnalysisList represents a list of S3BucketStorageClassAnalysis
type S3BucketStorageClassAnalysisList []S3BucketStorageClassAnalysis

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketStorageClassAnalysisList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketStorageClassAnalysis{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketStorageClassAnalysisList{item}
		return nil
	}
	list := []S3BucketStorageClassAnalysis{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketStorageClassAnalysisList(list)
		return nil
	}
	return err
}

// S3BucketTagFilter represents Amazon S3 Bucket TagFilter
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html
type S3BucketTagFilter struct {
	// The tag key.
	Key interface{} `json:"Key,omitempty"`

	// The tag value.
	Value interface{} `json:"Value,omitempty"`
}

// S3BucketTagFilterList represents a list of S3BucketTagFilter
type S3BucketTagFilterList []S3BucketTagFilter

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketTagFilterList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketTagFilter{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketTagFilterList{item}
		return nil
	}
	list := []S3BucketTagFilter{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketTagFilterList(list)
		return nil
	}
	return err
}

// SimpleStorageServiceBucketTopicConfiguration represents Amazon Simple Storage Service Bucket TopicConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html
type SimpleStorageServiceBucketTopicConfiguration struct {
	// The Amazon Simple Storage Service (Amazon S3) bucket event about which
	// to send notifications. For more information, see Supported Event Types
	// in the Amazon Simple Storage Service Developer Guide.
	Event *StringExpr `json:"Event,omitempty"`

	// The filtering rules that determine for which objects to send
	// notifications. For example, you can create a filter so that Amazon
	// Simple Storage Service (Amazon S3) sends notifications only when image
	// files with a .jpg extension are added to the bucket.
	Filter *S3BucketNotificationFilter `json:"Filter,omitempty"`

	// The Amazon SNS topic Amazon Resource Name (ARN) to which Amazon S3
	// reports the specified events.
	Topic *StringExpr `json:"Topic,omitempty"`
}

// SimpleStorageServiceBucketTopicConfigurationList represents a list of SimpleStorageServiceBucketTopicConfiguration
type SimpleStorageServiceBucketTopicConfigurationList []SimpleStorageServiceBucketTopicConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *SimpleStorageServiceBucketTopicConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := SimpleStorageServiceBucketTopicConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = SimpleStorageServiceBucketTopicConfigurationList{item}
		return nil
	}
	list := []SimpleStorageServiceBucketTopicConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = SimpleStorageServiceBucketTopicConfigurationList(list)
		return nil
	}
	return err
}

// S3BucketTransition represents Amazon S3 Bucket Transition
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html
type S3BucketTransition struct {
	// The storage class to which you want the object to transition, such as
	// GLACIER. For valid values, see the StorageClass request element of the
	// PUT Bucket lifecycle action in the Amazon Simple Storage Service API
	// Reference.
	StorageClass *StringExpr `json:"StorageClass,omitempty"`

	// Indicates when objects are transitioned to the specified storage
	// class. The date value must be in ISO 8601 format. The time is always
	// midnight UTC.
	TransitionDate *StringExpr `json:"TransitionDate,omitempty"`

	// Indicates the number of days after creation when objects are
	// transitioned to the specified storage class.
	TransitionInDays *IntegerExpr `json:"TransitionInDays,omitempty"`
}

// S3BucketTransitionList represents a list of S3BucketTransition
type S3BucketTransitionList []S3BucketTransition

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketTransitionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketTransition{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketTransitionList{item}
		return nil
	}
	list := []S3BucketTransition{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketTransitionList(list)
		return nil
	}
	return err
}

// S3BucketVersioningConfiguration represents Amazon S3 Bucket VersioningConfiguration
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html
type S3BucketVersioningConfiguration struct {
	// The versioning state of an Amazon S3 bucket. If you enable versioning,
	// you must suspend versioning to disable it.
	Status *StringExpr `json:"Status,omitempty"`
}

// S3BucketVersioningConfigurationList represents a list of S3BucketVersioningConfiguration
type S3BucketVersioningConfigurationList []S3BucketVersioningConfiguration

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3BucketVersioningConfigurationList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3BucketVersioningConfiguration{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3BucketVersioningConfigurationList{item}
		return nil
	}
	list := []S3BucketVersioningConfiguration{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3BucketVersioningConfigurationList(list)
		return nil
	}
	return err
}

// S3WebsiteConfigurationProperty represents Amazon S3 Website Configuration Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html
type S3WebsiteConfigurationProperty struct {
	// The name of the error document for the website.
	ErrorDocument *StringExpr `json:"ErrorDocument,omitempty"`

	// The name of the index document for the website.
	IndexDocument *StringExpr `json:"IndexDocument,omitempty"`

	// The redirect behavior for every request to this bucket's website
	// endpoint.
	RedirectAllRequestsTo *S3WebsiteConfigurationRedirectAllRequestsToProperty `json:"RedirectAllRequestsTo,omitempty"`

	// Rules that define when a redirect is applied and the redirect
	// behavior.
	RoutingRules *S3WebsiteConfigurationRoutingRulesPropertyList `json:"RoutingRules,omitempty"`
}

// S3WebsiteConfigurationPropertyList represents a list of S3WebsiteConfigurationProperty
type S3WebsiteConfigurationPropertyList []S3WebsiteConfigurationProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3WebsiteConfigurationPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3WebsiteConfigurationProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3WebsiteConfigurationPropertyList{item}
		return nil
	}
	list := []S3WebsiteConfigurationProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3WebsiteConfigurationPropertyList(list)
		return nil
	}
	return err
}

// S3WebsiteConfigurationRedirectAllRequestsToProperty represents Amazon S3 Website Configuration Redirect All Requests To Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html
type S3WebsiteConfigurationRedirectAllRequestsToProperty struct {
	// Name of the host where requests are redirected.
	HostName *StringExpr `json:"HostName,omitempty"`

	// Protocol to use (http or https) when redirecting requests. The default
	// is the protocol that is used in the original request.
	Protocol *StringExpr `json:"Protocol,omitempty"`
}

// S3WebsiteConfigurationRedirectAllRequestsToPropertyList represents a list of S3WebsiteConfigurationRedirectAllRequestsToProperty
type S3WebsiteConfigurationRedirectAllRequestsToPropertyList []S3WebsiteConfigurationRedirectAllRequestsToProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3WebsiteConfigurationRedirectAllRequestsToPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3WebsiteConfigurationRedirectAllRequestsToProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3WebsiteConfigurationRedirectAllRequestsToPropertyList{item}
		return nil
	}
	list := []S3WebsiteConfigurationRedirectAllRequestsToProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3WebsiteConfigurationRedirectAllRequestsToPropertyList(list)
		return nil
	}
	return err
}

// S3WebsiteConfigurationRoutingRulesProperty represents Amazon S3 Website Configuration Routing Rules Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html
type S3WebsiteConfigurationRoutingRulesProperty struct {
	// Redirect requests to another host, to another page, or with another
	// protocol.
	RedirectRule *S3WebsiteConfigurationRoutingRulesRedirectRuleProperty `json:"RedirectRule,omitempty"`

	// Rules that define when a redirect is applied.
	RoutingRuleCondition *S3WebsiteConfigurationRoutingRulesRoutingRuleConditionProperty `json:"RoutingRuleCondition,omitempty"`
}

// S3WebsiteConfigurationRoutingRulesPropertyList represents a list of S3WebsiteConfigurationRoutingRulesProperty
type S3WebsiteConfigurationRoutingRulesPropertyList []S3WebsiteConfigurationRoutingRulesProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3WebsiteConfigurationRoutingRulesPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3WebsiteConfigurationRoutingRulesProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3WebsiteConfigurationRoutingRulesPropertyList{item}
		return nil
	}
	list := []S3WebsiteConfigurationRoutingRulesProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3WebsiteConfigurationRoutingRulesPropertyList(list)
		return nil
	}
	return err
}

// S3WebsiteConfigurationRoutingRulesRedirectRuleProperty represents Amazon S3 Website Configuration Routing Rules Redirect Rule Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html
type S3WebsiteConfigurationRoutingRulesRedirectRuleProperty struct {
	// Name of the host where requests are redirected.
	HostName *StringExpr `json:"HostName,omitempty"`

	// The HTTP redirect code to use on the response.
	HttpRedirectCode *StringExpr `json:"HttpRedirectCode,omitempty"`

	// The protocol to use in the redirect request.
	Protocol *StringExpr `json:"Protocol,omitempty"`

	// The object key prefix to use in the redirect request. For example, to
	// redirect requests for all pages with the prefix docs/ (objects in the
	// docs/ folder) to the documents/ prefix, you can set the
	// KeyPrefixEquals property in routing condition property to docs/, and
	// set the ReplaceKeyPrefixWith property to documents/.
	ReplaceKeyPrefixWith *StringExpr `json:"ReplaceKeyPrefixWith,omitempty"`

	// The specific object key to use in the redirect request. For example,
	// redirect request to error.html.
	ReplaceKeyWith *StringExpr `json:"ReplaceKeyWith,omitempty"`
}

// S3WebsiteConfigurationRoutingRulesRedirectRulePropertyList represents a list of S3WebsiteConfigurationRoutingRulesRedirectRuleProperty
type S3WebsiteConfigurationRoutingRulesRedirectRulePropertyList []S3WebsiteConfigurationRoutingRulesRedirectRuleProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3WebsiteConfigurationRoutingRulesRedirectRulePropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3WebsiteConfigurationRoutingRulesRedirectRuleProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3WebsiteConfigurationRoutingRulesRedirectRulePropertyList{item}
		return nil
	}
	list := []S3WebsiteConfigurationRoutingRulesRedirectRuleProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3WebsiteConfigurationRoutingRulesRedirectRulePropertyList(list)
		return nil
	}
	return err
}

// S3WebsiteConfigurationRoutingRulesRoutingRuleConditionProperty represents Amazon S3 Website Configuration Routing Rules Routing Rule Condition Property
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html
type S3WebsiteConfigurationRoutingRulesRoutingRuleConditionProperty struct {
	// Applies this redirect if the error code equals this value in the event
	// of an error.
	HttpErrorCodeReturnedEquals *StringExpr `json:"HttpErrorCodeReturnedEquals,omitempty"`

	// The object key name prefix when the redirect is applied. For example,
	// to redirect requests for ExamplePage.html, set the key prefix to
	// ExamplePage.html. To redirect request for all pages with the prefix
	// docs/, set the key prefix to docs/, which identifies all objects in
	// the docs/ folder.
	KeyPrefixEquals *StringExpr `json:"KeyPrefixEquals,omitempty"`
}

// S3WebsiteConfigurationRoutingRulesRoutingRuleConditionPropertyList represents a list of S3WebsiteConfigurationRoutingRulesRoutingRuleConditionProperty
type S3WebsiteConfigurationRoutingRulesRoutingRuleConditionPropertyList []S3WebsiteConfigurationRoutingRulesRoutingRuleConditionProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *S3WebsiteConfigurationRoutingRulesRoutingRuleConditionPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := S3WebsiteConfigurationRoutingRulesRoutingRuleConditionProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = S3WebsiteConfigurationRoutingRulesRoutingRuleConditionPropertyList{item}
		return nil
	}
	list := []S3WebsiteConfigurationRoutingRulesRoutingRuleConditionProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = S3WebsiteConfigurationRoutingRulesRoutingRuleConditionPropertyList(list)
		return nil
	}
	return err
}

// Route53ServiceDiscoveryDnsConfig represents Amazon Route 53 ServiceDiscovery DnsConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-dnsconfig.html
type Route53ServiceDiscoveryDnsConfig struct {
	// Contains one DnsRecord element for each DNS record that you want
	// Amazon Route 53 to create when you register an instance.
	DnsRecords *Route53ServiceDiscoveryDnsRecordList `json:"DnsRecords,omitempty"`

	// The ID of the namespace that you want to use for DNS configuration.
	NamespaceId *StringExpr `json:"NamespaceId,omitempty"`
}

// Route53ServiceDiscoveryDnsConfigList represents a list of Route53ServiceDiscoveryDnsConfig
type Route53ServiceDiscoveryDnsConfigList []Route53ServiceDiscoveryDnsConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53ServiceDiscoveryDnsConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53ServiceDiscoveryDnsConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53ServiceDiscoveryDnsConfigList{item}
		return nil
	}
	list := []Route53ServiceDiscoveryDnsConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53ServiceDiscoveryDnsConfigList(list)
		return nil
	}
	return err
}

// Route53ServiceDiscoveryDnsRecord represents Amazon Route 53 ServiceDiscovery DnsRecord
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-dnsrecord.html
type Route53ServiceDiscoveryDnsRecord struct {
	// The DNS type of the record that you want Amazon Route 53 to create.
	// Supported record types include A, AAAA, and SRV.
	Type *StringExpr `json:"Type,omitempty"`

	// The amount of time, in seconds, that you want DNS resolvers to cache
	// the settings for this record.
	TTL *StringExpr `json:"TTL,omitempty"`
}

// Route53ServiceDiscoveryDnsRecordList represents a list of Route53ServiceDiscoveryDnsRecord
type Route53ServiceDiscoveryDnsRecordList []Route53ServiceDiscoveryDnsRecord

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53ServiceDiscoveryDnsRecordList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53ServiceDiscoveryDnsRecord{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53ServiceDiscoveryDnsRecordList{item}
		return nil
	}
	list := []Route53ServiceDiscoveryDnsRecord{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53ServiceDiscoveryDnsRecordList(list)
		return nil
	}
	return err
}

// Route53ServiceDiscoveryHealthCheckConfig represents Amazon Route 53 ServiceDiscovery HealthCheckConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-healthcheckconfig.html
type Route53ServiceDiscoveryHealthCheckConfig struct {
	// The type of health check that you want to create, which indicates how
	// Amazon Route 53 determines whether an endpoint is healthy. Valid
	// types include HTTP, HTTPS, and TCP.
	Type *StringExpr `json:"Type,omitempty"`

	// The path that you want Amazon Route 53 to request when performing
	// health checks. The path can be any value for which your endpoint will
	// return an HTTP status code of 2xx or 3xx when the endpoint is healthy,
	// such as the file /docs/route53-health-check.html. Amazon Route 53
	// automatically adds the DNS name for the service and a leading forward
	// slash (/) character.
	ResourcePath *StringExpr `json:"ResourcePath,omitempty"`

	// The number of consecutive health checks that an endpoint must pass or
	// fail for Amazon Route 53 to change the current status of the endpoint
	// from unhealthy to healthy or vice versa. For more information, see How
	// Amazon Route 53 Determines Whether an Endpoint Is Healthy in the
	// Amazon Route 53 Developer Guide
	FailureThreshold interface{} `json:"FailureThreshold,omitempty"`
}

// Route53ServiceDiscoveryHealthCheckConfigList represents a list of Route53ServiceDiscoveryHealthCheckConfig
type Route53ServiceDiscoveryHealthCheckConfigList []Route53ServiceDiscoveryHealthCheckConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *Route53ServiceDiscoveryHealthCheckConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := Route53ServiceDiscoveryHealthCheckConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = Route53ServiceDiscoveryHealthCheckConfigList{item}
		return nil
	}
	list := []Route53ServiceDiscoveryHealthCheckConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = Route53ServiceDiscoveryHealthCheckConfigList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerAssociationTargets represents Amazon EC2 Systems Manager Association Targets
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-association-targets.html
type EC2SystemsManagerAssociationTargets struct {
	// The name of the criteria that EC2 instances must meet. For valid keys,
	// see the Target data type in the Amazon EC2 Systems Manager API
	// Reference.
	Key *StringExpr `json:"Key,omitempty"`

	// The value of the criteria. SSM runs targeted commands on EC2 instances
	// that match the criteria. For more information, see the Target data
	// type in the Amazon EC2 Systems Manager API Reference.
	Values interface{} `json:"Values,omitempty"`
}

// EC2SystemsManagerAssociationTargetsList represents a list of EC2SystemsManagerAssociationTargets
type EC2SystemsManagerAssociationTargetsList []EC2SystemsManagerAssociationTargets

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerAssociationTargetsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerAssociationTargets{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerAssociationTargetsList{item}
		return nil
	}
	list := []EC2SystemsManagerAssociationTargets{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerAssociationTargetsList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerMaintenanceWindowTargetTargets represents Amazon EC2 Systems Manager MaintenanceWindowTarget Targets
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtarget-targets.html
type EC2SystemsManagerMaintenanceWindowTargetTargets struct {
	// User-defined criteria for sending commands that target instances that
	// meet the criteria. Key can be tag:Amazon EC2 tag or InstanceIds. For
	// more information about how to send commands that target instances
	// using Key,Value parameters, see Sending Commands to a Fleet in the
	// Amazon EC2 Systems Manager User Guide.
	Key interface{} `json:"Key,omitempty"`

	// User-defined criteria that maps to Key. For example, if you specify
	// tag:ServerRole, you can specify value:WebServer to execute a command
	// on instances that include the Amazon EC2 tags of ServerRole,WebServer.
	// For more information about how to send commands that target instances
	// using Key,Value parameters, see Sending Commands to a Fleet in the
	// Amazon EC2 Systems Manager User Guide.
	Values interface{} `json:"Values,omitempty"`
}

// EC2SystemsManagerMaintenanceWindowTargetTargetsList represents a list of EC2SystemsManagerMaintenanceWindowTargetTargets
type EC2SystemsManagerMaintenanceWindowTargetTargetsList []EC2SystemsManagerMaintenanceWindowTargetTargets

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerMaintenanceWindowTargetTargetsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerMaintenanceWindowTargetTargets{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTargetTargetsList{item}
		return nil
	}
	list := []EC2SystemsManagerMaintenanceWindowTargetTargets{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTargetTargetsList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerMaintenanceWindowTaskLoggingInfo represents Amazon EC2 Systems Manager MaintenanceWindowTask LoggingInfo
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-logginginfo.html
type EC2SystemsManagerMaintenanceWindowTaskLoggingInfo struct {
	// The name of the Amazon S3 bucket where execution logs are stored.
	S3Bucket interface{} `json:"S3Bucket,omitempty"`

	// The region where the Amazon S3 bucket is located.
	Region interface{} `json:"Region,omitempty"`

	// The Amazon S3 bucket subfolder.
	S3Prefix interface{} `json:"S3Prefix,omitempty"`
}

// EC2SystemsManagerMaintenanceWindowTaskLoggingInfoList represents a list of EC2SystemsManagerMaintenanceWindowTaskLoggingInfo
type EC2SystemsManagerMaintenanceWindowTaskLoggingInfoList []EC2SystemsManagerMaintenanceWindowTaskLoggingInfo

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerMaintenanceWindowTaskLoggingInfoList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerMaintenanceWindowTaskLoggingInfo{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskLoggingInfoList{item}
		return nil
	}
	list := []EC2SystemsManagerMaintenanceWindowTaskLoggingInfo{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskLoggingInfoList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParameters represents Amazon EC2 Systems Manager MaintenanceWindowTask MaintenanceWindowAutomationParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowautomationparameters.html
type EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParameters struct {
	// The parameters for the AUTOMATION task.
	Parameters interface{} `json:"Parameters,omitempty"`

	// The version of an Automation document to use during task execution.
	DocumentVersion interface{} `json:"DocumentVersion,omitempty"`
}

// EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParametersList represents a list of EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParameters
type EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParametersList []EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParametersList{item}
		return nil
	}
	list := []EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParametersList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParameters represents Amazon EC2 Systems Manager MaintenanceWindowTask MaintenanceWindowLambdaParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowlambdaparameters.html
type EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParameters struct {
	// Client-specific information to pass to the Lambda function that you're
	// invoking. You can then use the context variable to process the client
	// information in your Lambda function.
	ClientContext interface{} `json:"ClientContext,omitempty"`

	// A Lambda function version or alias name. If you specify a function
	// version, the action uses the qualified function Amazon Resource Name
	// (ARN) to invoke a specific Lambda function. If you specify an alias
	// name, the action uses the alias ARN to invoke the Lambda function
	// version that the alias points to.
	Qualifier interface{} `json:"Qualifier,omitempty"`

	// JSON to provide to your Lambda function as input.
	Payload interface{} `json:"Payload,omitempty"`
}

// EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParametersList represents a list of EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParameters
type EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParametersList []EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParametersList{item}
		return nil
	}
	list := []EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParametersList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParameters represents Amazon EC2 Systems Manager MaintenanceWindowTask MaintenanceWindowRunCommandParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html
type EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParameters struct {
	// If this time is reached and the command hasn't already started
	// executing, it doesn't execute.
	TimeoutSeconds interface{} `json:"TimeoutSeconds,omitempty"`

	// Information about the command or commands to execute.
	Comment interface{} `json:"Comment,omitempty"`

	// The Amazon S3 bucket subfolder.
	OutputS3KeyPrefix interface{} `json:"OutputS3KeyPrefix,omitempty"`

	// The parameters for the RUN_COMMAND task execution.
	Parameters interface{} `json:"Parameters,omitempty"`

	// The SHA-256 or SHA-1 hash type. SHA-1 hashes are deprecated.
	DocumentHashType interface{} `json:"DocumentHashType,omitempty"`

	// The IAM service role that's used during task execution.
	ServiceRoleArn interface{} `json:"ServiceRoleArn,omitempty"`

	// Configurations for sending notifications about command status changes
	// on a per-instance basis.
	NotificationConfig *EC2SystemsManagerMaintenanceWindowTaskNotificationConfig `json:"NotificationConfig,omitempty"`

	// The name of the Amazon S3 bucket.
	OutputS3BucketName interface{} `json:"OutputS3BucketName,omitempty"`

	// The SHA-256 or SHA-1 hash created by the system when the document was
	// created. SHA-1 hashes are deprecated.
	DocumentHash interface{} `json:"DocumentHash,omitempty"`
}

// EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParametersList represents a list of EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParameters
type EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParametersList []EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParametersList{item}
		return nil
	}
	list := []EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParametersList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParameters represents Amazon EC2 Systems Manager MaintenanceWindowTask MaintenanceWindowStepFunctionsParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowstepfunctionsparameters.html
type EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParameters struct {
	// The inputs for the STEP_FUNCTION task.
	Input interface{} `json:"Input,omitempty"`

	// The name of the STEP_FUNCTION task.
	Name interface{} `json:"Name,omitempty"`
}

// EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParametersList represents a list of EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParameters
type EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParametersList []EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParametersList{item}
		return nil
	}
	list := []EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParametersList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerMaintenanceWindowTaskNotificationConfig represents Amazon EC2 Systems Manager MaintenanceWindowTask NotificationConfig
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-notificationconfig.html
type EC2SystemsManagerMaintenanceWindowTaskNotificationConfig struct {
	// An Amazon Resource Name (ARN) for an Amazon SNS topic. Run Command
	// pushes notifications about command status changes to this topic.
	NotificationArn interface{} `json:"NotificationArn,omitempty"`

	// The notification type.
	NotificationType interface{} `json:"NotificationType,omitempty"`

	// The different events that you can receive notifications for. These
	// events include the following: All (events), InProgress, Success,
	// TimedOut, Cancelled, Failed. To learn more about these events, see
	// Setting Up Events and Notifications in the Amazon EC2 Systems Manager
	// User Guide.
	NotificationEvents interface{} `json:"NotificationEvents,omitempty"`
}

// EC2SystemsManagerMaintenanceWindowTaskNotificationConfigList represents a list of EC2SystemsManagerMaintenanceWindowTaskNotificationConfig
type EC2SystemsManagerMaintenanceWindowTaskNotificationConfigList []EC2SystemsManagerMaintenanceWindowTaskNotificationConfig

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerMaintenanceWindowTaskNotificationConfigList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerMaintenanceWindowTaskNotificationConfig{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskNotificationConfigList{item}
		return nil
	}
	list := []EC2SystemsManagerMaintenanceWindowTaskNotificationConfig{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskNotificationConfigList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerMaintenanceWindowTaskTarget represents Amazon EC2 Systems Manager MaintenanceWindowTask Target
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-target.html
type EC2SystemsManagerMaintenanceWindowTaskTarget struct {
	// User-defined criteria for sending commands that target instances that
	// meet the criteria. Key can be tag:Amazon EC2 tagor InstanceIds. For
	// more information about how to send commands that target instances by
	// using Key,Value parameters, see Sending Commands to a Fleet in the
	// Amazon EC2 Systems Manager User Guide.
	Key interface{} `json:"Key,omitempty"`

	// User-defined criteria that maps to Key. For example, if you specify
	// tag:ServerRole, you can specify value:WebServer to execute a command
	// on instances that include Amazon EC2 tags of ServerRole,WebServer. For
	// more information about how to send commands that target instances
	// using Key,Value parameters, see Sending Commands to a Fleet in the
	// Amazon EC2 Systems Manager User Guide.
	Values interface{} `json:"Values,omitempty"`
}

// EC2SystemsManagerMaintenanceWindowTaskTargetList represents a list of EC2SystemsManagerMaintenanceWindowTaskTarget
type EC2SystemsManagerMaintenanceWindowTaskTargetList []EC2SystemsManagerMaintenanceWindowTaskTarget

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerMaintenanceWindowTaskTargetList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerMaintenanceWindowTaskTarget{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskTargetList{item}
		return nil
	}
	list := []EC2SystemsManagerMaintenanceWindowTaskTarget{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskTargetList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParameters represents Amazon EC2 Systems Manager MaintenanceWindowTask TaskInvocationParameters
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-taskinvocationparameters.html
type EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParameters struct {
	// The parameters for a RUN_COMMAND task type.
	MaintenanceWindowRunCommandParameters *EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowRunCommandParameters `json:"MaintenanceWindowRunCommandParameters,omitempty"`

	// The parameters for an AUTOMATION task type.
	MaintenanceWindowAutomationParameters *EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowAutomationParameters `json:"MaintenanceWindowAutomationParameters,omitempty"`

	// The parameters for a STEP_FUNCTION task type.
	MaintenanceWindowStepFunctionsParameters *EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowStepFunctionsParameters `json:"MaintenanceWindowStepFunctionsParameters,omitempty"`

	// The parameters for a LAMBDA task type.
	MaintenanceWindowLambdaParameters *EC2SystemsManagerMaintenanceWindowTaskMaintenanceWindowLambdaParameters `json:"MaintenanceWindowLambdaParameters,omitempty"`
}

// EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParametersList represents a list of EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParameters
type EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParametersList []EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParameters

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParametersList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParameters{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParametersList{item}
		return nil
	}
	list := []EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParameters{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerMaintenanceWindowTaskTaskInvocationParametersList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerPatchBaselinePatchFilterGroup represents Amazon EC2 Systems Manager PatchBaseline PatchFilterGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-patchbaseline-patchfiltergroup.html
type EC2SystemsManagerPatchBaselinePatchFilterGroup struct {
	// The set of patch filters that make up the group.
	PatchFilters *EC2SystemsManagerPatchBaselinePatchFilterList `json:"PatchFilters,omitempty"`
}

// EC2SystemsManagerPatchBaselinePatchFilterGroupList represents a list of EC2SystemsManagerPatchBaselinePatchFilterGroup
type EC2SystemsManagerPatchBaselinePatchFilterGroupList []EC2SystemsManagerPatchBaselinePatchFilterGroup

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerPatchBaselinePatchFilterGroupList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerPatchBaselinePatchFilterGroup{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerPatchBaselinePatchFilterGroupList{item}
		return nil
	}
	list := []EC2SystemsManagerPatchBaselinePatchFilterGroup{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerPatchBaselinePatchFilterGroupList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerPatchBaselineRule represents Amazon EC2 Systems Manager PatchBaseline Rule
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-patchbaseline-rule.html
type EC2SystemsManagerPatchBaselineRule struct {
	// The patch filter group that defines the criteria for the rule.
	PatchFilterGroup *EC2SystemsManagerPatchBaselinePatchFilterGroup `json:"PatchFilterGroup,omitempty"`

	// The number of days after the release date of each patch that matches
	// the rule to mark the patch as approved in the patch baseline. For
	// example, a value of 7 means that patches are approved seven days after
	// they are released.
	ApproveAfterDays interface{} `json:"ApproveAfterDays,omitempty"`

	// A compliance severity level for all approved patches in a patch
	// baseline. Valid compliance severity levels include the following:
	// Unspecified, Critical, High, Medium, Low, and Informational.
	ComplianceLevel interface{} `json:"ComplianceLevel,omitempty"`
}

// EC2SystemsManagerPatchBaselineRuleList represents a list of EC2SystemsManagerPatchBaselineRule
type EC2SystemsManagerPatchBaselineRuleList []EC2SystemsManagerPatchBaselineRule

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerPatchBaselineRuleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerPatchBaselineRule{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerPatchBaselineRuleList{item}
		return nil
	}
	list := []EC2SystemsManagerPatchBaselineRule{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerPatchBaselineRuleList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerPatchBaselinePatchFilter represents Amazon EC2 Systems Manager PatchBaseline PatchFilter
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-patchbaseline-patchfilter.html
type EC2SystemsManagerPatchBaselinePatchFilter struct {
	// The key for the filter. For information about valid keys, see
	// PatchFilter in the Amazon EC2 Systems Manager API Reference.
	Key interface{} `json:"Key,omitempty"`

	// The values for the filter key.
	Values interface{} `json:"Values,omitempty"`
}

// EC2SystemsManagerPatchBaselinePatchFilterList represents a list of EC2SystemsManagerPatchBaselinePatchFilter
type EC2SystemsManagerPatchBaselinePatchFilterList []EC2SystemsManagerPatchBaselinePatchFilter

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerPatchBaselinePatchFilterList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerPatchBaselinePatchFilter{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerPatchBaselinePatchFilterList{item}
		return nil
	}
	list := []EC2SystemsManagerPatchBaselinePatchFilter{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerPatchBaselinePatchFilterList(list)
		return nil
	}
	return err
}

// EC2SystemsManagerPatchBaselineRuleGroup represents Amazon EC2 Systems Manager PatchBaseline RuleGroup
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-patchbaseline-rulegroup.html
type EC2SystemsManagerPatchBaselineRuleGroup struct {
	// The rules that make up the rule group.
	PatchRules *EC2SystemsManagerPatchBaselineRuleList `json:"PatchRules,omitempty"`
}

// EC2SystemsManagerPatchBaselineRuleGroupList represents a list of EC2SystemsManagerPatchBaselineRuleGroup
type EC2SystemsManagerPatchBaselineRuleGroupList []EC2SystemsManagerPatchBaselineRuleGroup

// UnmarshalJSON sets the object from the provided JSON representation
func (l *EC2SystemsManagerPatchBaselineRuleGroupList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := EC2SystemsManagerPatchBaselineRuleGroup{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = EC2SystemsManagerPatchBaselineRuleGroupList{item}
		return nil
	}
	list := []EC2SystemsManagerPatchBaselineRuleGroup{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = EC2SystemsManagerPatchBaselineRuleGroupList(list)
		return nil
	}
	return err
}

// SNSSubscriptionProperty represents Amazon SNS Subscription Property Type
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html
type SNSSubscriptionProperty struct {
	// The subscription's endpoint (format depends on the protocol). For more
	// information, see the Subscribe Endpoint parameter in the Amazon Simple
	// Notification Service API Reference.
	Endpoint *StringExpr `json:"Endpoint,omitempty"`

	// The subscription's protocol. For more information, see the Subscribe
	// Protocol parameter in the Amazon Simple Notification Service API
	// Reference.
	Protocol *StringExpr `json:"Protocol,omitempty"`
}

// SNSSubscriptionPropertyList represents a list of SNSSubscriptionProperty
type SNSSubscriptionPropertyList []SNSSubscriptionProperty

// UnmarshalJSON sets the object from the provided JSON representation
func (l *SNSSubscriptionPropertyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := SNSSubscriptionProperty{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = SNSSubscriptionPropertyList{item}
		return nil
	}
	list := []SNSSubscriptionProperty{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = SNSSubscriptionPropertyList(list)
		return nil
	}
	return err
}

// SQSRedrivePolicy represents Amazon SQS RedrivePolicy
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues-redrivepolicy.html
type SQSRedrivePolicy struct {
	// The Amazon Resource Name (ARN) of the dead-letter queue to which
	// Amazon SQS moves messages after the value of maxReceiveCount is
	// exceeded.
	DeadLetterTargetArn *StringExpr `json:"deadLetterTargetArn,omitempty"`

	// The number of times a message is delivered to the source queue before
	// being moved to the dead-letter queue.
	MaxReceiveCount *IntegerExpr `json:"maxReceiveCount,omitempty"`
}

// SQSRedrivePolicyList represents a list of SQSRedrivePolicy
type SQSRedrivePolicyList []SQSRedrivePolicy

// UnmarshalJSON sets the object from the provided JSON representation
func (l *SQSRedrivePolicyList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := SQSRedrivePolicy{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = SQSRedrivePolicyList{item}
		return nil
	}
	list := []SQSRedrivePolicy{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = SQSRedrivePolicyList(list)
		return nil
	}
	return err
}

// WAFByteMatchSetByteMatchTuples represents AWS WAF ByteMatchSet ByteMatchTuples
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-bytematchset-bytematchtuples.html
type WAFByteMatchSetByteMatchTuples struct {
	// The part of a web request that you want AWS WAF to search, such as a
	// specific header or a query string.
	FieldToMatch *WAFByteMatchSetByteMatchTuplesFieldToMatch `json:"FieldToMatch,omitempty"`

	// How AWS WAF finds matches within the web request part in which you are
	// searching. For valid values, see the PositionalConstraint content for
	// the ByteMatchTuple data type in the AWS WAF API Reference.
	PositionalConstraint *StringExpr `json:"PositionalConstraint,omitempty"`

	// The value that AWS WAF searches for. AWS CloudFormation base64 encodes
	// this value before sending it to AWS WAF.
	TargetString *StringExpr `json:"TargetString,omitempty"`

	// The base64-encoded value that AWS WAF searches for. AWS CloudFormation
	// sends this value to AWS WAF without encoding it.
	TargetStringBase64 *StringExpr `json:"TargetStringBase64,omitempty"`

	// Specifies how AWS WAF processes the target string value. Text
	// transformations eliminate some of the unusual formatting that
	// attackers use in web requests in an effort to bypass AWS WAF. If you
	// specify a transformation, AWS WAF transforms the target string value
	// before inspecting a web request for a match.
	TextTransformation *StringExpr `json:"TextTransformation,omitempty"`
}

// WAFByteMatchSetByteMatchTuplesList represents a list of WAFByteMatchSetByteMatchTuples
type WAFByteMatchSetByteMatchTuplesList []WAFByteMatchSetByteMatchTuples

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFByteMatchSetByteMatchTuplesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFByteMatchSetByteMatchTuples{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFByteMatchSetByteMatchTuplesList{item}
		return nil
	}
	list := []WAFByteMatchSetByteMatchTuples{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFByteMatchSetByteMatchTuplesList(list)
		return nil
	}
	return err
}

// WAFByteMatchSetByteMatchTuplesFieldToMatch represents AWS WAF ByteMatchSet ByteMatchTuples FieldToMatch
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch.html
type WAFByteMatchSetByteMatchTuplesFieldToMatch struct {
	// If you specify HEADER for the Type property, the name of the header
	// that AWS WAF searches for, such as User-Agent or Referer. If you
	// specify any other value for the Type property, do not specify this
	// property.
	Data *StringExpr `json:"Data,omitempty"`

	// The part of the web request in which AWS WAF searches for the target
	// string. For valid values, see FieldToMatch in the AWS WAF API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFByteMatchSetByteMatchTuplesFieldToMatchList represents a list of WAFByteMatchSetByteMatchTuplesFieldToMatch
type WAFByteMatchSetByteMatchTuplesFieldToMatchList []WAFByteMatchSetByteMatchTuplesFieldToMatch

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFByteMatchSetByteMatchTuplesFieldToMatchList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFByteMatchSetByteMatchTuplesFieldToMatch{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFByteMatchSetByteMatchTuplesFieldToMatchList{item}
		return nil
	}
	list := []WAFByteMatchSetByteMatchTuplesFieldToMatch{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFByteMatchSetByteMatchTuplesFieldToMatchList(list)
		return nil
	}
	return err
}

// WAFIPSetIPSetDescriptors represents AWS WAF IPSet IPSetDescriptors
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-ipset-ipsetdescriptors.html
type WAFIPSetIPSetDescriptors struct {
	// The IP address type, such as IPV4. For valid values, see the Type
	// contents of the IPSetDescriptor data type in the AWS WAF API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`

	// An IP address (in CIDR notation) that AWS WAF permits, blocks, or
	// counts. For example, to specify a single IP address such as
	// 192.0.2.44, specify 192.0.2.44/32. To specify a range of IP addresses
	// such as 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24.
	Value *StringExpr `json:"Value,omitempty"`
}

// WAFIPSetIPSetDescriptorsList represents a list of WAFIPSetIPSetDescriptors
type WAFIPSetIPSetDescriptorsList []WAFIPSetIPSetDescriptors

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFIPSetIPSetDescriptorsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFIPSetIPSetDescriptors{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFIPSetIPSetDescriptorsList{item}
		return nil
	}
	list := []WAFIPSetIPSetDescriptors{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFIPSetIPSetDescriptorsList(list)
		return nil
	}
	return err
}

// WAFRulePredicates represents AWS WAF Rule Predicates
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-rule-predicates.html
type WAFRulePredicates struct {
	// The unique identifier of a predicate, such as the ID of a ByteMatchSet
	// or IPSet.
	DataId *StringExpr `json:"DataId,omitempty"`

	// Whether to use the settings or the negated settings that you specified
	// in the ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet,
	// or XssMatchSet objects.
	Negated *BoolExpr `json:"Negated,omitempty"`

	// The type of predicate in a rule, such as an IPSet (IPMatch). For valid
	// values, see the Type contents of the Predicate data type in the AWS
	// WAF API Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFRulePredicatesList represents a list of WAFRulePredicates
type WAFRulePredicatesList []WAFRulePredicates

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRulePredicatesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRulePredicates{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRulePredicatesList{item}
		return nil
	}
	list := []WAFRulePredicates{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRulePredicatesList(list)
		return nil
	}
	return err
}

// WAFSizeConstraintSetSizeConstraint represents AWS WAF SizeConstraintSet SizeConstraint
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sizeconstraintset-sizeconstraint.html
type WAFSizeConstraintSetSizeConstraint struct {
	// The type of comparison that you want AWS WAF to perform. AWS WAF uses
	// this value in combination with the Size and FieldToMatch property
	// values to check if the size constraint is a match. For more
	// information and valid values, see the ComparisonOperator content for
	// the SizeConstraint data type in the AWS WAF API Reference.
	ComparisonOperator *StringExpr `json:"ComparisonOperator,omitempty"`

	// The part of a web request that you want AWS WAF to search, such as a
	// specific header or a query string.
	FieldToMatch *WAFSizeConstraintSetSizeConstraintFieldToMatch `json:"FieldToMatch,omitempty"`

	// The size in bytes that you want AWS WAF to compare against the size of
	// the specified FieldToMatch. AWS WAF uses Size in combination with the
	// ComparisonOperator and FieldToMatch property values to check if the
	// size constraint of a web request is a match. For more information and
	// valid values, see the Size content for the SizeConstraint data type in
	// the AWS WAF API Reference.
	Size *IntegerExpr `json:"Size,omitempty"`

	// Specifies how AWS WAF processes the FieldToMatch property before
	// inspecting a request for a match. Text transformations eliminate some
	// of the unusual formatting that attackers use in web requests in an
	// effort to bypass AWS WAF. If you specify a transformation, AWS WAF
	// transforms the FieldToMatch before inspecting a web request for a
	// match.
	TextTransformation *StringExpr `json:"TextTransformation,omitempty"`
}

// WAFSizeConstraintSetSizeConstraintList represents a list of WAFSizeConstraintSetSizeConstraint
type WAFSizeConstraintSetSizeConstraintList []WAFSizeConstraintSetSizeConstraint

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFSizeConstraintSetSizeConstraintList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFSizeConstraintSetSizeConstraint{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFSizeConstraintSetSizeConstraintList{item}
		return nil
	}
	list := []WAFSizeConstraintSetSizeConstraint{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFSizeConstraintSetSizeConstraintList(list)
		return nil
	}
	return err
}

// WAFSizeConstraintSetSizeConstraintFieldToMatch represents AWS WAF SizeConstraintSet SizeConstraint FieldToMatch
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch.html
type WAFSizeConstraintSetSizeConstraintFieldToMatch struct {
	// If you specify HEADER for the Type property, the name of the header
	// that AWS WAF searches for, such as User-Agent or Referer. If you
	// specify any other value for the Type property, do not specify this
	// property.
	Data *StringExpr `json:"Data,omitempty"`

	// The part of the web request in which AWS WAF searches for the target
	// string. For valid values, see FieldToMatch in the AWS WAF API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFSizeConstraintSetSizeConstraintFieldToMatchList represents a list of WAFSizeConstraintSetSizeConstraintFieldToMatch
type WAFSizeConstraintSetSizeConstraintFieldToMatchList []WAFSizeConstraintSetSizeConstraintFieldToMatch

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFSizeConstraintSetSizeConstraintFieldToMatchList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFSizeConstraintSetSizeConstraintFieldToMatch{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFSizeConstraintSetSizeConstraintFieldToMatchList{item}
		return nil
	}
	list := []WAFSizeConstraintSetSizeConstraintFieldToMatch{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFSizeConstraintSetSizeConstraintFieldToMatchList(list)
		return nil
	}
	return err
}

// WAFSqlInjectionMatchSetSqlInjectionMatchTuples represents AWS WAF SqlInjectionMatchSet SqlInjectionMatchTuples
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples.html
type WAFSqlInjectionMatchSetSqlInjectionMatchTuples struct {
	// The part of a web request that you want AWS WAF to search, such as a
	// specific header or a query string.
	FieldToMatch *WAFByteMatchSetByteMatchTuplesFieldToMatch `json:"FieldToMatch,omitempty"`

	// Text transformations eliminate some of the unusual formatting that
	// attackers use in web requests in an effort to bypass AWS WAF. If you
	// specify a transformation, AWS WAF transforms the target string value
	// before inspecting a web request for a match. For valid values, see the
	// TextTransformation content for the SqlInjectionMatchTuple data type in
	// the AWS WAF API Reference.
	TextTransformation *StringExpr `json:"TextTransformation,omitempty"`
}

// WAFSqlInjectionMatchSetSqlInjectionMatchTuplesList represents a list of WAFSqlInjectionMatchSetSqlInjectionMatchTuples
type WAFSqlInjectionMatchSetSqlInjectionMatchTuplesList []WAFSqlInjectionMatchSetSqlInjectionMatchTuples

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFSqlInjectionMatchSetSqlInjectionMatchTuplesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFSqlInjectionMatchSetSqlInjectionMatchTuples{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFSqlInjectionMatchSetSqlInjectionMatchTuplesList{item}
		return nil
	}
	list := []WAFSqlInjectionMatchSetSqlInjectionMatchTuples{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFSqlInjectionMatchSetSqlInjectionMatchTuplesList(list)
		return nil
	}
	return err
}

// WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch represents AWS WAF SqlInjectionMatchSet SqlInjectionMatchTuples FieldToMatch
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples-fieldtomatch.html
type WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch struct {
	// If you specify HEADER for the Type property, the name of the header
	// that AWS WAF searches for, such as User-Agent or Referer. If you
	// specify any other value for the Type property, do not specify this
	// property.
	Data *StringExpr `json:"Data,omitempty"`

	// The part of the web request in which AWS WAF searches for the target
	// string. For valid values, see FieldToMatch in the AWS WAF API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchList represents a list of WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch
type WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchList []WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchList{item}
		return nil
	}
	list := []WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchList(list)
		return nil
	}
	return err
}

// WAFXssMatchSetXssMatchTuple represents AWS WAF XssMatchSet XssMatchTuple
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-xssmatchset-xssmatchtuple.html
type WAFXssMatchSetXssMatchTuple struct {
	// The part of a web request that you want AWS WAF to search, such as a
	// specific header or a query string.
	FieldToMatch *WAFXssMatchSetXssMatchTupleFieldToMatch `json:"FieldToMatch,omitempty"`

	// Specifies how AWS WAF processes the FieldToMatch property before
	// inspecting a request for a match. Text transformations eliminate some
	// of the unusual formatting that attackers use in web requests in an
	// effort to bypass AWS WAF. If you specify a transformation, AWS WAF
	// transforms the FieldToMatch parameter before inspecting a web request
	// for a match.
	TextTransformation *StringExpr `json:"TextTransformation,omitempty"`
}

// WAFXssMatchSetXssMatchTupleList represents a list of WAFXssMatchSetXssMatchTuple
type WAFXssMatchSetXssMatchTupleList []WAFXssMatchSetXssMatchTuple

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFXssMatchSetXssMatchTupleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFXssMatchSetXssMatchTuple{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFXssMatchSetXssMatchTupleList{item}
		return nil
	}
	list := []WAFXssMatchSetXssMatchTuple{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFXssMatchSetXssMatchTupleList(list)
		return nil
	}
	return err
}

// WAFXssMatchSetXssMatchTupleFieldToMatch represents AWS WAF XssMatchSet XssMatchTuple FieldToMatch
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch.html
type WAFXssMatchSetXssMatchTupleFieldToMatch struct {
	// If you specify HEADER for the Type property, the name of the header
	// that AWS WAF searches for, such as User-Agent or Referer. If you
	// specify any other value for the Type property, do not specify this
	// property.
	Data *StringExpr `json:"Data,omitempty"`

	// The part of the web request in which AWS WAF searches for the target
	// string. For valid values, see FieldToMatch in the AWS WAF API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFXssMatchSetXssMatchTupleFieldToMatchList represents a list of WAFXssMatchSetXssMatchTupleFieldToMatch
type WAFXssMatchSetXssMatchTupleFieldToMatchList []WAFXssMatchSetXssMatchTupleFieldToMatch

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFXssMatchSetXssMatchTupleFieldToMatchList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFXssMatchSetXssMatchTupleFieldToMatch{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFXssMatchSetXssMatchTupleFieldToMatchList{item}
		return nil
	}
	list := []WAFXssMatchSetXssMatchTupleFieldToMatch{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFXssMatchSetXssMatchTupleFieldToMatchList(list)
		return nil
	}
	return err
}

// WAFWebACLAction represents AWS WAF WebACL Action
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-webacl-action.html
type WAFWebACLAction struct {
	// For actions that are associated with a rule, the action that AWS WAF
	// takes when a web request matches all conditions in a rule.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFWebACLActionList represents a list of WAFWebACLAction
type WAFWebACLActionList []WAFWebACLAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFWebACLActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFWebACLAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFWebACLActionList{item}
		return nil
	}
	list := []WAFWebACLAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFWebACLActionList(list)
		return nil
	}
	return err
}

// WAFWebACLRules represents AWS WAF WebACL Rules
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-webacl-rules.html
type WAFWebACLRules struct {
	// The action that Amazon CloudFront (CloudFront) or AWS WAF takes when a
	// web request matches all conditions in the rule, such as allow, block,
	// or count the request.
	Action *WAFWebACLAction `json:"Action,omitempty"`

	// The order in which AWS WAF evaluates the rules in a web ACL. AWS WAF
	// evaluates rules with a lower value before rules with a higher value.
	// The value must be a unique integer. If you have multiple rules in a
	// web ACL, the priority numbers do not need to be consecutive.
	Priority *IntegerExpr `json:"Priority,omitempty"`

	// The ID of an AWS WAF rule to associate with a web ACL.
	RuleId *StringExpr `json:"RuleId,omitempty"`
}

// WAFWebACLRulesList represents a list of WAFWebACLRules
type WAFWebACLRulesList []WAFWebACLRules

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFWebACLRulesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFWebACLRules{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFWebACLRulesList{item}
		return nil
	}
	list := []WAFWebACLRules{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFWebACLRulesList(list)
		return nil
	}
	return err
}

// WAFRegionalByteMatchSetByteMatchTuples represents AWS WAF Regional ByteMatchSet ByteMatchTuples
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-bytematchset-bytematchtuples.html
type WAFRegionalByteMatchSetByteMatchTuples struct {
	// The part of a web request that you want AWS WAF to search, such as a
	// specific header or a query string.
	FieldToMatch *WAFRegionalByteMatchSetByteMatchTuplesFieldToMatch `json:"FieldToMatch,omitempty"`

	// How AWS WAF finds matches within the part of the web request in which
	// you are searching. For valid values, see the PositionalConstraint
	// content for the ByteMatchTuple data type in the AWS WAF Regional API
	// Reference.
	PositionalConstraint *StringExpr `json:"PositionalConstraint,omitempty"`

	// The value that AWS WAF searches for. AWS CloudFormation encodes in
	// base64 this value before sending it to AWS WAF.
	TargetString *StringExpr `json:"TargetString,omitempty"`

	// The base64-encoded value that AWS WAF searches for. AWS CloudFormation
	// sends this value to AWS WAF without encoding it.
	TargetStringBase64 *StringExpr `json:"TargetStringBase64,omitempty"`

	// Specifies how AWS WAF processes the target string value. Text
	// transformations eliminate some of the unusual formatting that
	// attackers use in web requests in an effort to bypass AWS WAF. If you
	// specify a transformation, AWS WAF transforms the target string value
	// before inspecting a web request for a match.
	TextTransformation *StringExpr `json:"TextTransformation,omitempty"`
}

// WAFRegionalByteMatchSetByteMatchTuplesList represents a list of WAFRegionalByteMatchSetByteMatchTuples
type WAFRegionalByteMatchSetByteMatchTuplesList []WAFRegionalByteMatchSetByteMatchTuples

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalByteMatchSetByteMatchTuplesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalByteMatchSetByteMatchTuples{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalByteMatchSetByteMatchTuplesList{item}
		return nil
	}
	list := []WAFRegionalByteMatchSetByteMatchTuples{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalByteMatchSetByteMatchTuplesList(list)
		return nil
	}
	return err
}

// WAFRegionalByteMatchSetByteMatchTuplesFieldToMatch represents AWS WAF Regional ByteMatchSet ByteMatchTuples FieldToMatch
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-bytematchset-bytematchtuples-fieldtomatch.html
type WAFRegionalByteMatchSetByteMatchTuplesFieldToMatch struct {
	// If you specify HEADER for the Type property, the name of the header
	// that AWS WAF searches for, such as User-Agent or Referer. If you
	// specify any other value for the Type property, do not specify this
	// property.
	Data *StringExpr `json:"Data,omitempty"`

	// The part of the web request in which AWS WAF searches for the target
	// string. For valid values, see FieldToMatch in the AWS WAF Regional API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFRegionalByteMatchSetByteMatchTuplesFieldToMatchList represents a list of WAFRegionalByteMatchSetByteMatchTuplesFieldToMatch
type WAFRegionalByteMatchSetByteMatchTuplesFieldToMatchList []WAFRegionalByteMatchSetByteMatchTuplesFieldToMatch

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalByteMatchSetByteMatchTuplesFieldToMatchList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalByteMatchSetByteMatchTuplesFieldToMatch{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalByteMatchSetByteMatchTuplesFieldToMatchList{item}
		return nil
	}
	list := []WAFRegionalByteMatchSetByteMatchTuplesFieldToMatch{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalByteMatchSetByteMatchTuplesFieldToMatchList(list)
		return nil
	}
	return err
}

// WAFRegionalIPSetIPSetDescriptors represents AWS WAF Regional IPSet IPSetDescriptors
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-ipset-ipsetdescriptors.html
type WAFRegionalIPSetIPSetDescriptors struct {
	// The IP address type, such as IPV4. For valid values, see the Type
	// contents of the IPSetDescriptor data type in the AWS WAF Regional API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`

	// An IP address (in CIDR notation) that AWS WAF permits, blocks, or
	// counts. For example, to specify a single IP address such as
	// 192.0.2.44, specify 192.0.2.44/32. To specify a range of IP addresses
	// such as 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24.
	Value *StringExpr `json:"Value,omitempty"`
}

// WAFRegionalIPSetIPSetDescriptorsList represents a list of WAFRegionalIPSetIPSetDescriptors
type WAFRegionalIPSetIPSetDescriptorsList []WAFRegionalIPSetIPSetDescriptors

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalIPSetIPSetDescriptorsList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalIPSetIPSetDescriptors{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalIPSetIPSetDescriptorsList{item}
		return nil
	}
	list := []WAFRegionalIPSetIPSetDescriptors{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalIPSetIPSetDescriptorsList(list)
		return nil
	}
	return err
}

// WAFRegionalRulePredicates represents AWS WAF Regional Rule Predicates
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-rule-predicates.html
type WAFRegionalRulePredicates struct {
	// The unique identifier of a predicate, such as the ID of a ByteMatchSet
	// or IPSet.
	DataId *StringExpr `json:"DataId,omitempty"`

	// Whether to use the settings or the negated settings that you specified
	// in the ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet,
	// or XssMatchSet objects.
	Negated *BoolExpr `json:"Negated,omitempty"`

	// The type of predicate in a rule, such as an IPSet (IPMatch). For valid
	// values, see the Type contents of the Predicate data type in the AWS
	// WAF Regional API Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFRegionalRulePredicatesList represents a list of WAFRegionalRulePredicates
type WAFRegionalRulePredicatesList []WAFRegionalRulePredicates

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalRulePredicatesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalRulePredicates{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalRulePredicatesList{item}
		return nil
	}
	list := []WAFRegionalRulePredicates{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalRulePredicatesList(list)
		return nil
	}
	return err
}

// WAFRegionalSizeConstraintSetSizeConstraint represents AWS WAF Regional SizeConstraintSet SizeConstraint
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-sizeconstraintset-sizeconstraint.html
type WAFRegionalSizeConstraintSetSizeConstraint struct {
	// The type of comparison that you want AWS WAF to perform. AWS WAF uses
	// this value in combination with the Size and FieldToMatch property
	// values to check if the size constraint is a match. For more
	// information and valid values, see the ComparisonOperator content for
	// the SizeConstraint data type in the AWS WAF Regional API Reference.
	ComparisonOperator *StringExpr `json:"ComparisonOperator,omitempty"`

	// The part of a web request that you want AWS WAF to search, such as a
	// specific header or a query string.
	FieldToMatch *WAFRegionalSizeConstraintSetSizeConstraintFieldToMatch `json:"FieldToMatch,omitempty"`

	// The size in bytes that you want AWS WAF to compare against the size of
	// the specified FieldToMatch. AWS WAF uses Size in combination with the
	// ComparisonOperator and FieldToMatch property values to check if the
	// size constraint of a web request is a match. For more information and
	// valid values, see the Size content for the SizeConstraint data type in
	// the AWS WAF Regional API Reference.
	Size *IntegerExpr `json:"Size,omitempty"`

	// Specifies how AWS WAF processes the FieldToMatch property before
	// inspecting a request for a match. Text transformations eliminate some
	// of the unusual formatting that attackers use in web requests in an
	// effort to bypass AWS WAF. If you specify a transformation, AWS WAF
	// transforms the FieldToMatch before inspecting a web request for a
	// match.
	TextTransformation *StringExpr `json:"TextTransformation,omitempty"`
}

// WAFRegionalSizeConstraintSetSizeConstraintList represents a list of WAFRegionalSizeConstraintSetSizeConstraint
type WAFRegionalSizeConstraintSetSizeConstraintList []WAFRegionalSizeConstraintSetSizeConstraint

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalSizeConstraintSetSizeConstraintList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalSizeConstraintSetSizeConstraint{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalSizeConstraintSetSizeConstraintList{item}
		return nil
	}
	list := []WAFRegionalSizeConstraintSetSizeConstraint{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalSizeConstraintSetSizeConstraintList(list)
		return nil
	}
	return err
}

// WAFRegionalSizeConstraintSetSizeConstraintFieldToMatch represents AWS WAF Regional SizeConstraintSet SizeConstraint FieldToMatch
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-sizeconstraintset-sizeconstraint-fieldtomatch.html
type WAFRegionalSizeConstraintSetSizeConstraintFieldToMatch struct {
	// If you specify HEADER for the Type property, the name of the header
	// that AWS WAF searches for, such as User-Agent or Referer. If you
	// specify any other value for the Type property, do not specify this
	// property.
	Data *StringExpr `json:"Data,omitempty"`

	// The part of the web request in which AWS WAF searches for the target
	// string. For valid values, see FieldToMatch in the AWS WAF Regional API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFRegionalSizeConstraintSetSizeConstraintFieldToMatchList represents a list of WAFRegionalSizeConstraintSetSizeConstraintFieldToMatch
type WAFRegionalSizeConstraintSetSizeConstraintFieldToMatchList []WAFRegionalSizeConstraintSetSizeConstraintFieldToMatch

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalSizeConstraintSetSizeConstraintFieldToMatchList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalSizeConstraintSetSizeConstraintFieldToMatch{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalSizeConstraintSetSizeConstraintFieldToMatchList{item}
		return nil
	}
	list := []WAFRegionalSizeConstraintSetSizeConstraintFieldToMatch{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalSizeConstraintSetSizeConstraintFieldToMatchList(list)
		return nil
	}
	return err
}

// WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuples represents AWS WAF Regional SqlInjectionMatchSet SqlInjectionMatchTuples
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-sqlinjectionmatchset-sqlinjectionmatchtuples.html
type WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuples struct {
	// The part of a web request that you want AWS WAF to search, such as a
	// specific header or a query string.
	FieldToMatch *WAFRegionalByteMatchSetByteMatchTuplesFieldToMatch `json:"FieldToMatch,omitempty"`

	// Specifies how AWS WAF processes the FieldToMatch property before
	// inspecting a request for a match.
	TextTransformation *StringExpr `json:"TextTransformation,omitempty"`
}

// WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesList represents a list of WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuples
type WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesList []WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuples

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuples{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesList{item}
		return nil
	}
	list := []WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuples{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesList(list)
		return nil
	}
	return err
}

// WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch represents AWS WAF Regional SqlInjectionMatchSet SqlInjectionMatchTuples FieldToMatch
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-sqlinjectionmatchset-sqlinjectionmatchtuples-fieldtomatch.html
type WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch struct {
	// If you specify HEADER for the Type property, the name of the header
	// that AWS WAF searches for, such as User-Agent or Referer. If you
	// specify any other value for the Type property, do not specify this
	// property.
	Data *StringExpr `json:"Data,omitempty"`

	// The part of the web request in which AWS WAF searches for the target
	// string. For valid values, see FieldToMatch in the AWS WAF Regional API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchList represents a list of WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch
type WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchList []WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchList{item}
		return nil
	}
	list := []WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchList(list)
		return nil
	}
	return err
}

// WAFRegionalXssMatchSetXssMatchTuple represents AWS WAF Regional XssMatchSet XssMatchTuple
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-xssmatchset-xssmatchtuple.html
type WAFRegionalXssMatchSetXssMatchTuple struct {
	// The part of a web request that you want AWS WAF to search, such as a
	// specific header or a query string.
	FieldToMatch *WAFRegionalXssMatchSetXssMatchTupleFieldToMatch `json:"FieldToMatch,omitempty"`

	// Specifies how AWS WAF processes the FieldToMatch property before
	// inspecting a request for a match. Text transformations eliminate some
	// of the unusual formatting that attackers use in web requests in an
	// effort to bypass AWS WAF. If you specify a transformation, AWS WAF
	// transforms theFieldToMatch parameter before inspecting a web request
	// for a match.
	TextTransformation *StringExpr `json:"TextTransformation,omitempty"`
}

// WAFRegionalXssMatchSetXssMatchTupleList represents a list of WAFRegionalXssMatchSetXssMatchTuple
type WAFRegionalXssMatchSetXssMatchTupleList []WAFRegionalXssMatchSetXssMatchTuple

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalXssMatchSetXssMatchTupleList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalXssMatchSetXssMatchTuple{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalXssMatchSetXssMatchTupleList{item}
		return nil
	}
	list := []WAFRegionalXssMatchSetXssMatchTuple{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalXssMatchSetXssMatchTupleList(list)
		return nil
	}
	return err
}

// WAFRegionalXssMatchSetXssMatchTupleFieldToMatch represents AWS WAF Regional XssMatchSet XssMatchTuple FieldToMatch
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-xssmatchset-xssmatchtuple-fieldtomatch.html
type WAFRegionalXssMatchSetXssMatchTupleFieldToMatch struct {
	// If you specify HEADER for the Type property, the name of the header
	// that AWS WAF searches for, such as User-Agent or Referer. If you
	// specify any other value for the Type property, do not specify this
	// property.
	Data *StringExpr `json:"Data,omitempty"`

	// The part of the web request in which AWS WAF searches for the target
	// string. For valid values, see FieldToMatch in the AWS WAF Regional API
	// Reference.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFRegionalXssMatchSetXssMatchTupleFieldToMatchList represents a list of WAFRegionalXssMatchSetXssMatchTupleFieldToMatch
type WAFRegionalXssMatchSetXssMatchTupleFieldToMatchList []WAFRegionalXssMatchSetXssMatchTupleFieldToMatch

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalXssMatchSetXssMatchTupleFieldToMatchList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalXssMatchSetXssMatchTupleFieldToMatch{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalXssMatchSetXssMatchTupleFieldToMatchList{item}
		return nil
	}
	list := []WAFRegionalXssMatchSetXssMatchTupleFieldToMatch{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalXssMatchSetXssMatchTupleFieldToMatchList(list)
		return nil
	}
	return err
}

// WAFRegionalWebACLAction represents AWS WAF Regional WebACL Action
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-webacl-action.html
type WAFRegionalWebACLAction struct {
	// For actions that are associated with a rule, the action that AWS WAF
	// takes when a web request matches all conditions in a rule.
	Type *StringExpr `json:"Type,omitempty"`
}

// WAFRegionalWebACLActionList represents a list of WAFRegionalWebACLAction
type WAFRegionalWebACLActionList []WAFRegionalWebACLAction

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalWebACLActionList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalWebACLAction{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalWebACLActionList{item}
		return nil
	}
	list := []WAFRegionalWebACLAction{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalWebACLActionList(list)
		return nil
	}
	return err
}

// WAFRegionalWebACLRules represents AWS WAF Regional WebACL Rules
//
// see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-webacl-rules.html
type WAFRegionalWebACLRules struct {
	// The action that Amazon CloudFront (CloudFront) or AWS WAF takes when a
	// web request matches all conditions in the rule, such as allow, block,
	// or count the request.
	Action *WAFRegionalWebACLAction `json:"Action,omitempty"`

	// The order in which AWS WAF evaluates the rules in a web ACL. AWS WAF
	// evaluates rules with a lower value before rules with a higher value.
	// The value must be a unique integer. If you have multiple rules in a
	// web ACL, the priority numbers do not need to be consecutive.
	Priority *IntegerExpr `json:"Priority,omitempty"`

	// The ID of an AWS WAF Regional rule to associate with a web ACL.
	RuleId *StringExpr `json:"RuleId,omitempty"`
}

// WAFRegionalWebACLRulesList represents a list of WAFRegionalWebACLRules
type WAFRegionalWebACLRulesList []WAFRegionalWebACLRules

// UnmarshalJSON sets the object from the provided JSON representation
func (l *WAFRegionalWebACLRulesList) UnmarshalJSON(buf []byte) error {
	// Cloudformation allows a single object when a list of objects is expected
	item := WAFRegionalWebACLRules{}
	if err := json.Unmarshal(buf, &item); err == nil {
		*l = WAFRegionalWebACLRulesList{item}
		return nil
	}
	list := []WAFRegionalWebACLRules{}
	err := json.Unmarshal(buf, &list)
	if err == nil {
		*l = WAFRegionalWebACLRulesList(list)
		return nil
	}
	return err
}

// NewResourceByType returns a new resource object correspoding with the provided type
func NewResourceByType(typeName string) ResourceProperties {
	switch typeName {
	case "AWS::ApiGateway::Account":
		return &ApiGatewayAccount{}
	case "AWS::ApiGateway::ApiKey":
		return &ApiGatewayApiKey{}
	case "AWS::ApiGateway::Authorizer":
		return &ApiGatewayAuthorizer{}
	case "AWS::ApiGateway::BasePathMapping":
		return &ApiGatewayBasePathMapping{}
	case "AWS::ApiGateway::ClientCertificate":
		return &ApiGatewayClientCertificate{}
	case "AWS::ApiGateway::Deployment":
		return &ApiGatewayDeployment{}
	case "AWS::ApiGateway::DocumentationPart":
		return &ApiGatewayDocumentationPart{}
	case "AWS::ApiGateway::DocumentationVersion":
		return &ApiGatewayDocumentationVersion{}
	case "AWS::ApiGateway::DomainName":
		return &ApiGatewayDomainName{}
	case "AWS::ApiGateway::GatewayResponse":
		return &ApiGatewayGatewayResponse{}
	case "AWS::ApiGateway::Method":
		return &ApiGatewayMethod{}
	case "AWS::ApiGateway::Model":
		return &ApiGatewayModel{}
	case "AWS::ApiGateway::RequestValidator":
		return &ApiGatewayRequestValidator{}
	case "AWS::ApiGateway::Resource":
		return &ApiGatewayResource{}
	case "AWS::ApiGateway::RestApi":
		return &ApiGatewayRestApi{}
	case "AWS::ApiGateway::Stage":
		return &ApiGatewayStage{}
	case "AWS::ApiGateway::UsagePlan":
		return &ApiGatewayUsagePlan{}
	case "AWS::ApiGateway::UsagePlanKey":
		return &ApiGatewayUsagePlanKey{}
	case "AWS::ApplicationAutoScaling::ScalableTarget":
		return &ApplicationAutoScalingScalableTarget{}
	case "AWS::ApplicationAutoScaling::ScalingPolicy":
		return &ApplicationAutoScalingScalingPolicy{}
	case "AWS::Athena::NamedQuery":
		return &AthenaNamedQuery{}
	case "AWS::AutoScaling::AutoScalingGroup":
		return &AutoScalingAutoScalingGroup{}
	case "AWS::AutoScaling::LaunchConfiguration":
		return &AutoScalingLaunchConfiguration{}
	case "AWS::AutoScaling::LifecycleHook":
		return &AutoScalingLifecycleHook{}
	case "AWS::AutoScaling::ScalingPolicy":
		return &AutoScalingScalingPolicy{}
	case "AWS::AutoScaling::ScheduledAction":
		return &AutoScalingScheduledAction{}
	case "AWS::Batch::ComputeEnvironment":
		return &BatchComputeEnvironment{}
	case "AWS::Batch::JobDefinition":
		return &BatchJobDefinition{}
	case "AWS::Batch::JobQueue":
		return &BatchJobQueue{}
	case "AWS::CertificateManager::Certificate":
		return &CertificateManagerCertificate{}
	case "AWS::Cloud9::EnvironmentEC2":
		return &Cloud9EnvironmentEC2{}
	case "AWS::CloudFormation::Authentication":
		return &CloudFormationAuthentication{}
	case "AWS::CloudFormation::CustomResource":
		return &CloudFormationCustomResource{}
	case "AWS::CloudFormation::Init":
		return &CloudFormationInit{}
	case "AWS::CloudFormation::Interface":
		return &CloudFormationInterface{}
	case "AWS::CloudFormation::Stack":
		return &CloudFormationStack{}
	case "AWS::CloudFormation::WaitCondition":
		return &CloudFormationWaitCondition{}
	case "AWS::CloudFormation::WaitConditionHandle":
		return &CloudFormationWaitConditionHandle{}
	case "AWS::CloudFront::Distribution":
		return &CloudFrontDistribution{}
	case "AWS::CloudFront::CloudFrontOriginAccessIdentity":
		return &CloudFrontCloudFrontOriginAccessIdentity{}
	case "AWS::CloudFront::StreamingDistribution":
		return &CloudFrontStreamingDistribution{}
	case "AWS::CloudTrail::Trail":
		return &CloudTrailTrail{}
	case "AWS::CloudWatch::Alarm":
		return &CloudWatchAlarm{}
	case "AWS::CloudWatch::Dashboard":
		return &CloudWatchDashboard{}
	case "AWS::CodeBuild::Project":
		return &CodeBuildProject{}
	case "AWS::CodeCommit::Repository":
		return &CodeCommitRepository{}
	case "AWS::CodeDeploy::Application":
		return &CodeDeployApplication{}
	case "AWS::CodeDeploy::DeploymentConfig":
		return &CodeDeployDeploymentConfig{}
	case "AWS::CodeDeploy::DeploymentGroup":
		return &CodeDeployDeploymentGroup{}
	case "AWS::CodePipeline::CustomActionType":
		return &CodePipelineCustomAction{}
	case "AWS::CodePipeline::Pipeline":
		return &CodePipelinePipeline{}
	case "AWS::Cognito::IdentityPool":
		return &CognitoIdentityPool{}
	case "AWS::Cognito::IdentityPoolRoleAttachment":
		return &CognitoIdentityPoolRoleAttachment{}
	case "AWS::Cognito::UserPool":
		return &CognitoUserPool{}
	case "AWS::Cognito::UserPoolClient":
		return &CognitoUserPoolClient{}
	case "AWS::Cognito::UserPoolGroup":
		return &CognitoUserPoolGroup{}
	case "AWS::Cognito::UserPoolUser":
		return &CognitoUserPoolUser{}
	case "AWS::Cognito::UserPoolUserToGroupAttachment":
		return &CognitoUserPoolUserToGroupAttachment{}
	case "AWS::Config::ConfigRule":
		return &ConfigConfigRule{}
	case "AWS::Config::ConfigurationRecorder":
		return &ConfigConfigurationRecorder{}
	case "AWS::Config::DeliveryChannel":
		return &ConfigDeliveryChannel{}
	case "AWS::DataPipeline::Pipeline":
		return &DataPipelinePipeline{}
	case "AWS::DAX::Cluster":
		return &DAXCluster{}
	case "AWS::DAX::ParameterGroup":
		return &DAXParameterGroup{}
	case "AWS::DAX::SubnetGroup":
		return &DAXSubnetGroup{}
	case "AWS::DirectoryService::MicrosoftAD":
		return &DirectoryServiceMicrosoftAD{}
	case "AWS::DirectoryService::SimpleAD":
		return &DirectoryServiceSimpleAD{}
	case "AWS::DMS::Certificate":
		return &DMSCertificate{}
	case "AWS::DMS::Endpoint":
		return &DMSEndpoint{}
	case "AWS::DMS::EventSubscription":
		return &DMSEventSubscription{}
	case "AWS::DMS::ReplicationInstance":
		return &DMSReplicationInstance{}
	case "AWS::DMS::ReplicationSubnetGroup":
		return &DMSReplicationSubnetGroup{}
	case "AWS::DMS::ReplicationTask":
		return &DMSReplicationTask{}
	case "AWS::DynamoDB::Table":
		return &DynamoDBTable{}
	case "AWS::EC2::CustomerGateway":
		return &EC2CustomerGateway{}
	case "AWS::EC2::DHCPOptions":
		return &EC2DHCPOptions{}
	case "AWS::EC2::EgressOnlyInternetGateway":
		return &EC2EgressOnlyInternetGateway{}
	case "AWS::EC2::EIP":
		return &EC2EIP{}
	case "AWS::EC2::EIPAssociation":
		return &EC2EIPAssociation{}
	case "AWS::EC2::FlowLog":
		return &EC2FlowLog{}
	case "AWS::EC2::Host":
		return &EC2Host{}
	case "AWS::EC2::Instance":
		return &EC2Instance{}
	case "AWS::EC2::InternetGateway":
		return &EC2InternetGateway{}
	case "AWS::EC2::NatGateway":
		return &EC2NatGateway{}
	case "AWS::EC2::NetworkAcl":
		return &EC2NetworkAcl{}
	case "AWS::EC2::NetworkAclEntry":
		return &EC2NetworkAclEntry{}
	case "AWS::EC2::NetworkInterface":
		return &EC2NetworkInterface{}
	case "AWS::EC2::NetworkInterfaceAttachment":
		return &EC2NetworkInterfaceAttachment{}
	case "AWS::EC2::NetworkInterfacePermission":
		return &EC2NetworkInterfacePermission{}
	case "AWS::EC2::PlacementGroup":
		return &EC2PlacementGroup{}
	case "AWS::EC2::Route":
		return &EC2Route{}
	case "AWS::EC2::RouteTable":
		return &EC2RouteTable{}
	case "AWS::EC2::SecurityGroup":
		return &EC2SecurityGroup{}
	case "AWS::EC2::SecurityGroupEgress":
		return &EC2SecurityGroupEgress{}
	case "AWS::EC2::SecurityGroupIngress":
		return &EC2SecurityGroupIngress{}
	case "AWS::EC2::SpotFleet":
		return &EC2SpotFleet{}
	case "AWS::EC2::Subnet":
		return &EC2Subnet{}
	case "AWS::EC2::SubnetCidrBlock":
		return &EC2SubnetCidrBlock{}
	case "AWS::EC2::SubnetNetworkAclAssociation":
		return &EC2SubnetNetworkAclAssociation{}
	case "AWS::EC2::SubnetRouteTableAssociation":
		return &EC2SubnetRouteTableAssociation{}
	case "AWS::EC2::Volume":
		return &EC2Volume{}
	case "AWS::EC2::VolumeAttachment":
		return &EC2VolumeAttachment{}
	case "AWS::EC2::VPC":
		return &EC2VPC{}
	case "AWS::EC2::VPCCidrBlock":
		return &EC2VPCCidrBlock{}
	case "AWS::EC2::VPCDHCPOptionsAssociation":
		return &EC2VPCDHCPOptionsAssociation{}
	case "AWS::EC2::VPCEndpoint":
		return &EC2VPCEndpoint{}
	case "AWS::EC2::VPCGatewayAttachment":
		return &EC2VPCGatewayAttachment{}
	case "AWS::EC2::VPCPeeringConnection":
		return &EC2VPCPeeringConnection{}
	case "AWS::EC2::VPNConnection":
		return &EC2VPNConnection{}
	case "AWS::EC2::VPNConnectionRoute":
		return &EC2VPNConnectionRoute{}
	case "AWS::EC2::VPNGateway":
		return &EC2VPNGateway{}
	case "AWS::EC2::VPNGatewayRoutePropagation":
		return &EC2VPNGatewayRoutePropagation{}
	case "AWS::ECR::Repository":
		return &ECRRepository{}
	case "AWS::ECS::Cluster":
		return &ECSCluster{}
	case "AWS::ECS::Service":
		return &ECSService{}
	case "AWS::ECS::TaskDefinition":
		return &ECSTaskDefinition{}
	case "AWS::EFS::FileSystem":
		return &EFSFileSystem{}
	case "AWS::EFS::MountTarget":
		return &EFSMountTarget{}
	case "AWS::ElastiCache::CacheCluster":
		return &ElastiCacheCacheCluster{}
	case "AWS::ElastiCache::ParameterGroup":
		return &ElastiCacheParameterGroup{}
	case "AWS::ElastiCache::ReplicationGroup":
		return &ElastiCacheReplicationGroup{}
	case "AWS::ElastiCache::SecurityGroup":
		return &ElastiCacheSecurityGroup{}
	case "AWS::ElastiCache::SecurityGroupIngress":
		return &ElastiCacheSecurityGroupIngress{}
	case "AWS::ElastiCache::SubnetGroup":
		return &ElastiCacheSubnetGroup{}
	case "AWS::ElasticBeanstalk::Application":
		return &ElasticBeanstalkApplication{}
	case "AWS::ElasticBeanstalk::ApplicationVersion":
		return &ElasticBeanstalkApplicationVersion{}
	case "AWS::ElasticBeanstalk::ConfigurationTemplate":
		return &ElasticBeanstalkConfigurationTemplate{}
	case "AWS::ElasticBeanstalk::Environment":
		return &ElasticBeanstalkEnvironment{}
	case "AWS::ElasticLoadBalancing::LoadBalancer":
		return &ElasticLoadBalancingLoadBalancer{}
	case "AWS::ElasticLoadBalancingV2::Listener":
		return &ElasticLoadBalancingV2Listener{}
	case "AWS::ElasticLoadBalancingV2::ListenerCertificate":
		return &ElasticLoadBalancingV2ListenerCertificate{}
	case "AWS::ElasticLoadBalancingV2::ListenerRule":
		return &ElasticLoadBalancingV2ListenerRule{}
	case "AWS::ElasticLoadBalancingV2::LoadBalancer":
		return &ElasticLoadBalancingV2LoadBalancer{}
	case "AWS::ElasticLoadBalancingV2::TargetGroup":
		return &ElasticLoadBalancingV2TargetGroup{}
	case "AWS::Elasticsearch::Domain":
		return &ElasticsearchDomain{}
	case "AWS::EMR::Cluster":
		return &EMRCluster{}
	case "AWS::EMR::InstanceFleetConfig":
		return &EMRInstanceFleetConfig{}
	case "AWS::EMR::InstanceGroupConfig":
		return &EMRInstanceGroupConfig{}
	case "AWS::EMR::SecurityConfiguration":
		return &EMRSecurityConfiguration{}
	case "AWS::EMR::Step":
		return &EMRStep{}
	case "AWS::Events::Rule":
		return &EventsRule{}
	case "AWS::GameLift::Alias":
		return &GameLiftAlias{}
	case "AWS::GameLift::Build":
		return &GameLiftBuild{}
	case "AWS::GameLift::Fleet":
		return &GameLiftFleet{}
	case "AWS::Glue::Classifier":
		return &GlueClassifier{}
	case "AWS::Glue::Connection":
		return &GlueConnection{}
	case "AWS::Glue::Crawler":
		return &GlueCrawler{}
	case "AWS::Glue::Database":
		return &GlueDatabase{}
	case "AWS::Glue::DevEndpoint":
		return &GlueDevEndpoint{}
	case "AWS::Glue::Job":
		return &GlueJob{}
	case "AWS::Glue::Partition":
		return &GluePartition{}
	case "AWS::Glue::Table":
		return &GlueTable{}
	case "AWS::Glue::Trigger":
		return &GlueTrigger{}
	case "AWS::GuardDuty::Detector":
		return &GuardDutyDetector{}
	case "AWS::GuardDuty::IPSet":
		return &GuardDutyIPSet{}
	case "AWS::GuardDuty::ThreatIntelSet":
		return &GuardDutyThreatIntelSet{}
	case "AWS::IAM::AccessKey":
		return &IAMAccessKey{}
	case "AWS::IAM::Group":
		return &IAMGroup{}
	case "AWS::IAM::InstanceProfile":
		return &IAMInstanceProfile{}
	case "AWS::IAM::ManagedPolicy":
		return &IAMManagedPolicy{}
	case "AWS::IAM::Policy":
		return &IAMPolicy{}
	case "AWS::IAM::Role":
		return &IAMRole{}
	case "AWS::IAM::User":
		return &IAMUser{}
	case "AWS::Inspector::AssessmentTarget":
		return &InspectorAssessmentTarget{}
	case "AWS::Inspector::AssessmentTemplate":
		return &InspectorAssessmentTemplate{}
	case "AWS::Inspector::ResourceGroup":
		return &InspectorResourceGroup{}
	case "AWS::IAM::UserToGroupAddition":
		return &IAMUserToGroupAddition{}
	case "AWS::IoT::Certificate":
		return &IoTCertificate{}
	case "AWS::IoT::Policy":
		return &IoTPolicy{}
	case "AWS::IoT::PolicyPrincipalAttachment":
		return &IoTPolicyPrincipalAttachment{}
	case "AWS::IoT::Thing":
		return &IoTThing{}
	case "AWS::IoT::ThingPrincipalAttachment":
		return &IoTThingPrincipalAttachment{}
	case "AWS::IoT::TopicRule":
		return &IoTTopicRule{}
	case "AWS::Kinesis::Stream":
		return &KinesisStream{}
	case "AWS::KinesisAnalytics::Application":
		return &KinesisAnalyticsApplication{}
	case "AWS::KinesisAnalytics::ApplicationOutput":
		return &KinesisAnalyticsApplicationOutput{}
	case "AWS::KinesisAnalytics::ApplicationReferenceDataSource":
		return &KinesisAnalyticsApplicationReferenceDataSource{}
	case "AWS::KinesisFirehose::DeliveryStream":
		return &KinesisFirehoseDeliveryStream{}
	case "AWS::KMS::Alias":
		return &KMSAlias{}
	case "AWS::KMS::Key":
		return &KMSKey{}
	case "AWS::Lambda::EventSourceMapping":
		return &LambdaEventSourceMapping{}
	case "AWS::Lambda::Alias":
		return &LambdaAlias{}
	case "AWS::Lambda::Function":
		return &LambdaFunction{}
	case "AWS::Lambda::Permission":
		return &LambdaPermission{}
	case "AWS::Lambda::Version":
		return &LambdaVersion{}
	case "AWS::Logs::Destination":
		return &LogsDestination{}
	case "AWS::Logs::LogGroup":
		return &LogsLogGroup{}
	case "AWS::Logs::LogStream":
		return &LogsLogStream{}
	case "AWS::Logs::MetricFilter":
		return &LogsMetricFilter{}
	case "AWS::Logs::SubscriptionFilter":
		return &LogsSubscriptionFilter{}
	case "AWS::OpsWorks::App":
		return &OpsWorksApp{}
	case "AWS::OpsWorks::ElasticLoadBalancerAttachment":
		return &OpsWorksElasticLoadBalancerAttachment{}
	case "AWS::OpsWorks::Instance":
		return &OpsWorksInstance{}
	case "AWS::OpsWorks::Layer":
		return &OpsWorksLayer{}
	case "AWS::OpsWorks::Stack":
		return &OpsWorksStack{}
	case "AWS::OpsWorks::UserProfile":
		return &OpsWorksUserProfile{}
	case "AWS::OpsWorks::Volume":
		return &OpsWorksVolume{}
	case "AWS::RDS::DBCluster":
		return &RDSDBCluster{}
	case "AWS::RDS::DBClusterParameterGroup":
		return &RDSDBClusterParameterGroup{}
	case "AWS::RDS::DBInstance":
		return &RDSDBInstance{}
	case "AWS::RDS::DBParameterGroup":
		return &RDSDBParameterGroup{}
	case "AWS::RDS::DBSecurityGroup":
		return &RDSDBSecurityGroup{}
	case "AWS::RDS::DBSecurityGroupIngress":
		return &RDSDBSecurityGroupIngress{}
	case "AWS::RDS::DBSubnetGroup":
		return &RDSDBSubnetGroup{}
	case "AWS::RDS::EventSubscription":
		return &RDSEventSubscription{}
	case "AWS::RDS::OptionGroup":
		return &RDSOptionGroup{}
	case "AWS::Redshift::Cluster":
		return &RedshiftCluster{}
	case "AWS::Redshift::ClusterParameterGroup":
		return &RedshiftClusterParameterGroup{}
	case "AWS::Redshift::ClusterSecurityGroup":
		return &RedshiftClusterSecurityGroup{}
	case "AWS::Redshift::ClusterSecurityGroupIngress":
		return &RedshiftClusterSecurityGroupIngress{}
	case "AWS::Redshift::ClusterSubnetGroup":
		return &RedshiftClusterSubnetGroup{}
	case "AWS::Route53::HealthCheck":
		return &Route53HealthCheck{}
	case "AWS::Route53::HostedZone":
		return &Route53HostedZone{}
	case "AWS::Route53::RecordSet":
		return &Route53RecordSet{}
	case "AWS::Route53::RecordSetGroup":
		return &Route53RecordSetGroup{}
	case "AWS::S3::Bucket":
		return &S3Bucket{}
	case "AWS::S3::BucketPolicy":
		return &S3BucketPolicy{}
	case "AWS::SDB::Domain":
		return &SDBDomain{}
	case "AWS::ServiceDiscovery::Instance":
		return &ServiceDiscoveryInstance{}
	case "AWS::ServiceDiscovery::PrivateDnsNamespace":
		return &ServiceDiscoveryPrivateDnsNamespace{}
	case "AWS::ServiceDiscovery::PublicDnsNamespace":
		return &ServiceDiscoveryPublicDnsNamespace{}
	case "AWS::ServiceDiscovery::Service":
		return &ServiceDiscoveryService{}
	case "AWS::SNS::Subscription":
		return &SNSSubscription{}
	case "AWS::SNS::Topic":
		return &SNSTopic{}
	case "AWS::SNS::TopicPolicy":
		return &SNSTopicPolicy{}
	case "AWS::SQS::Queue":
		return &SQSQueue{}
	case "AWS::SQS::QueuePolicy":
		return &SQSQueuePolicy{}
	case "AWS::SSM::Association":
		return &SSMAssociation{}
	case "AWS::SSM::Document":
		return &SSMDocument{}
	case "AWS::SSM::MaintenanceWindow":
		return &SSMMaintenanceWindow{}
	case "AWS::SSM::MaintenanceWindowTarget":
		return &SSMMaintenanceWindowTarget{}
	case "AWS::SSM::MaintenanceWindowTask":
		return &SSMMaintenanceWindowTask{}
	case "AWS::SSM::Parameter":
		return &SSMParameter{}
	case "AWS::SSM::PatchBaseline":
		return &SSMPatchBaseline{}
	case "AWS::StepFunctions::Activity":
		return &StepFunctionsActivity{}
	case "AWS::StepFunctions::StateMachine":
		return &StepFunctionsStateMachine{}
	case "AWS::WAF::ByteMatchSet":
		return &WAFByteMatchSet{}
	case "AWS::WAF::IPSet":
		return &WAFIPSet{}
	case "AWS::WAF::Rule":
		return &WAFRule{}
	case "AWS::WAF::SizeConstraintSet":
		return &WAFSizeConstraintSet{}
	case "AWS::WAF::SqlInjectionMatchSet":
		return &WAFSqlInjectionMatchSet{}
	case "AWS::WAF::WebACL":
		return &WAFWebACL{}
	case "AWS::WAF::XssMatchSet":
		return &WAFXssMatchSet{}
	case "AWS::WAFRegional::ByteMatchSet":
		return &WAFRegionalByteMatchSet{}
	case "AWS::WAFRegional::IPSet":
		return &WAFRegionalIPSet{}
	case "AWS::WAFRegional::Rule":
		return &WAFRegionalRule{}
	case "AWS::WAFRegional::SizeConstraintSet":
		return &WAFRegionalSizeConstraintSet{}
	case "AWS::WAFRegional::SqlInjectionMatchSet":
		return &WAFRegionalSqlInjectionMatchSet{}
	case "AWS::WAFRegional::WebACL":
		return &WAFRegionalWebACL{}
	case "AWS::WAFRegional::WebACLAssociation":
		return &WAFRegionalWebACLAssociation{}
	case "AWS::WAFRegional::XssMatchSet":
		return &WAFRegionalXssMatchSet{}
	case "AWS::WorkSpaces::Workspace":
		return &WorkSpacesWorkspace{}

	default:
		for _, eachProvider := range customResourceProviders {
			customType := eachProvider(typeName)
			if nil != customType {
				return customType
			}
		}
	}
	return nil
}
